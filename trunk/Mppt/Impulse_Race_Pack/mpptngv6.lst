MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;**********************************************************************
                      00002 ;   P R O G R A M M     MPPTnGv4                                          *
                      00003 ;                                                                     *
                      00004 ;   Traking program for MPPT new generation Version 3                 *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      mpptngv6.asm                                      *
                      00008 ;    Date:          15.11.00                                          *
                      00009 ;    Last Update:   16.2.05                                           *
                      00010 ;    File Version:  V4.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        Michael Zürcher, Christoph Raible                 *
                      00013 ;                                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab, drivetek ag                           *
                      00015 ;                                                                     *
                      00016 ;    Changes:       Adated for redesigned HW V3.0                             *
                      00017 ;                                                                     *
                      00018 ;**********************************************************************
                      00019 ;                                                                     *
                      00020 ;    Files required:                                                  *
                      00021 ;                                                                     *
                      00022 ;    - P16f877.INC      Basic includes                                    *
                      00023 ;    - MCP2510.INC                                                    *
                      00024 ;    - MACROS16.INC                                                   *
                      00025 ;    - USER.INC                                                       *
                      00026 ;    - ADC.ASM                                                        *
                      00027 ;    - CAN.ASM                                                        *
                      00028 ;    - CHARGE.ASM                                                     *
                      00029 ;    - INTERPT.ASM                                                    *
                      00030 ;    - INIT.ASM                                                       *
                      00031 ;    - NOLOAD.ASM                                                     *
                      00032 ;    - PWM.ASM                                                        *
                      00033 ;    - SPI.ASM                                                        *
                      00034 ;    - TEMP.ASM                                                       *
                      00035 ;    - TRACK.ASM                                                      *
                      00036 ;    - CELSIUS.ASM                                                    *
                      00037 ;                                                                     *
                      00038 ;**********************************************************************
                      00039 ;                                                                     *
                      00040 ;    Notes:                                                           *
                      00041 ;                                                                     *
                      00042 ;    - Program written for Flash PIC16F877                            *
                      00043 ;    - Programming via ICSP                                           *
                      00044 ;    - Clock Frequency 20MHz                                          *
                      00045 ;                                                                     *
                      00046 ;**********************************************************************
                      00047 
                      00048 
                      00049                 list p=16f877               ; list directive to define processor
                      00050 #include        "P16F877.INC"           ; processor specific variable definitions
                      00001         LIST
                      00002 ; P16F877.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00373         LIST
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00051 #include        "MCP2510.INC"           ; defs for CANbus Controller
                      00001 ;----------------------------------------------------------------------
                      00002 ; MCP2510.INC
                      00003 ; Description:  This file contains the definitions for the MicroChip
                      00004 ; standalone CANbus controller.
                      00005 ;
                      00006 ; 07/17/99 JPF Original Version
                      00007 ; 09/11/99 JCT Modified for ASM
                      00008 ;----------------------------------------------------------------------
                      00009 
                      00010 #define RXF0SIDH        0x00
                      00011 #define RXF0SIDL        0x01
                      00012 #define RXF0EID8        0x02
                      00013 #define RXF0EID0        0x03
                      00014 #define RXF1SIDH        0x04
                      00015 #define RXF1SIDL        0x05
                      00016 #define RXF1EID8        0x06
                      00017 #define RXF1EID0        0x07
                      00018 #define RXF2SIDH        0x08
                      00019 #define RXF2SIDL        0x09
                      00020 #define RXF2EID8        0x0A
                      00021 #define RXF2EID0        0x0B
                      00022 #define BFPCTRL         0x0C
                      00023 #define TXRTSCTRL       0x0D
                      00024 #define CANSTAT         0x0E
                      00025 #define CANCTRL         0x0F
                      00026 
                      00027 #define RXF3SIDH        0x10
                      00028 #define RXF3SIDL        0x11
                      00029 #define RXF3EID8        0x12
                      00030 #define RXF3EID0        0x13
                      00031 #define RXF4SIDH        0x14
                      00032 #define RXF4SIDL        0x15
                      00033 #define RXF4EID8        0x16
                      00034 #define RXF4EID0        0x17
                      00035 #define RXF5SIDH        0x18
                      00036 #define RXF5SIDL        0x19
                      00037 #define RXF5EID8        0x1A
                      00038 #define RXF5EID0        0x1B
                      00039 #define TEC             0x1C
                      00040 #define REC             0x1D
                      00041 #define CANSTAT1        0x1E
                      00042 #define CANCTRL1        0x1F
                      00043 
                      00044 #define RXM0SIDH        0x20
                      00045 #define RXM0SIDL        0x21
                      00046 #define RXM0EID8        0x22
                      00047 #define RXM0EID0        0x23
                      00048 #define RXM1SIDH        0x24
                      00049 #define RXM1SIDL        0x25
                      00050 #define RXM1EID8        0x26
                      00051 #define RXM1EID0        0x27
                      00052 #define CNF3            0x28
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00053 #define CNF2            0x29
                      00054 #define CNF1            0x2A
                      00055 #define CANINTE         0x2B
                      00056 #define CANINTF         0x2C
                      00057 #define EFLG            0x2D
                      00058 #define CANSTAT2        0x2E
                      00059 #define CANCTRL2        0x2F
                      00060 
                      00061 #define TXB0CTRL        0x30
                      00062 #define TXB0SIDH        0x31
                      00063 #define TXB0SIDL        0x32
                      00064 #define TXB0EID8        0x33
                      00065 #define TXB0EID0        0x34
                      00066 #define TXB0DLC         0x35
                      00067 #define TXB0D0          0x36
                      00068 #define TXB0D1          0x37
                      00069 #define TXB0D2          0x38
                      00070 #define TXB0D3          0x39
                      00071 #define TXB0D4          0x3A
                      00072 #define TXB0D5          0x3B
                      00073 #define TXB0D6          0x3C
                      00074 #define TXB0D7          0x3D
                      00075 #define CANSTAT3        0x3E
                      00076 #define CANCTRL3        0x3F
                      00077 
                      00078 #define TXB1CTRL        0x40
                      00079 #define TXB1SIDH        0x41
                      00080 #define TXB1SIDL        0x42
                      00081 #define TXB1EID8        0x43
                      00082 #define TXB1EID0        0x44
                      00083 #define TXB1DLC         0x45
                      00084 #define TXB1D0          0x46
                      00085 #define TXB1D1          0x47
                      00086 #define TXB1D2          0x48
                      00087 #define TXB1D3          0x49
                      00088 #define TXB1D4          0x4A
                      00089 #define TXB1D5          0x4B
                      00090 #define TXB1D6          0x4C
                      00091 #define TXB1D7          0x4D
                      00092 #define CANSTAT4        0x4E
                      00093 #define CANCTRL4        0x4F
                      00094 
                      00095 #define TXB2CTRL        0x50
                      00096 #define TXB2SIDH        0x51
                      00097 #define TXB2SIDL        0x52
                      00098 #define TXB2EID8        0x53
                      00099 #define TXB2EID0        0x54
                      00100 #define TXB2DLC         0x55
                      00101 #define TXB2D0          0x56
                      00102 #define TXB2D1          0x57
                      00103 #define TXB2D2          0x58
                      00104 #define TXB2D3          0x59
                      00105 #define TXB2D4          0x5A
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00106 #define TXB2D5          0x5B
                      00107 #define TXB2D6          0x5C
                      00108 #define TXB2D7          0x5D
                      00109 #define CANSTAT5        0x5E
                      00110 #define CANCTRL5        0x5F
                      00111 
                      00112 #define RXB0CTRL        0x60
                      00113 #define RXB0SIDH        0x61
                      00114 #define RXB0SIDL        0x62
                      00115 #define RXB0EID8        0x63
                      00116 #define RXB0EID0        0x64
                      00117 #define RXB0DLC         0x65
                      00118 #define RXB0D0          0x66
                      00119 #define RXB0D1          0x67
                      00120 #define RXB0D2          0x68
                      00121 #define RXB0D3          0x69
                      00122 #define RXB0D4          0x6A
                      00123 #define RXB0D5          0x6B
                      00124 #define RXB0D6          0x6C
                      00125 #define RXB0D7          0x6D
                      00126 #define CANSTAT6        0x6E
                      00127 #define CANCTRL6        0x6F
                      00128 
                      00129 #define RXB1CTRL        0x70
                      00130 #define RXB1SIDH        0x71
                      00131 #define RXB1SIDL        0x72
                      00132 #define RXB1EID8        0x73
                      00133 #define RXB1EID0        0x74
                      00134 #define RXB1DLC         0x75
                      00135 #define RXB1D0          0x76
                      00136 #define RXB1D1          0x77
                      00137 #define RXB1D2          0x78
                      00138 #define RXB1D3          0x79
                      00139 #define RXB1D4          0x7A
                      00140 #define RXB1D5          0x7B
                      00141 #define RXB1D6          0x7C
                      00142 #define RXB1D7          0x7D
                      00143 #define CANSTAT7        0x7E
                      00144 #define CANCTRL7        0x7F
                      00145 
                      00146 ;; Bit definitions
                      00147 
                      00148 ;; Bit definitions BFPCTRL
                      00149 #define trB1BFS BFPCTRL,5
                      00150 #define trB0BFS BFPCTRL,4
                      00151 #define trB1BFE BFPCTRL,3
                      00152 #define trB0BFE BFPCTRL,2
                      00153 #define trB1BFM BFPCTRL,1
                      00154 #define trB0BFM BFPCTRL,0
                      00155 
                      00156 ;; Bit definitions TXRTSCTRL
                      00157 #define trB2RTS BFPCTRL,5
                      00158 #define trB1RTS BFPCTRL,4
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00159 #define trB0RTS BFPCTRL,3
                      00160 #define trB2RTSM        BFPCTRL,2
                      00161 #define trB1RTSM        BFPCTRL,1
                      00162 #define trB0RTSM        BFPCTRL,0
                      00163 
                      00164 ;; Bit definitions CANSTAT
                      00165 #define trOPMOD2        CANSTAT,7
                      00166 #define trOPMOD1        CANSTAT,6
                      00167 #define trOPMOD0        CANSTAT,5
                      00168 #define trICOD2 CANSTAT,3
                      00169 #define trICOD1 CANSTAT,2
                      00170 #define trICOD0 CANSTAT,1
                      00171 
                      00172 ;; Bit definitions CANCTRL
                      00173 #define trREQOP2        CANCTRL,7
                      00174 #define trREQOP1        CANCTRL,6
                      00175 #define trREQOP0        CANCTRL,5
                      00176 #define trABAT  CANCTRL,4
                      00177 #define trCLKEN CANCTRL,2
                      00178 #define trCLKPRE1       CANCTRL,1
                      00179 #define trCLKPRE0       CANCTRL,0
                      00180 
                      00181 ;; Dit definitions CNF3
                      00182 #define trWAKFIL        CNF3,6
                      00183 #define trPHSEG22       CNF3,2
                      00184 #define trPHSEG21       CNF3,1
                      00185 #define trPHSEG20       CNF3,0
                      00186 
                      00187 ;; Bit definitions CNF2
                      00188 #define trBTLMODE       CNF2,7
                      00189 #define trSAM   CNF2,6
                      00190 #define trPHSEG12       CNF2,5
                      00191 #define trPHSEG11       CNF2,4
                      00192 #define trPHSEG10       CNF2,3
                      00193 #define trPHSEG2        CNF2,2
                      00194 #define trPHSEG1        CNF2,1
                      00195 #define trPHSEG0        CNF2,0
                      00196 
                      00197 ;; Bit definitions CNF1
                      00198 #define trSJW1  CNF1,7
                      00199 #define trSJW0  CNF1,6
                      00200 #define trBRP5  CNF1,5
                      00201 #define trBRP4  CNF1,4
                      00202 #define trBRP3  CNF1,3
                      00203 #define trBRP2  CNF1,2
                      00204 #define trBRP1  CNF1,1
                      00205 #define trBRP0  CNF1,0
                      00206 
                      00207 ;; Bit definitions CANINTE
                      00208 #define trMERRE CANINTE,7
                      00209 #define trWAKIE CANINTE,6
                      00210 #define trERRIE CANINTE,5
                      00211 #define trTX2IE CANINTE,4
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00212 #define trTX1IE CANINTE,3
                      00213 #define trTX0IE CANINTE,2
                      00214 #define trRX1IE CANINTE,1
                      00215 #define trRX0IE CANINTE,0
                      00216 
                      00217 ;; Bit definitions CANINTF
                      00218 #define trMERRF CANINTF,7
                      00219 #define trWAKIF CANINTF,6
                      00220 #define trERRIF CANINTF,5
                      00221 #define trTX2IF CANINTF,4
                      00222 #define trTX1IF CANINTF,3
                      00223 #define trTX0IF CANINTF,2
                      00224 #define trRX1IF CANINTF,1
                      00225 #define trRX0IF CANINTF,0
                      00226 
                      00227 ;; Bit definitions EFLG
                      00228 #define trRX1OVR        EFLG,7
                      00229 #define trRX0OVR        EFLG,6
                      00230 #define trTXB0  EFLG,5
                      00231 #define trTXEP  EFLG,4
                      00232 #define trRXEP  EFLG,3
                      00233 #define trTXWAR EFLG,2
                      00234 #define trRXWAR EFLG,1
                      00235 #define trEWARN EFLG,0
                      00236 
                      00237 ;; Bit definitions TXB0CTRL
                      00238 #define trABTF0 TXB0CTRL,6
                      00239 #define trMLOA0 TXB0CTRL,5
                      00240 #define trTXERR0        TXB0CTRL,4
                      00241 #define trTXREQ0        TXB0CTRL,3
                      00242 #define trTXP10 TXB0CTRL,1
                      00243 #define trTXP00 TXB0CTRL,0
                      00244 
                      00245 ;; Bit definitions TXB1CTRL
                      00246 #define trABTF1 TXB1CTRL,6
                      00247 #define trMLOA1 TXB1CTRL,5
                      00248 #define trTXERR1        TXB1CTRL,4
                      00249 #define trTXREQ1        TXB1CTRL,3
                      00250 #define trTXP11 TXB1CTRL,1
                      00251 #define trTXP01 TXB1CTRL,0
                      00252 
                      00253 ;; Bit definitions TXB2CTRL
                      00254 #define trABTF2 TXB2CTRL,6
                      00255 #define trMLOA2 TXB2CTRL,5
                      00256 #define trTXERR2        TXB2CTRL,4
                      00257 #define trTXREQ2        TXB2CTRL,3
                      00258 #define trTXP12 TXB2CTRL,1
                      00259 #define trTXP02 TXB2CTRL,0
                      00260 
                      00261 ;; Bit definitions RXB0CTRL
                      00262 #define trRXM10 RXB0CTRL,6
                      00263 #define trRXM00 RXB0CTRL,5
                      00264 #define trRXRTR0        RXB0CTRL,3
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00265 #define trBUKT01        RXB0CTRL,2
                      00266 #define trBUKT00        RXB0CTRL,1
                      00267 #define trFILHIT00      RXB0CTRL,0
                      00268 
                      00269 ;; Bit definitions RXB1CTRL
                      00270 #define trRXM11 RXB1CTRL,6
                      00271 #define trRXM01 RXB1CTRL,5
                      00272 #define trRXRTR1        RXB1CTRL,3
                      00273 #define trFILHIT12      RXB1CTRL,2
                      00274 #define trFILHIT11      RXB1CTRL,1
                      00275 #define trFILHIT10      RXB1CTRL,0
                      00276 
                      00277 
                      00278 ;; use with SPI_Rts function
                      00279 #define RTS0        0x01 
                      00280 #define RTS1        0x02
                      00281 #define RTS2        0x04
                      00052 #include        "MACROS16.INC"          ; basic Macros for PIC16 Series
                      00001 ;Basic macros for PIC16C series
                      00002 ;6/20/98
                      00003 
                      00004 #ifdef __16C77
                      00005 #define _COMMONBANK  ; use common upper 16 bytes in 4 banks
                      00006 #endif
                      00007 #ifdef __16C76
                      00008 #define _COMMONBANK  ; use common upper 16 bytes in 4 banks
                      00009 #endif
                      00010 
  00000001            00011 TRUE            equ     1
  00000000            00012 FALSE           equ     0  
                      00013 
                      00014 ; Page 1 register definitions to avoid page warning
                      00015 
  00000001            00016 OPTION_REG_P                 EQU     H'0081'-0x80
  00000005            00017 TRISA_P                      EQU     H'0085'-0x80
  00000006            00018 TRISB_P                      EQU     H'0086'-0x80
  00000007            00019 TRISC_P                      EQU     H'0087'-0x80
  00000008            00020 TRISD_P                      EQU     H'0088'-0x80
  00000009            00021 TRISE_P                      EQU     H'0089'-0x80
  0000000C            00022 PIE1_P                       EQU     H'008C'-0x80
  0000000D            00023 PIE2_P                       EQU     H'008D'-0x80
  0000000E            00024 PCON_P                       EQU     H'008E'-0x80
  00000012            00025 PR2_P                        EQU     H'0092'-0x80
  00000013            00026 SSPADD_P                     EQU     H'0093'-0x80
  00000014            00027 SSPSTAT_P                    EQU     H'0094'-0x80
  00000018            00028 TXSTA_P                      EQU     H'0098'-0x80
  00000019            00029 SPBRG_P                      EQU     H'0099'-0x80
  0000001F            00030 ADCON1_P                     EQU     H'009F'-0x80
                      00031 
                      00032 
                      00033 
                      00034 ; Special register bit definition pairs
                      00035 
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00036 ;     STATUS bit definitions
                      00037 
                      00038 #define _C              STATUS,0
                      00039 #define _DC             STATUS,1
                      00040 #define _Z              STATUS,2
                      00041 #define _PD             STATUS,3
                      00042 #define _TO             STATUS,4
                      00043 #define _RP0            STATUS,5
                      00044 #define _RP1            STATUS,6
                      00045 #define _IRP            STATUS,7
                      00046 
                      00047 
                      00048 #define _INTE       INTCON,INTE   ; External interrupt enable 
                      00049 #define _INTF       INTCON,INTF   ; External interrupt flag
                      00050 #define _RBIE       INTCON,RBIE   ; Port B pins 4-7 edge interrupt enable 
                      00051 #define _RBIF       INTCON,RBIF   ; Port B pins 4-7 edge interrupt flag
                      00052 #define _T0IE       INTCON,T0IE   ; Timer 0 interrupt enable 
                      00053 #define _T0IF       INTCON,T0IF   ; Timer 0 interrupt flag
                      00054 
                      00055 #define _CCP1IE_P   PIE1_P,CCP1IE ; Timer 1 compare int enable (page 1)
                      00056 #define _CCP1IF     PIR1,CCP1IF   ; Timer 1 compare int flag
                      00057 
                      00058 #define _RCIE_P     PIE1_P,RCIE   ; async rec interrupt enable (page 1)
                      00059 #define _RCIF       PIR1,RCIF     ; async rec interrupt flag
                      00060 
                      00061 #define _TXIE_P     PIE1_P,TXIE   ; async xmit interrupt enable (page 1)
                      00062 #define _TXIF       PIR1,TXIF     ; async xmit interrupt flag
                      00063 
                      00064 #define _SSPIE_P    PIE1_P,SSPIE  ; SSP int enable (page 1)
                      00065 #define _SSPIF      PIR1,SSPIE    ; SSP interrupt flag
                      00066 
                      00067 #define _TMR1IE_P   PIE1_P,TMR1IE ; Timer 1 enable (page 1)
                      00068 #define _TMR1IF     PIR1,TMR1IF   ; Timer1 interrupt flag
                      00069 
                      00070 #define _TMR2IE_P   PIE1_P,TMR2IE ; Timer 2 enable (page 1)
                      00071 #define _TMR2IF     PIR1,TMR2IF   ; Timer2 interrupt flag
                      00072 
                      00073 #ifdef _COMMONBANK ; use common upper 16 bytes in 4 banks
                      00074 
                      00075 PAGE3   macro   
                      00076         bsf     PCLATH,4
                      00077         bsf     PCLATH,3
                      00078         endm
                      00079 
                      00080 PAGE2   macro
                      00081         bsf     PCLATH,4
                      00082         bcf     PCLATH,3
                      00083         endm
                      00084 
                      00085 PAGE1   macro   
                      00086         bcf     PCLATH,4
                      00087         bsf     PCLATH,3
                      00088         endm
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00089 
                      00090 PAGE0   macro
                      00091         bcf     PCLATH,4
                      00092         bcf     PCLATH,3
                      00093         endm
                      00094 
                      00095 
                      00096 BANK3   macro
                      00097         bsf     STATUS,6
                      00098         bsf     STATUS,5
                      00099         endm
                      00100 
                      00101 BANK2   macro
                      00102         bsf     STATUS,6
                      00103         bcf     STATUS,5
                      00104         endm
                      00105 
                      00106 BANK1   macro
                      00107         bcf     STATUS,6
                      00108         bsf     STATUS,5
                      00109         endm
                      00110 
                      00111 BANK0   macro
                      00112         bcf     STATUS,6
                      00113         bcf     STATUS,5
                      00114         endm
                      00115 
                      00116 
                      00117 FSRBank23 macro
                      00118         bsf     STATUS,7
                      00119         endm
                      00120 
                      00121 FSRBank01 macro
                      00122         bcf     STATUS,7
                      00123         endm
                      00124 #else
                      00125 
                      00126 
                      00127 PAGE1   macro   
                      00128         bsf     PCLATH,3
                      00129         endm
                      00130 
                      00131 PAGE0   macro
                      00132         bcf     PCLATH,3
                      00133         endm
                      00134 
                      00135 BANK0   macro
                      00136         bcf     STATUS,5    ; Select page 0
                      00137         endm
                      00138 
                      00139 BANK1   macro
                      00140         bsf     STATUS,5    ; Select page 1
                      00141         endm
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00142 #endif
                      00143 
                      00144 enableInt macro
                      00145         bsf     INTCON,GIE
                      00146         endm
                      00147 
                      00148 disableInt macro
                      00149           local    Loop
                      00150 Loop    bcf     INTCON,GIE
                      00151         btfsc   INTCON,GIE
                      00152         goto    Loop
                      00153         endm
                      00154 
                      00155 
                      00156 
                      00157 ; Byte logical & arithmetic macros
                      00158 
                      00159 bV2bV   macro   bSource,bDest
                      00160         movf    bSource,W
                      00161         movwf   bDest
                      00162         endm
                      00163 
                      00164 bL2bV   macro   bVal,bDest
                      00165         movlw   bVal
                      00166         movwf   bDest
                      00167         endm
                      00168 
                      00169 jmpFeqZ macro   Reg,Label
                      00170         movf    Reg,F
                      00171         btfsc   _Z
                      00172         goto    Label
                      00173         endm
                      00174 
                      00175 jmpFneZ macro   Reg,Label
                      00176         movf    Reg,F
                      00177         btfss   _Z
                      00178         goto    Label
                      00179         endm
                      00180 
                      00181 jmpFgtL macro   Reg1,bVal,Label
                      00182           movfw     Reg1
                      00183           jmpWgtL   bVal,Label
                      00184         endm
                      00185 
                      00186 jmpFgeL macro   Reg1,bVal,Label
                      00187           movfw     Reg1
                      00188           jmpWgeL   bVal,Label
                      00189         endm
                      00190 
                      00191 jmpFeqL macro   Reg,bVal,Label
                      00192         movf    Reg,W
                      00193           sublw   bVal
                      00194         btfsc   _Z
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00195         goto    Label
                      00196         endm
                      00197 
                      00198 jmpFneL macro   Reg,bVal,Label
                      00199         movf    Reg,W
                      00200           sublw   bVal
                      00201           btfss   _Z
                      00202           goto    Label
                      00203           endm
                      00204 
                      00205 jmpFleL macro   Reg1,bVal,Label
                      00206           movfw     Reg1
                      00207           jmpWleL   bVal,Label
                      00208         endm
                      00209 
                      00210 jmpFltL macro   Reg1,bVal,Label
                      00211           movfw     Reg1
                      00212           jmpWltL   bVal,Label
                      00213         endm
                      00214 
                      00215 jmpFeqF macro   Reg1,Reg2,Label
                      00216         movf    Reg1,W
                      00217         subwf   Reg2,W
                      00218         btfsc   _Z
                      00219         goto    Label
                      00220         endm
                      00221 
                      00222 jmpFneF macro   Reg1,Reg2,Label
                      00223         movf    Reg1,W
                      00224         subwf   Reg2,W
                      00225         btfss   _Z
                      00226         goto    Label
                      00227         endm
                      00228 
                      00229 jmpFleF macro   Reg1,Reg2,Label
                      00230           movfw     Reg1
                      00231           jmpWleF   Reg2,Label
                      00232         endm
                      00233 
                      00234 jmpFltF macro   Reg1,Reg2,Label
                      00235           movfw     Reg1
                      00236           jmpWltF   Reg2,Label
                      00237         endm
                      00238 
                      00239 jmpWeqZ macro   Label        ; jmp if W == 0
                      00240         andlw   0xFF
                      00241         jmpZ    Label
                      00242         endm
                      00243 
                      00244 jmpWneZ macro   Label        ; jmp if W != 0
                      00245         andlw   0xFF
                      00246         jmpNZ   Label
                      00247         endm
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00248 
                      00249 skipFeqZ macro   Reg
                      00250         movf    Reg,F
                      00251         btfss   _Z
                      00252         endm
                      00253 
                      00254 skipFneZ macro   Reg
                      00255         movf    Reg,F
                      00256         btfsc   _Z
                      00257         endm
                      00258 
                      00259 skipFeqL macro   Reg,bVal
                      00260         movf    Reg,W
                      00261         sublw   bVal
                      00262         btfss   _Z
                      00263         endm
                      00264 
                      00265 skipFneL macro   Reg,bVal
                      00266         movf    Reg,W
                      00267         sublw   bVal
                      00268         btfsc   _Z
                      00269         endm
                      00270 
                      00271 skipFeqF macro   Reg1,Reg2
                      00272         movf    Reg1,W
                      00273         subwf   Reg2,W
                      00274         btfss   _Z
                      00275         endm
                      00276 
                      00277 skipFneF macro   Reg1,Reg2
                      00278         movf    Reg1,W
                      00279         subwf   Reg2,W
                      00280         btfsc   _Z
                      00281         endm
                      00282 
                      00283 skipWeqZ macro
                      00284         andlw   0xFF
                      00285         btfss   _Z
                      00286         endm
                      00287 
                      00288 skipWneZ macro
                      00289         andlw   0xFF
                      00290         btfsc   _Z
                      00291         endm
                      00292 
                      00293 jmpWgtL macro   bVal,Label
                      00294         sublw   bVal
                      00295         btfss   _C
                      00296         goto    Label
                      00297         endm
                      00298 
                      00299 jmpWgeL macro   bVal,Label
                      00300         sublw   bVal
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00301         btfss   _C
                      00302         goto    Label
                      00303         btfsc   _Z
                      00304         goto    Label
                      00305         endm
                      00306 
                      00307 jmpWeqL macro   bVal,Label
                      00308         sublw   bVal
                      00309         btfsc   _Z
                      00310         goto    Label
                      00311         endm
                      00312 
                      00313 jmpWneL macro   bVal,Label
                      00314         sublw   bVal
                      00315         btfss   _Z
                      00316         goto    Label
                      00317         endm
                      00318 
                      00319 jmpWleL macro   bVal,Label
                      00320         sublw   bVal
                      00321         btfsc   _C
                      00322         goto    Label
                      00323         endm
                      00324 
                      00325 jmpWltL macro   bVal,Label
                      00326         sublw   bVal
                      00327         skipC
                      00328         bsf     _Z
                      00329         jmpNZ   Label
                      00330         endm
                      00331 
                      00332 jmpWgtF macro   Reg,Label
                      00333         subwf   Reg,W
                      00334         btfss   _C
                      00335         goto    Label
                      00336         endm
                      00337 
                      00338 jmpWgeF macro   Reg,Label
                      00339         subwf   Reg,W
                      00340         btfss   _C
                      00341         goto    Label
                      00342         btfsc   _Z
                      00343         goto    Label
                      00344         endm
                      00345 
                      00346 jmpWeqF macro   Reg,Label
                      00347         subwf   Reg,W
                      00348         btfsc   _Z
                      00349         goto    Label
                      00350         endm
                      00351 
                      00352 jmpWneF macro   Reg,Label
                      00353         subwf   Reg,W
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00354         btfss   _Z
                      00355         goto    Label
                      00356         endm
                      00357 
                      00358 jmpWleF macro   Reg,Label
                      00359         subwf   Reg,W
                      00360         btfsc   _C
                      00361         goto    Label
                      00362         endm
                      00363 
                      00364 jmpWltF macro   Reg,Label
                      00365         subwf   Reg,W
                      00366         skipC
                      00367         bsf     _Z
                      00368         jmpNZ   Label
                      00369         endm
                      00370 
                      00371 
                      00372 jmpClr  macro Reg,Bit,Label
                      00373 
                      00374         btfss   Reg,Bit
                      00375         goto    Label
                      00376         endm
                      00377 
                      00378 jmpSet  macro Reg,Bit,Label
                      00379         btfsc   Reg,Bit
                      00380         goto    Label
                      00381         endm
                      00382 
                      00383 jmpZ    macro Label
                      00384         btfsc   _Z
                      00385         goto    Label
                      00386         endm
                      00387 
                      00388 jmpNZ   macro Label
                      00389         btfss   _Z
                      00390         goto    Label
                      00391         endm
                      00392 
                      00393 jmpC    macro Label
                      00394         btfsc   _C
                      00395         goto    Label
                      00396         endm
                      00397 
                      00398 jmpNC   macro Label
                      00399         btfss   _C
                      00400         goto    Label
                      00401         endm
                      00402 
                      00403 skipClr macro Reg,Bit
                      00404         btfsc   Reg,Bit
                      00405         endm
                      00406 
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00407 skipSet macro Reg,Bit
                      00408         btfss   Reg,Bit
                      00409         endm
                      00410 
                      00411 skipNZ  macro
                      00412         btfsc   _Z
                      00413         endm
                      00414 
                      00415 skipZ   macro
                      00416         btfss   _Z
                      00417         endm
                      00418 
                      00419 skipNC  macro
                      00420         btfsc   _C
                      00421         endm
                      00422 
                      00423 skipC   macro
                      00424         btfss   _C
                      00425         endm
                      00426 
                      00427 toggle  macro Reg,Bit
                      00428         local    SLabel,Label
                      00429         btfss   Reg,Bit
                      00430         goto    SLabel
                      00431         bcf     Reg,Bit
                      00432         goto    Label
                      00433 SLabel  bsf     Reg,Bit
                      00434 Label   
                      00435         endm        
                      00436 
                      00437 
                      00438 tb2tb macro RegS,BitS,RegD,BitD
                      00439           local     jLab1,jLab2
                      00440           jmpSet    RegS,BitS,jLab1
                      00441           bcf       RegD,BitD
                      00442           goto      jLab2
                      00443 jLab1     bsf       RegD,BitD
                      00444 jLab2
                      00445           endm
                      00446 
                      00447 tb2Nottb macro RegS,BitS,RegD,BitD
                      00448           local     jLab1,jLab2
                      00449           jmpClr    RegS,BitS,jLab1
                      00450           bcf       RegD,BitD
                      00451           goto      jLab2
                      00452 jLab1     bsf       RegD,BitD
                      00453 jLab2
                      00454           endm
                      00053 #include        "MPPTNGV6.INC"          ; mpptng definitions
                      00001 ;**********************************************************************
                      00002 ;                                                                     *
                      00003 ;                                                                     *
                      00004 ;   Macros for MPPTnG Version 2.0                                     *
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      mpptng.inc                                        *
                      00008 ;    Date:          30.04.01                                          *
                      00009 ;    Last Update:   18.09.01                                          *
                      00010 ;    File Version:  V1.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        Michael Zürcher                                   *
                      00013 ;                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab                           *
                      00015 ;                                                                     *
                      00016 ;    Changes:       separate const include file with V3.0             *
                      00017 ;                                                                     *
                      00018 ;**********************************************************************
                      00019 ;                                                                     *
                      00020 ;    Notes:                                                           *
                      00021 ;    - Main program : mpptng.asm                                      *
                      00022 ;                                                                     *
                      00023 ;**********************************************************************
                      00024 
                      00025 ;**********************************************************************
                      00026 ;               General Flags Definition
                      00027 ;**********************************************************************
                      00028 #define CAN_TxMsg       GenFlags,7      ; xmit next CAN message bit
                      00029 #define CANTxRq         GenFlags,6      ; xmit next CAN message bit
                      00030 #define Initialized     GenFlags,5
                      00031 #define BVLR            GenFlags,3      ; Battery Voltage Level Reached Flag
                      00032 #define OVT             GenFlags,2      ; Over Temp Flag
                      00033 #define NOC             GenFlags,1      ; No Charge Flag
                      00034 #define UNDV            GenFlags,0      ; Under Voltage Flag
                      00035 
                      00036 
                      00037 ;**********************************************************************
                      00038 ;               PIN DEFINITIONS
                      00039 ;**********************************************************************
                      00040 ; CAN control
                      00041 #define CAN_CS          PORTD,5         ; Chip-Select for MCP2510
                      00042 #define CAN_PRE         PORTB,2         ; Voltage present on MCP2510
                      00043 #define CAN_TIME        0x04            ; send CAN msg every 4 tacking cycles
                      00044 
                      00045 ; Security
                      00046 #define INT_OVH         PORTB,3         ; OverHeat interrupt
                      00047 #define INT_NOC         PORTB,4         ; NoCharge interrupt
                      00048 #define INT_UNDV        PORTB,5         ; UnderVoltage interrupt
                      00049 
                      00050 #define RES_OVH         PORTD,7         ; Reset OverHeat
                      00051 #define RES_NOC         PORTD,6         ; Reset NoCharge
                      00052 
                      00053 #define REDLED          PORTD,4         ; Red LED, "1"= led on
                      00054 
                      00055 ; Converter
                      00056 #define INV_MOS_ENA     PORTB,1         ; Enable High-Side FET switching
                      00057 #define ENA_FET         PORTC,0         ; Enable FET switching
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00058 
                      00059 
                      00060 ;**********************************************************************
                      00061 ;               Adress DEFINITIONS
                      00062 ;**********************************************************************
                      00063 ; these variables are mirrored at all of the four memory banks.
                      00064 ; therefore, there's no need to switch to the accurate bank                     
                      00065 
  00000071            00066 Temp0           EQU 0x71
  00000072            00067 Temp1           EQU 0x72
  00000073            00068 Temp2           EQU 0x73
  00000074            00069 Temp3           EQU 0x74
  00000076            00070 Temp4           EQU     0x76
  00000077            00071 Temp5           EQU     0x77
  00000075            00072 Waitboost       EQU 0x75
                      00073 
  0000007A            00074 COUNTERA        EQU 0x7A        ; counter A
  0000007B            00075 COUNTERB        EQU 0x7B        ; counter B
  0000007C            00076 COUNTERC        EQU 0x7C        ; counter C
  0000007D            00077 CAN_COUNTER     EQU 0x7D        ; CAN counter
                      00078 
                      00079 ; Storage for interrupt service routine
  0000007F            00080 IntSaveW        EQU 0x7F        ; save W (bank 0-3)
                      00081 
                      00082 ;**********************************************************************
                      00083 ;               ADC DEFINITIONS (Constants)
                      00084 ;**********************************************************************
                      00085 #define INIT_IO_AD      B'10000001'     ; consider "ports config"
                      00086 ;
                      00087 ; Tacq = 2us + (-1)*120pF * (1k + 7k)*ln(1/2047)+(60°C-25°C)(0.05us/°) = 11.6us
                      00088 ;
                      00089 #define Tacq            0x0C            ; ADConverter aquisition time (64_us)
                      00090 #define CHANNEL0        B'10000000'     ; Selector for (RA0/AN0)
                      00091 #define CHANNEL1        B'10001000'     ; Selector for (RA1/AN1)
                      00092 #define CHANNEL2        B'10010000'     ; Selector for (RA2/AN2)
                      00093 #define CHANNEL4        B'10100000'     ; Selector for (RA5/AN4)
                      00094 #define CHANNEL5        B'10101000'     ; Selector for (RE0/AN5)
                      00095 #define CHANNEL6        B'10110000'     ; Selector for (RE1/AN6)
                      00096 
                      00097 ;**********************************************************************
                      00098 ;               Port config DEFINITIONS (Constants)
                      00099 ;**********************************************************************
                      00100 #define INIT_IO_A       B'00101111'     ; consider "ports config" RA4= Output
                      00101 #define INIT_IO_B       B'00111101'     ; '0' = output, 
                      00102 #define INIT_IO_C       B'10010000'     ; '1' = input
                      00103 #define INIT_IO_D       B'00001111'     ;
                      00104 #define INIT_IO_E       B'00000111'     ;
                      00105 
                      00106 
                      00107 ;**********************************************************************
                      00108 ;               SPI DEFINITIONS (Constants)
                      00109 ;**********************************************************************
                      00110 #define INIT_SPI        B'00010010'     ; SPI Master, Clock idle high, Fosc/64, no collision
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00111 ;**********************************************************************
                      00112 ;               CAN DEFINITIONS (Constants)
                      00113 ;**********************************************************************
                      00114 #define TXBASEADR       0xEE    
                      00115 #define RXBASEADR       0xE2    
                      00116 
                      00117 
                      00118 ;**********************************************************************
                      00119 ;               PWM DEFINITIONS (Constants)
                      00120 ;**********************************************************************
                      00121 #define DUTY2_MIN_H     0x0E            ; Min corresponding to 3us
                      00122 #define DUTY2_MIN_L     0xE7
                      00123 
                      00124 #define PERIODE         0xCF            ; PWMs periode 24kHz
                      00125 #define AUX_PW          0x06            ; Width of aux Pulse
                      00126 
                      00127 #define BIGSTEP_H       0x04            ; duty step high byte (xxxx xxxx)
                      00128 #define BIGSTEP_L       0x00            ; duty step  low byte (xx00 0000)
                      00129 
                      00130 #define SMALLSTEP_H     0x02            ; duty step high byte (xxxx xxxx)
                      00131 #define SMALLSTEP_L     0x00            ; duty step  low byte (xx00 0000)
                      00132 
                      00133 #define MAXTCH          0x02            ; max permitted cooler (0000 00xx)
                      00134 #define MAXTCL          0xBB            ; temperature          (xxxx xxxx)
                      00135 
                      00136 ;********************************************************************
                      00137 ;               LOCAL REGISTER STORAGE (VARIABLES)
                      00138 ;********************************************************************
                      00139         CBLOCK          0x20            ; bank 0 variables
                      00140 
  00000020            00141         UI0H                            ; ADChannel 0 (current Umes_in) value high byte
  00000021            00142         UI0L                            ; ADChannel 0 (current Umes_in) value low byte
  00000022            00143         UI1H                            ; ADChannel 0 (former Umes_in) value high byte
  00000023            00144         UI1L                            ; ADChannel 0 (former Umes_in) value low byte
  00000024            00145         UI2H                            ; ADChannel 0 (Umes_in) value high byte
  00000025            00146         UI2L                            ; ADChannel 0 (Umes_in) value low byte
  00000026            00147         UI3H                            ; ADChannel 0 (Umes_in) value high byte
  00000027            00148         UI3L                            ; ADChannel 0 (Umes_in) value low byte
  00000028            00149         UIF0H                           ; Current averaged (UIN) high byte
  00000029            00150         UIF0L                           ; Current averaged (UIN) low byte
  0000002A            00151         UIF1H                           ; Former averaged (UIN) high byte
  0000002B            00152         UIF1L                           ; Former averaged (UIN) low byte
                      00153 
                      00154 
  0000002C            00155         UO0H                            ; ADChannel 1 (current Umes_out) value high byte
  0000002D            00156         UO0L                            ; ADChannel 1 (current Umes_out) value low byte
  0000002E            00157         UO1H                            ; ADChannel 1 (former Umes_out) value high byte
  0000002F            00158         UO1L                            ; ADChannel 1 (former Umes_out) value low byte
  00000030            00159         UO2H                            ; ADChannel 1 (Umes_out) value high byte
  00000031            00160         UO2L                            ; ADChannel 1 (Umes_out) value low byte
  00000032            00161         UO3H                            ; ADChannel 1 (Umes_out) value high byte
  00000033            00162         UO3L                            ; ADChannel 1 (Umes_out) value low byte
  00000034            00163         UOFH                            ; Averaged (UOUT) high byte
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000035            00164         UOFL                            ; Averaged (UOUT) low byte
                      00165         
  00000036            00166         II0H                            ; ADChannel 2 (current Imes_in) value high byte
  00000037            00167         II0L                            ; ADChannel 2 (current Imes_in) value low byte
  00000038            00168         II1H                            ; ADChannel 2 (former Imes_in) value high byte
  00000039            00169         II1L                            ; ADChannel 2 (former Imes_in) value low byte
  0000003A            00170         II2H                            ; ADChannel 2 (Imes_in) value high byte
  0000003B            00171         II2L                            ; ADChannel 2 (Imes_in) value low byte
  0000003C            00172         II3H                            ; ADChannel 2 (Imes_in) value high byte
  0000003D            00173         II3L                            ; ADChannel 2 (Imes_in) value low byte
  0000003E            00174         IIF0H                           ; Current averaged (IIN) high byte
  0000003F            00175         IIF0L                           ; Current averaged (IIN) low byte
  00000040            00176         IIF1H                           ; Former averaged (IIN) high byte
  00000041            00177         IIF1L                           ; Former averaged (IIN) low byte
                      00178 
  00000042            00179         TAMBH                           ; ADChannel 4 (Temp_amb) value high byte
  00000043            00180         TAMBL                           ; ADChannel 4 (Temp_amb) value low byte
                      00181 
  00000044            00182         USENSEH                         ; ADChannel 5 (Uout_sense) value high byte
  00000045            00183         USENSEL                         ; ADChannel 5 (Tout_sense) value low byte
                      00184 
  00000046            00185         TCH                             ; ADChannel 6 (Temp_cooler) value high byte
  00000047            00186         TCL                             ; ADChannel 6 (Temp_cooler) value low byte
                      00187 
  00000048            00188         PI0H                            ; Current filtered input power value (MSB)
  00000049            00189         PI0M                            ; Current filtered input power value (middle)
  0000004A            00190         PI0L                            ; Current filtered input power value (LSB)
  0000004B            00191         PI1H                            ; Former filtered input power value (MSB)
  0000004C            00192         PI1M                            ; Former filtered input power value (middle)
  0000004D            00193         PI1L                            ; Former filtered input power value (LSB)
                      00194 
  0000004E            00195         DUTY2_H                         ; PWM2 Duty cycle value high byte
  0000004F            00196         DUTY2_L                         ; PWM2 Duty cycle value low byte
                      00197 
  00000050            00198         IDTrackerTXH                    ; response ID for Tracker high byte
  00000051            00199         IDTrackerTXL                    ; response ID for Tracker low byte
  00000052            00200         IDTrackerRXH                    ; ID for Tracker high byte
  00000053            00201         IDTrackerRXL                    ; ID for Tracker low byte
                      00202 
                      00203 
  00000054            00204         SPICounter                      ; number of byte remaining te receive
  00000055            00205         SPIBufPointer                   ; pointer into buffer
  00000056            00206         SPIBufBase:12                   ; start of SPI buffer (12 bytes)
                      00207 
  00000068            00208         RegData2510                     ; data sent/receive register for MCP2510
  00000069            00209         RegAdr2510                      ; address register for MCP2510
  0000006A            00210         RegMask2510                     ; bit Mask register for MCP2510
                      00211 
  0000006B            00212         IntSaveSt                       ; save STATUS
  0000006C            00213         IntSaveFSR                      ; save FSR
  0000006D            00214         IntSavePCLATH                   ; save PCLATCH
                      00215 
  0000006E            00216         GenFlags                        ; General Control Flags
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000006F            00217         NormalModeCounter
                      00218         ENDC
                      00219 
                      00220         CBLOCK                  0xA0
                      00221 
  000000A0            00222         VSF                             ; Voltage Signum Flags
  000000A1            00223         PSF                             ; Power Signum Flags
                      00224 
  000000A2            00225         PminCounter                     ;
                      00226 
  000000A3            00227         STEP_H                          ; H-Byte of Delta f()=Uin
  000000A4            00228         STEP_L                          ; L-Byte of Delta f()=Uin
                      00229 
                      00230         ENDC
                      00231 
                      00232 
                      00233 
                      00234 
                      00054 #include        "USER23.INC"            ; user defined constants 
                      00001 ;**********************************************************************
                      00002 ;   P R O G R A M M     MPPTnG                                            *
                      00003 ;                                                                     *
                      00004 ;   Traking program for MPPT new generation                           *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      user.inc                                          *
                      00008 ;    Date:          20.04.01                                          *
                      00009 ;    Last Update:   14.03.05                                          *
                      00010 ;    File Version:  V3.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        Michael Zürcher, Christoph Raible                 *
                      00013 ;                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab, drivetek ag              *
                      00015 ;                                                                     *
                      00016 ;    Changes:                                                                                 *
                      00017 ;                                                                     *
                      00018 ;**********************************************************************
                      00019 ;                                                                     *
                      00020 ;    Notes:                                                           *
                      00021 ;    - Main program : mpptng.asm                                      *
                      00022 ;    - Client : 23                                                                *
                      00023 ;                                                                                                     *
                      00024 ;   Order Number: 23                                                              *
                      00025 ;                                                                                         *
                      00026 ;**********************************************************************
                      00027 
                      00028 ;**********************************************************************
                      00029 ;   maximum battery voltage
                      00030 ;**********************************************************************
                      00031 #define INITDUTY        0x74            ; Duty resulting of Ubat and Uoc
                      00032 #define MAXUOH          0x02            ; 117.6 V: Max Batt. volt HByte 
                      00033                                         ; in 196.97 mV Units
                      00034 #define MAXUOL          0x55            ; 117.6 V: Max Batt. volt LByte in
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00035                                         ; 196.97 mV Unit
                      00036 
                      00037 ;**********************************************************************
                      00038 ;   P&O Constants
                      00039 ;**********************************************************************
                      00040 #define MINUINH 0x00    ; Min  input voltage HByte 26V in 150.49 mV Units
                      00041 #define MINUINL 0xAD    ; Min  input voltage LByte 26V in 150.49 mV Units
                      00042 
                      00043 ;**********************************************************************
                      00044 ;Min Output Voltage, used for Precharge
                      00045 ;**********************************************************************
                      00046 #define MINUBATH        0x01    ; Min output voltage HByte 84 V in 196.97 mV  Units
                      00047 #define MINUBATL        0xAA    ; Min output voltage LByte 84 V in 196.97 mV  Units
                      00048 
                      00049 ;**********************************************************************
                      00050 ;   border ot discontinuous mode 
                      00051 ;   ON-Values have to be greater than OFF-Values
                      00052 ;   notice the hysteresis NOT USED IN HARDWARE V3.0!!!
                      00053 ;**********************************************************************
                      00054 ;#define IHFETONH       0x01    ; H-FET Turn on HByte 32% of max current
                      00055 ;#define IHFETONL       0x47    ; H-FET Turn on LByte 32% of max current
                      00056 ;#define IHFETOFFH      0x01    ; H-FET Turn on HByte 25% of max current
                      00057 ;#define IHFETOFFL      0x00    ; H-FET Turn on LByte 25% of max current
                      00058 
                      00059 
                      00060 ;**********************************************************************
                      00061 ;   Minimum Input Power of 
                      00062 ;**********************************************************************
                      00063 
                      00064 #define MINPINM 0x16    ; M-Byte Min input power 5W (5.86 mA/Bit x 150.49 mV/Bit)
                      00065 #define MINPINL 0x26    ; L-Byte Min input power
                      00066 
                      00067 ;**********************************************************************
                      00068 ;   Maximum Power Point Input Voltage (influences tracking step width)
                      00069 ;**********************************************************************
                      00070                                                                                                         
                                                                                                                            
                      00071 #define UmppH 0x02      ; Mpp input voltage HByte 86 V in 150.49 mV Units
                      00072 #define UmppL 0x3B          ; Mpp input voltage LByte 86 V in 150.49 mV Units
                      00055 
2007   3F36           00056         __CONFIG _CP_OFF & _WRT_ENABLE_ON & _CPD_OFF & _LVP_OFF & _BODEN_OFF & _PWRTE_ON & _WDT_ON & _HS
                            _OSC
                      00057 
                      00058 ;----------------------------------------------------------------------
                      00059 ;                                                                     -
                      00060 ;    Configuration word __CONFIG (adress 2007h) :                     -
                      00061 ;                                                                     -
                      00062 ;    - _CP_OFF          : Flash Programm Memory Code Protection             -
                      00063 ;    - _WRT_ENABLE_ON   : Flash Programm Memory Write Enable          -
                      00064 ;    - _CPD_OFF         : Data EE Memory Code Protection                 -
                      00065 ;    - _LVP_OFF         : Low Voltage ICSP Enable bit                    -
                      00066 ;    - _BODEN_OFF       : Brown-out Reset Enable bit                        -
                      00067 ;    - _PWRTE_ON        : Power-up Timer Enable bit                         -
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00068 ;    - _WDT_OFF         : Watchdog Timer Enable bit                      -
                      00069 ;    - _HS_OSC          : HS oscillator                                     -
                      00070 ;                                                                     -
                      00071 ;----------------------------------------------------------------------
                      00072 
                      00073         errorlevel -302
                      00074 
                      00075 
                      00076 ;**********************************************************************
                      00077 ;               RESET VECTOR
                      00078 ;**********************************************************************
0000                  00079                 ORG     0x00                    ; processor reset vector
0000   0000           00080                 nop                                     ; for ICD
0001   2ED4           00081                 goto    Main            ; go to beginning of program
                      00082 
                      00083 
                      00084 ;********************************************************************
                      00085 ;               Include Sub-program
                      00086 ;********************************************************************
                      00087 
                      00088 #include        "interpt.asm"           ; interrupt routine
                      00001 ;**********************************************************************
                      00002 ;   P R O G R A M M     MPPTnG                                        *
                      00003 ;                                                                     *
                      00004 ;   Traking program for MPPT new generation                           *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      interpt.asm                                       *
                      00008 ;    Date:          30.04.01                                          *
                      00009 ;    Last Update:   30.04.01                                          *
                      00010 ;    File Version:  V3.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        Vezzini A. / M. Lehmann / F. Kaufmann             *
                      00013 ;                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab                           *
                      00015 ;                                                                     *
                      00016 ;    Changes:       Introduced separate Interrupt routine with V3.0   *
                      00017 ;                                                                     *
                      00018 ;**********************************************************************
                      00019 ;                                                                     *
                      00020 ;    Notes:                                                           *
                      00021 ;    - Main program : mpptng.asm                                      *
                      00022 ;                                                                     *
                      00023 ;**********************************************************************
                      00024 
0004                  00025                 ORG     0x04            ; interrupt vector
                      00026 
                      00027 ;**********************************************************************
                      00028 ;               INTERRUPT Vector
                      00029 ;
                      00030 ;               Global int bit, GIE, has been reset.
                      00031 ;               W saved in IntSaveW0 or IntSaveW1 depending on the
                      00032 ;               bank selected at the time the interrupt occured.
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00033 ;               Preserve Status bits (since movf sets Z) is with a 
                      00034 ;               swapf command
                      00035 ;**********************************************************************
                      00036 
                      00037 
0004   00FF           00038                 movwf   IntSaveW        ; save W
0005   0E03           00039                 swapf   STATUS,W        ; Status to W with nibbles swapped
                      00040                 BANK0
0006   1283               M         bcf     STATUS,5    ; Select page 0
0007   00EB           00041                 movwf   IntSaveSt
0008   0804           00042                 movfw   FSR
0009   00EC           00043                 movwf   IntSaveFSR      ; save FSR
000A   080A           00044                 movf    PCLATH,W 
000B   00ED           00045                 movwf   IntSavePCLATH   ; interrupt storage for PCLATH
000C   018A           00046                 clrf    PCLATH          ; set to page 0
                      00047 
                      00048                 ; --> Must determine source of interrupt
                      00049 
                      00050                 ;SPI Interrupt
000D   198C           00051                 btfsc   PIR1,SSPIF      ; test interrupt
000E   2BC2           00052                    goto   IntSPI
                      00053                 
                      00054                 ;CAN Interrupt
000F   188B           00055                 btfsc   INTCON,INTF     ; test interrupt
0010   2B12           00056                    goto   IntCAN
                      00057 
                      00058                 ;A/D-Converter Interrupt
                      00059 ;               btfsc   PIR1,TMR2IF     ; test interrupt
                      00060 ;                  goto   IntADC
                      00061 
                      00062                 ;all external HW-Interrupts
0011   180B           00063                 btfsc   INTCON,RBIF     ; test interrupt
0012   2814           00064                    goto   ExtInt
                      00065                 
0013   2818           00066                 goto    IntReturn
                      00067 
0014   1A86           00068 ExtInt          btfsc   INT_UNDV
0015   2ED4           00069                    goto    Main                 ; RESET /Stack has not to be decremented, due to circula
                            r stack architecture!
0016   1A06           00070                 btfsc   INT_NOC
0017   2DE4           00071                    goto    NCInterupt   ; No Load Interrupt
                      00072 
                      00073                 ; restore registers and return
                      00074 
                      00075 IntReturn       BANK0
0018   1283               M         bcf     STATUS,5    ; Select page 0
0019   086D           00076                 movf    IntSavePCLATH,W ; restore PCLATH
001A   008A           00077                 movwf   PCLATH
001B   086C           00078                 movf    IntSaveFSR,W    ; restore FSR
001C   0084           00079                 movwf   FSR
001D   0E6B           00080                 swapf   IntSaveSt,W     ; restore STATUS
001E   0083           00081                 movwf   STATUS
001F   0EFF           00082                 swapf   IntSaveW,F      ; swap original W in place
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0020   0E7F           00083                 swapf   IntSaveW,W
0021   0009           00084                 RETFIE
                      00085 
                      00086 
                      00089 #include        "adc.asm"                       ; adc routine
                      00001 ;**********************************************************************
                      00002 ;   P R O G R A M M     MPPTnG                                            *
                      00003 ;                                                                     *
                      00004 ;   Traking program for MPPT new generation                           *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:       adc.asm                                          *
                      00008 ;    Date:          15.11.00                                          *
                      00009 ;    Last Update:   19.09.02                                          *
                      00010 ;    File Version:  V4.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        Michael Zürcher, Christoph Raible                         *
                      00013 ;                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab, drivetek ag              *
                      00015 ;                                                                     *
                      00016 ;    Changes:       Content routines for A/D Converter                *
                      00017 ;                                                                     *
                      00018 ;**********************************************************************
                      00019 ;                                                                     *
                      00020 ;    Notes:                                                           *
                      00021 ;                                                                     *
                      00022 ;                                                                     *
                      00023 ;**********************************************************************
                      00024 ;                                                                     *
                      00025 ;    Ports config:                                                    *
                      00026 ;                                                                     *
                      00027 ;    an7 an6 an5 an4 an3 an2 an1 an0                                  *
                      00028 ;     -   A   -   A  ref  A   A   A                                   *
                      00029 ;                                                                     *
                      00030 ;    A/D result justification right                                   *
                      00031 ;                                                                     *
                      00032 ;**********************************************************************
                      00033 
                      00034 ;**********************************************************************
                      00035 ;               ADC synchronize routine Loop
                      00036 ;
                      00037 ;               IN: w register = w * 1us
                      00038 ;               temporary register = time
                      00039 ;**********************************************************************
                      00040 waitforedge     MACRO   
                      00041                 
                      00042                 btfss   PORTC,1         ; Trigger on negative edge to eliminate
                      00043                   goto $-1                  ; the influece of the current commutation 
                      00044                                                 ; in the converter module
                      00045                 btfsc   PORTC,1
                      00046                   goto $-1
                      00047 
                      00048                 ENDM
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00049 
                      00050 ;**********************************************************************
                      00051 ;               WAIT Loop
                      00052 ;
                      00053 ;               IN: w register = w * 1us
                      00054 ;               temporary register = time
                      00055 ;**********************************************************************
                      00056 
0022   00FA           00057 wait            movwf   COUNTERA
0023   0000           00058 w5              nop
0024   0000           00059                 nop
0025   0000           00060                 nop
0026   0BFA           00061                 decfsz  COUNTERA,1
0027   2823           00062                   goto    w5
0028   0000           00063                 nop
0029   0008           00064                 RETURN
                      00065 
002A                  00066 waittoboost
002A   30FF           00067                 movlw   0xff
002B   00FA           00068                 movwf   COUNTERA
002C   0875           00069                 movfw   Waitboost
002D   00FB           00070                 Movwf   COUNTERB
                      00071 
002E                  00072 wb              
002E   0BFA           00073                 decfsz  COUNTERA,1
002F   282E           00074                   goto   wb
0030   304F           00075                 movlw   0x4f
0031   00FA           00076                 movwf   COUNTERA                
0032   0BFB           00077                 decfsz  COUNTERB,1
0033   282E           00078                   goto   wb
0034   0000           00079             nop
0035   0008           00080                 RETURN
                      00081 
0036   304E           00082 wait20ms        movlw   0x04E
0037   00FB           00083                 movwf   COUNTERB
0038   00FA           00084                 movwf   COUNTERA
                      00085 
0039   0000           00086 w4              nop
003A   1B6E           00087                 btfsc   CANTxRq         ; Test if CAn interrupt has occured during the waiting time
003B   2316           00088                    call    CANRqTest
003C   0000           00089                 nop
003D   0BFA           00090                 decfsz  COUNTERA,1
003E   2839           00091                   goto   w4
003F   0BFB           00092                 decfsz  COUNTERB,1
0040   2839           00093                   goto   w4
0041   0000           00094                 nop
0042   0008           00095                 RETURN
                      00096 
0043   300F           00097 wait1s          movlw   0x0F
0044   00FC           00098                 movwf   COUNTERC
0045   305A           00099                 movlw   0x5A
0046   00FB           00100                 movwf   COUNTERB
0047   00FA           00101                 movwf   COUNTERA
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00102         
0048   0000           00103 w2              nop
0049   1B6E           00104                 btfsc   CANTxRq         ; Test if CAn interrupt has occured during the waiting time
004A   2316           00105                    call    CANRqTest
004B   0000           00106                 nop
004C   0BFA           00107                 decfsz COUNTERA,1
004D   2848           00108                   goto   w2
004E   0BFB           00109                 decfsz  COUNTERB,1
004F   2848           00110                   goto   w2
0050   0064           00111                 clrwdt                  ; reset watchdog
0051   0BFC           00112                 decfsz  COUNTERC,1
0052   2848           00113                   goto   w2
0053   0000           00114                 nop
0054   0008           00115                 RETURN
                      00116 
                      00117 ;**********************************************************************
                      00118 ;               INIT A/D Converter
                      00119 ;**********************************************************************
                      00120 
0055   01A0           00121 InitADC         clrf    UI0H
0056   01A1           00122                 clrf    UI0L
0057   01AC           00123                 clrf    UO0H
0058   01AD           00124                 clrf    UO0L
                      00125 
0059   01B6           00126                 clrf    II0H
005A   01B7           00127                 clrf    II0L
                      00128         
005B   01C2           00129                 clrf    TAMBH
005C   01C3           00130                 clrf    TAMBL
005D   01C4           00131                 clrf    USENSEH
005E   01C5           00132                 clrf    USENSEL
005F   01C6           00133                 clrf    TCH
0060   01C7           00134                 clrf    TCL
0061   01C8           00135                 clrf    PI0H
0062   01C9           00136                 clrf    PI0M
0063   01CA           00137                 clrf    PI0L
0064   01CB           00138                 clrf    PI1H
0065   01CC           00139                 clrf    PI1M
0066   01CD           00140                 clrf    PI1L
                      00141 
                      00142                 BANK1
0067   1683               M         bsf     STATUS,5    ; Select page 1
0068   01A0           00143                 clrf    VSF             ; Clear all voltage signum Flags
0069   01A1           00144                 clrf    PSF             ; Clear all power signum Flags
                      00145                 BANK0
006A   1283               M         bcf     STATUS,5    ; Select page 0
                      00146 
006B   019F           00147                 clrf    ADCON0
006C   179F           00148                 bsf     ADCON0,7        ; Tad = 32 * Tosc = 1.6us
                      00149 
                      00150                 BANK1
006D   1683               M         bsf     STATUS,5    ; Select page 1
006E   3081           00151                 movlw   INIT_IO_AD      ; init analog pins
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006F   009F           00152                 movwf   ADCON1
                      00153                 BANK0
0070   1283               M         bcf     STATUS,5    ; Select page 0
                      00154 
0071   0008           00155                 RETURN
                      00156 
                      00157 
                      00158 ;**********************************************************************
                      00159 ;               Get the value of ADChannel 0 (Umes_in)
                      00160 ;
                      00161 ;               ADRESH,ADRESL - Result register (000000xx xxxxxxxx)
                      00162 ;               OUT: UI0H,UI0L
                      00163 ;**********************************************************************
0072   3080           00164 GetUin          movlw   CHANNEL0        ; select channel 0, clock=Fosc/32
0073   009F           00165                 movwf   ADCON0
                      00166 
0074   1D9D           00167                 btfss   CCP2CON,3       ; Test if PWM is running
0075   287A           00168                   goto UnsyncUin
                      00169                 
                      00170                 waitforedge
                          M                 
0076   1C87               M                 btfss   PORTC,1         ; Trigger on negative edge to eliminate
0077   2876               M                   goto $-1                  ; the influece of the current commutation 
                          M                                                 ; in the converter module
0078   1887               M                 btfsc   PORTC,1
0079   2878               M                   goto $-1
                          M 
                      00171                 
007A   141F           00172 UnsyncUin       bsf     ADCON0,0        ; AD turn on
007B   300C           00173                 movlw   Tacq
007C   2022           00174                 call    wait            ; wait Tacq in us
                      00175 
007D   151F           00176                 bsf     ADCON0,GO       ; start conversion
007E   191F           00177 WaitADC0C       btfsc   ADCON0,GO
007F   287E           00178                   goto WaitADC0C        ; wait until conversion finished
                      00179                 
0080   0824           00180                 movf    UI2H,W
0081   00A6           00181                 movwf   UI3H
0082   0822           00182                 movf    UI1H,W
0083   00A4           00183                 movwf   UI2H
0084   0820           00184                 movf    UI0H,W
0085   00A2           00185                 movwf   UI1H            ; shift former H-values by 1 place
                      00186 
0086   081E           00187                 movf    ADRESH,W
0087   00A0           00188                 movwf   UI0H            ; store high value
                      00189 
0088   0825           00190                 movf    UI2L,W
0089   00A7           00191                 movwf   UI3L
008A   0823           00192                 movf    UI1L,W
008B   00A5           00193                 movwf   UI2L
008C   0821           00194                 movf    UI0L,W
008D   00A3           00195                 movwf   UI1L            ; shift former L-values
                      00196 
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00197                 BANK1
008E   1683               M         bsf     STATUS,5    ; Select page 1
008F   081E           00198                 movf    ADRESL,W
                      00199                 BANK0
0090   1283               M         bcf     STATUS,5    ; Select page 0
0091   00A1           00200                 movwf   UI0L            ; store low value
0092   101F           00201                 bcf     ADCON0,0        ; AD shutoff
0093   0008           00202                 RETURN
                      00203 
                      00204 
                      00205 ;**********************************************************************
                      00206 ;               Get the value of ADChannel 1 (Umes_out)
                      00207 ;
                      00208 ;               ADRESH,ADRESL - Result register (000000xx xxxxxxxx)
                      00209 ;               OUT: UO0H,UO0L
                      00210 ;**********************************************************************
0094   3088           00211 GetUout         movlw   CHANNEL1        ; select channel 1, clock=Fosc/32
0095   009F           00212                 movwf   ADCON0
                      00213 
0096   1D9D           00214                 btfss   CCP2CON,3       ; Test if PWM is running
0097   289C           00215                   goto UnsyncUout               
                      00216 
                      00217                 waitforedge
                          M                 
0098   1C87               M                 btfss   PORTC,1         ; Trigger on negative edge to eliminate
0099   2898               M                   goto $-1                  ; the influece of the current commutation 
                          M                                                 ; in the converter module
009A   1887               M                 btfsc   PORTC,1
009B   289A               M                   goto $-1
                          M 
                      00218 
009C   141F           00219 UnsyncUout      bsf     ADCON0,0        ; AD turn on
009D   300C           00220                 movlw   Tacq
009E   2022           00221                 call    wait            ; wait Tacq in us
                      00222 
009F   151F           00223                 bsf     ADCON0,GO       ; start conversion
00A0   191F           00224 WaitADC1C       btfsc   ADCON0,GO
00A1   28A0           00225                   goto WaitADC1C        ; wait until conversion ha been finished
                      00226 
00A2   0830           00227                 movf    UO2H,W
00A3   00B2           00228                 movwf   UO3H
00A4   082E           00229                 movf    UO1H,W
00A5   00B0           00230                 movwf   UO2H
00A6   082C           00231                 movf    UO0H,W
00A7   00AE           00232                 movwf   UO1H            ; shift former H-values
                      00233                 
00A8   081E           00234                 movf    ADRESH,W
00A9   00AC           00235                 movwf   UO0H            ; store new high value
                      00236 
00AA   0831           00237                 movf    UO2L,W
00AB   00B3           00238                 movwf   UO3L
00AC   082F           00239                 movf    UO1L,W
00AD   00B1           00240                 movwf   UO2L
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AE   082D           00241                 movf    UO0L,W
00AF   00AF           00242                 movwf   UO1L            ; shift former L-values
                      00243 
                      00244                 BANK1
00B0   1683               M         bsf     STATUS,5    ; Select page 1
00B1   081E           00245                 movf    ADRESL,W
                      00246                 BANK0
00B2   1283               M         bcf     STATUS,5    ; Select page 0
00B3   00AD           00247                 movwf   UO0L            ; store low value
00B4   101F           00248                 bcf     ADCON0,0                ; AD shutoff
00B5   0008           00249                 RETURN
                      00250 
                      00251 
                      00252 ;**********************************************************************
                      00253 ;               Get the value of ADChannel 2 (Imes_in)
                      00254 ;
                      00255 ;               ADRESH,ADRESL - Result register (000000xx xxxxxxxx)
                      00256 ;               OUT: II0H,II0L
                      00257 ;**********************************************************************
00B6   3090           00258 GetIin          movlw   CHANNEL2        ; select channel 2, clock=Fosc/32
00B7   009F           00259                 movwf   ADCON0
                      00260 
00B8   1D9D           00261                 btfss   CCP2CON,3       ; Test if PWM is running
00B9   28BE           00262                   goto UnsyncIin
                      00263 
                      00264                 waitforedge
                          M                 
00BA   1C87               M                 btfss   PORTC,1         ; Trigger on negative edge to eliminate
00BB   28BA               M                   goto $-1                  ; the influece of the current commutation 
                          M                                                 ; in the converter module
00BC   1887               M                 btfsc   PORTC,1
00BD   28BC               M                   goto $-1
                          M 
                      00265 
00BE   141F           00266 UnsyncIin       bsf     ADCON0,0        ; AD turn on
00BF   300C           00267                 movlw   Tacq
00C0   2022           00268                 call    wait            ; wait Tacq in us
                      00269 
00C1   151F           00270                 bsf     ADCON0,GO       ; start conversion
00C2   191F           00271 WaitADC2C       btfsc   ADCON0,GO
00C3   28C2           00272                   goto WaitADC2C        ; wait until conversion has been finished
                      00273 
00C4   083A           00274                 movf    II2H,W
00C5   00BC           00275                 movwf   II3H
00C6   0838           00276                 movf    II1H,W
00C7   00BA           00277                 movwf   II2H
00C8   0836           00278                 movf    II0H,W
00C9   00B8           00279                 movwf   II1H            ; shift former H-values
                      00280 
00CA   081E           00281                 movf    ADRESH,W
00CB   00B6           00282                 movwf   II0H            ; store new high value
                      00283 
00CC   083B           00284                 movf    II2L,W
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CD   00BD           00285                 movwf   II3L
00CE   0839           00286                 movf    II1L,W
00CF   00BB           00287                 movwf   II2L
00D0   0837           00288                 movf    II0L,W
00D1   00B9           00289                 movwf   II1L            ; shift former L-values
                      00290 
                      00291                 BANK1
00D2   1683               M         bsf     STATUS,5    ; Select page 1
00D3   081E           00292                 movf    ADRESL,W
                      00293                 BANK0
00D4   1283               M         bcf     STATUS,5    ; Select page 0
                      00294 
00D5   00B7           00295                 movwf   II0L            ; store L-Value
00D6   101F           00296                 bcf     ADCON0,0        ; AD shutoff
                      00297 
00D7   0008           00298                 return
                      00299 
                      00300 
                      00301 ;**********************************************************************
                      00302 ;               Get the value of ADChannel 4 (Tamb)
                      00303 ;
                      00304 ;               ADRESH,ADRESL - Result register (000000xx xxxxxxxx)
                      00305 ;               OUT: Tamb_H,Tamb_L
                      00306 ;**********************************************************************
00D8   30A0           00307 GetTamb         movlw   CHANNEL4        ; select channel 4, clock=Fosc/32
00D9   009F           00308                 movwf   ADCON0
                      00309 
00DA   1D9D           00310                 btfss   CCP2CON,3       ; Test if PWM is running
00DB   28E0           00311                   goto  UnsyncTamb
                      00312         
                      00313                 waitforedge
                          M                 
00DC   1C87               M                 btfss   PORTC,1         ; Trigger on negative edge to eliminate
00DD   28DC               M                   goto $-1                  ; the influece of the current commutation 
                          M                                                 ; in the converter module
00DE   1887               M                 btfsc   PORTC,1
00DF   28DE               M                   goto $-1
                          M 
                      00314                         
00E0   141F           00315 UnsyncTamb      bsf     ADCON0,0        ; AD turn on
00E1   300C           00316                 movlw   Tacq
00E2   2022           00317                 call    wait            ; wait Tacq
                      00318 
00E3   151F           00319                 bsf     ADCON0,GO       ; start conversion
00E4   191F           00320 WaitADC4C       btfsc   ADCON0,GO       ; wait until conversion has been finished
00E5   28E4           00321                   goto WaitADC4C
                      00322 
00E6   081E           00323                 movf    ADRESH,W
00E7   00C2           00324                 movwf   TAMBH           ; store high value
                      00325                 BANK1
00E8   1683               M         bsf     STATUS,5    ; Select page 1
00E9   081E           00326                 movf    ADRESL,W
                      00327                 BANK0
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EA   1283               M         bcf     STATUS,5    ; Select page 0
00EB   00C3           00328                 movwf   TAMBL           ; store low value
00EC   101F           00329                 bcf     ADCON0,0        ; AD shutoff
00ED   0008           00330                 RETURN
                      00331 
                      00332 ;**********************************************************************
                      00333 ;               Get the value of ADChannel 5 (Usense)
                      00334 ;
                      00335 ;               ADRESH,ADRESL - Result register (000000xx xxxxxxxx)
                      00336 ;               OUT: Usense_H,Usense_L
                      00337 ;**********************************************************************
                      00338 ;GetUsense      movlw   CHANNEL5        ; select channel 5, clock=Fosc/32
                      00339 ;               movwf   ADCON0
                      00340 
                      00341 ;               btfss   CCP2CON,3       ; test is PWM is running
                      00342 ;                 goto  UnsyncUsense
                      00343                 
                      00344 ;               waitforedge
                      00345         
                      00346 ;UnsyncUsense   bsf     ADCON0,0        ; AD turn on
                      00347 ;               movlw   Tacq
                      00348 ;               call    wait            ; wait Tacq
                      00349 
                      00350 ;               bsf     ADCON0,GO       ; start conversion
                      00351 ;WaitADC5C      btfsc   ADCON0,GO       ; wait until conversion has been finished
                      00352 ;                 goto WaitADC5C
                      00353 
                      00354 ;               movf    ADRESH,W
                      00355 ;               movwf   USENSEH         ; store high value
                      00356 ;               BANK1
                      00357 ;               movf    ADRESL,W
                      00358 ;               BANK0
                      00359 ;               movwf   USENSEL         ; store low value
                      00360 ;               bcf     ADCON0,0        ; AD shutoff
                      00361 ;               RETURN
                      00362 
                      00363 ;**********************************************************************
                      00364 ;               Get the value of ADChannel 6 (Tcooler)
                      00365 ;
                      00366 ;               ADRESH,ADRESL - Result register (000000xx xxxxxxxx)
                      00367 ;               OUT: Tcooler_H,Tcooler_L
                      00368 ;**********************************************************************
00EE   30B0           00369 GetTCooler      movlw   CHANNEL6        ; select channel 6, clock=Fosc/32
00EF   009F           00370                 movwf   ADCON0
                      00371 
00F0   1D9D           00372                 btfss   CCP2CON,3       ; Test if PWM is running
00F1   28F6           00373                   goto  UnsyncTcooler
                      00374         
                      00375                 waitforedge
                          M                 
00F2   1C87               M                 btfss   PORTC,1         ; Trigger on negative edge to eliminate
00F3   28F2               M                   goto $-1                  ; the influece of the current commutation 
                          M                                                 ; in the converter module
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F4   1887               M                 btfsc   PORTC,1
00F5   28F4               M                   goto $-1
                          M 
                      00376 
00F6   141F           00377 UnsyncTcooler   bsf     ADCON0,0        ; AD turn on
00F7   300C           00378                 movlw   Tacq
00F8   2022           00379                 call    wait            ; wait Tacq
                      00380 
00F9   151F           00381                 bsf     ADCON0,GO       ; start conversion
00FA   191F           00382 WaitADC6C       btfsc   ADCON0,GO       ; wait until conversion has been finished
00FB   28FA           00383                   goto WaitADC6C
                      00384 
00FC   081E           00385                 movf    ADRESH,W
00FD   00C6           00386                 movwf   TCH     ; store high value
                      00387                 BANK1
00FE   1683               M         bsf     STATUS,5    ; Select page 1
00FF   081E           00388                 movf    ADRESL,W
                      00389                 BANK0
0100   1283               M         bcf     STATUS,5    ; Select page 0
0101   00C7           00390                 movwf   TCL     ; store low value
0102   101F           00391                 bcf     ADCON0,0        ; AD shutoff
0103   0008           00392                 RETURN
                      00393 
                      00394 
                      00395 ;**********************************************************************
                      00396 ;               Double (10 bits) Precision Multiplication
                      00397 ;
                      00398 ;               PI0H:PI0M:PI0L = UI0H:UI0L * II0H:II0L
                      00399 ;
                      00400 ;               IN:     UI0H:UI0L       number 10bit-integer (MSB/LSB)
                      00401 ;                       II0H:II0L       factor 16bit-integer (MSB/LSB)
                      00402 ;               OUT:    Power_n         result 64bit-integer
                      00403 ;               TEMP:   mTemp3, mTemp2, mTemp1, mTemp0
                      00404 ;
                      00405 ;               NOTES:  runtime worst case: 295 clock cycles
                      00406 ;                       standard shift and add.
                      00407 ;
                      00408 ;                       input value format (10 bits) - 000000xx xxxxxxxx
                      00409 ;
                      00410 ;                       Power range : 00:00:00:00 -> 00:0F:F8:01
                      00411 ;**********************************************************************
                      00412 
0104   0848           00413 CalcNewPower    movf    PI0H,W
0105   00CB           00414                 movwf   PI1H
0106   0849           00415                 movf    PI0M,W
0107   00CC           00416                 movwf   PI1M
0108   084A           00417                 movf    PI0L,W
0109   00CD           00418                 movwf   PI1L            ; store old power values
                      00419                 
010A   0829           00420                 movf    UIF0L,W
010B   00F1           00421                 movwf   Temp0
010C   0828           00422                 movf    UIF0H,W
010D   00F2           00423                 movwf   Temp1
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

010E   083F           00424                 movf    IIF0L,W
010F   00F3           00425                 movwf   Temp2
0110   083E           00426                 movf    IIF0H,W
0111   00F4           00427                 movwf   Temp3
                      00428 
                      00429 ;               movf    UI0L,W
                      00430 ;               movwf   Temp0
                      00431 ;               movf    UI0H,W
                      00432 ;               movwf   Temp1
                      00433 ;               movf    II0L,W
                      00434 ;               movwf   Temp2
                      00435 ;               movf    II0H,W
                      00436 ;               movwf   Temp3
                      00437 
0112   01C8           00438                 clrf    PI0H
0113   01C9           00439                 clrf    PI0M
0114   01CA           00440                 clrf    PI0L
                      00441 
0115   1003           00442                 bcf     _C
0116   0DF3           00443                 rlf     Temp2,F         ; right align operator
0117   0DF4           00444                 rlf     Temp3,F
0118   1003           00445                 bcf     _C
0119   0DF3           00446                 rlf     Temp2,F
011A   0DF4           00447                 rlf     Temp3,F
                      00448 
011B   14C9           00449                 bsf     PI0M,1          ; placed to stop after 10 turns
                      00450 
011C   1003           00451 m_jump1         bcf     _C
011D   0CF2           00452                 rrf     Temp1,F
011E   0CF1           00453                 rrf     Temp0,F         ; test wheater LSB was 0 or 1
011F   1C03           00454                 btfss   _C
0120   2927           00455                    goto m_jump2         ; 0 -> skip this decimal place
0121   0873           00456                 movf    Temp2,W         
0122   07C9           00457                 addwf   PI0M,F          ; add LSBs
0123   1803           00458                 btfsc   _C
0124   0FC8           00459                    incfsz   PI0H,F
0125   0874           00460                 movf    Temp3,W         ; add MSBs
0126   07C8           00461                 addwf   PI0H,F
                      00462 
0127   1003           00463 m_jump2         bcf     _C
0128   0CC8           00464                 rrf     PI0H,F
0129   0CC9           00465                 rrf     PI0M,F
012A   0CCA           00466                 rrf     PI0L,F
                      00467                 
012B   1C03           00468                 btfss   _C
012C   291C           00469                    goto m_jump1
                      00470 
012D   0008           00471                 RETURN
                      00472 
                      00473 ;**********************************************************************
                      00474 ;               Get a filtered value of (UIN)
                      00475 ;
                      00476 ;               - Result register (000000xx xxxxxxxx)
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00477 ;               OUT: UIF0H,UIF0L
                      00478 ;**********************************************************************
012E   2072           00479 GetFilteredUin  call    GetUin          ; Measure current value of Uin
012F   2072           00480                 call    GetUin          ; Measure current value of Uin
0130   2072           00481                 call    GetUin          ; Measure current value of Uin
0131   2072           00482                 call    GetUin          ; Measure current value of Uin          
                      00483 
0132   0828           00484                 movf    UIF0H,W         ; Shift new filtered value into old value
0133   00AA           00485                 movwf   UIF1H
0134   0829           00486                 movf    UIF0L,W
0135   00AB           00487                 movwf   UIF1L
                      00488 
0136   01A8           00489                 clrf    UIF0H
0137   0821           00490                 movf    UI0L,W
                      00491 
0138   0723           00492                 addwf   UI1L,W          ; Add it to former value
0139   1803           00493                 btfsc   _C      ; If a carry occured...
013A   0AA8           00494                    incf UIF0H,F         ; ...then consider it 
013B   0725           00495                 addwf   UI2L,W
013C   1803           00496                 btfsc   _C      ; If a carry occured...
013D   0AA8           00497                    incf UIF0H,F
013E   0727           00498                 addwf   UI3L,W  
013F   1803           00499                 btfsc   _C              ;If a carry occured...
0140   0AA8           00500                    incf UIF0H,F
0141   00A9           00501                 movwf   UIF0L           ; save L-sum in UIFL
                      00502                 
0142   0820           00503                 movf    UI0H,W          ; get H-Bite of last measuring
0143   0722           00504                 addwf   UI1H,W
0144   0724           00505                 addwf   UI2H,W
0145   0726           00506                 addwf   UI3H,W
0146   07A8           00507                 addwf   UIF0H,F         ;save H-sum in UIFH
                      00508 
                      00509                 ;devide 16Bit by 4
                      00510 
                      00511 
0147   1003           00512                 bcf     _C
0148   0CA8           00513                 rrf     UIF0H,F         ;rotate H-Byte through carry
0149   0CA9           00514                 rrf     UIF0L,F         ;rotate L-Byte and insert a ev. carry
014A   1003           00515                 bcf     _C
014B   0CA8           00516                 rrf     UIF0H,F         ;rotate H-Byte through carry
014C   0CA9           00517                 rrf     UIF0L,F         ;rotate L-Byte and insert a ev. carry
                      00518 ;*******************************************
                      00519 ;   if Uin > Umpp, then decrease stepwidth
                      00520 ;*******************************************
                      00521                 
                      00522                 jmpFgtL UIF0H, UmppH, SmallDelta
014D   0828               M           movfw     UIF0H
                          M           jmpWgtL   0x02,SmallDelta
014E   3C02               M         sublw   0x02
014F   1C03               M         btfss   _C
0150   2962               M         goto    SmallDelta
                      00523                 jmpFltL UIF0H, UmppH, BigDelta
0151   0828               M           movfw     UIF0H
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           jmpWltL   0x02,BigDelta
0152   3C02               M         sublw   0x02
                          M         skipC
0153   1C03               M         btfss   _C
0154   1503               M         bsf     _Z
                          M         jmpNZ   BigDelta
0155   1D03               M         btfss   _Z
0156   295B               M         goto    BigDelta
                      00524                 jmpFgtL UIF0L, UmppL, SmallDelta
0157   0829               M           movfw     UIF0L
                          M           jmpWgtL   0x3B,SmallDelta
0158   3C3B               M         sublw   0x3B
0159   1C03               M         btfss   _C
015A   2962               M         goto    SmallDelta
                      00525 
                      00526 BigDelta        BANK1
015B   1683               M         bsf     STATUS,5    ; Select page 1
015C   3004           00527                 movlw   BIGSTEP_H
015D   00A3           00528                 movwf   STEP_H
015E   3000           00529                 movlw   BIGSTEP_L
015F   00A4           00530                 movwf   STEP_L
                      00531                 BANK0
0160   1283               M         bcf     STATUS,5    ; Select page 0
0161   0008           00532                 RETURN
                      00533 
                      00534 SmallDelta      BANK1
0162   1683               M         bsf     STATUS,5    ; Select page 1
0163   3002           00535                 movlw   SMALLSTEP_H
0164   00A3           00536                 movwf   STEP_H
0165   3000           00537                 movlw   SMALLSTEP_L
0166   00A4           00538                 movwf   STEP_L
                      00539                 BANK0
0167   1283               M         bcf     STATUS,5    ; Select page 0
0168   0008           00540                 RETURN
                      00541 
                      00542 ;**********************************************************************
                      00543 ;               Get a filtered value of (UOUT)
                      00544 ;
                      00545 ;               - Result register (000000xx xxxxxxxx)
                      00546 ;               OUT: UOFH,UOFL
                      00547 ;**********************************************************************
0169   2094           00548 GetFilteredUout call    GetUout         ; Measure current value of Uout
016A   2094           00549                 call    GetUout         ; Measure current value of Uout         
016B   2094           00550                 call    GetUout         ; Measure current value of Uout
016C   2094           00551                 call    GetUout         ; Measure current value of Uout
                      00552 
016D   01B4           00553                 clrf    UOFH
016E   082D           00554                 movf    UO0L,W
                      00555 
016F   072F           00556                 addwf   UO1L,W          ; Add it to former value
0170   1803           00557                 btfsc   _C              ; If a carry occured...
0171   0AB4           00558                    incf UOFH,F          ; ...then consider it 
0172   0731           00559                 addwf   UO2L,W
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0173   1803           00560                 btfsc   _C              ; If a carry occured...
0174   0AB4           00561                    incf UOFH,F
0175   0733           00562                 addwf   UO3L,W  
0176   1803           00563                 btfsc   _C              ; If a carry occured...
0177   0AB4           00564                    incf UOFH,F
0178   00B5           00565                 movwf   UOFL            ; save L-sum in UOFL
                      00566                 
0179   082C           00567                 movf    UO0H,W          ; get H-Bite of last measuring
017A   072E           00568                 addwf   UO1H,W
017B   0730           00569                 addwf   UO2H,W
017C   0732           00570                 addwf   UO3H,W
017D   07B4           00571                 addwf   UOFH,F          ;save H-sum in UIOFH
                      00572 
                      00573                 ;devide 16Bit by 4
017E   1003           00574                 bcf     _C
017F   0CB4           00575                 rrf     UOFH,F          ;rotate H-Byte through carry
0180   0CB5           00576                 rrf     UOFL,F          ;rotate L-Byte and insert a ev. carry
0181   1003           00577                 bcf     _C
0182   0CB4           00578                 rrf     UOFH,F          ;rotate H-Byte through carry
0183   0CB5           00579                 rrf     UOFL,F          ;rotate L-Byte and insert a ev. carry
                      00580 
0184   0008           00581                 RETURN
                      00582 
                      00583 
                      00584 ;**********************************************************************
                      00585 ;               Get a filtered value of (IIN)
                      00586 ;
                      00587 ;               - Result register (000000xx xxxxxxxx)
                      00588 ;               OUT: IIFH,IIFL
                      00589 ;**********************************************************************
0185   20B6           00590 GetFilteredIin  call    GetIin          ; Measure current value of Iin
0186   20B6           00591                 call    GetIin          ; Measure current value of Iin
0187   20B6           00592                 call    GetIin          ; Measure current value of Iin
0188   20B6           00593                 call    GetIin          ; Measure current value of Iin
                      00594                                 
0189   083E           00595                 movf    IIF0H,W         ; Shift new filtered value into old value
018A   00C0           00596                 movwf   IIF1H
018B   083F           00597                 movf    IIF0L,W
018C   00C1           00598                 movwf   IIF1L
                      00599 
018D   01BE           00600                 clrf    IIF0H
018E   0837           00601                 movf    II0L,W
                      00602 
018F   0739           00603                 addwf   II1L,W          ; Add it to former value
0190   1803           00604                 btfsc   _C              ; If a carry occured...
0191   0ABE           00605                    incf IIF0H,F         ; ...then consider it 
0192   073B           00606                 addwf   II2L,W
0193   1803           00607                 btfsc   _C              ; If a carry occured...
0194   0ABE           00608                    incf IIF0H,F
0195   073D           00609                 addwf   II3L,W  
0196   1803           00610                 btfsc   _C              ; If a carry occured...
0197   0ABE           00611                    incf IIF0H,F
0198   00BF           00612                 movwf   IIF0L           ; save L-sum in IIFL
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00613                 
0199   0836           00614                 movf    II0H,W          ; get H-Bite of last measuring
019A   0738           00615                 addwf   II1H,W
019B   073A           00616                 addwf   II2H,W
019C   073C           00617                 addwf   II3H,W
019D   07BE           00618                 addwf   IIF0H,F         ;save H-sum in IIFH
                      00619 
                      00620                 ;devide 16Bit by 4
019E   1003           00621                 bcf     _C
019F   0CBE           00622                 rrf     IIF0H,F         ;rotate H-Byte through carry
01A0   0CBF           00623                 rrf     IIF0L,F         ;rotate L-Byte and insert a ev. carry
01A1   1003           00624                 bcf     _C
01A2   0CBE           00625                 rrf     IIF0H,F         ;rotate H-Byte through carry
01A3   0CBF           00626                 rrf     IIF0L,F         ;rotate L-Byte and insert a ev. carry
                      00627 
01A4   0008           00628                 RETURN
                      00629 
                      00630 
                      00631 ;**********************************************************************
                      00632 ;               INTADC (ADC interrupt)
                      00633 ;
                      00634 ;               Occurs every 16 PWM period from PWM module to start ADC
                      00635 ;
                      00636 ;**********************************************************************
                      00637 
01A5   108C           00638 IntADC          bcf     PIR1,TMR2IF     ; clear interrupt flag
                      00639 
01A6   2818           00640                 goto    IntReturn
                      00641 
                      00642 
                      00643 ;**********************************************************************
                      00644 ;               UpdateCAN 
                      00645 ;
                      00646 ;               Updates IIFH,IIFL,UOFH,UOFL,UIF0H,UIF0L,TCL,TCH,TAMBH,TAMBL
                      00647 ;
                      00648 ;**********************************************************************
01A7                  00649 UpdateCAN
01A7   0064           00650                 clrwdt
01A8   2316           00651                 call    CANRqTest                                       ; if requested send values over 
                            CAN
01A9   0008           00652                 Return
                      00090 
                      00091 #include        "2510.asm"                      ; 2510 routine
                      00001 ;**********************************************************************
                      00002 ;   P R O G R A M M     MPPTnG                                        *
                      00003 ;                                                                     *
                      00004 ;   Traking program for MPPT new generation                           *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      2510.asm                                          *
                      00008 ;    Date:          20.11.00                                          *
                      00009 ;    Last Update:   19.09.02                                          *
                      00010 ;    File Version:  V5.0                                              *
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00011 ;                                                                     *
                      00012 ;    Author:        Michael Zürcher                                   *
                      00013 ;                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab                           *
                      00015 ;                                                                     *
                      00016 ;                                                                     *
                      00017 ;**********************************************************************
                      00018 ;                                                                     *
                      00019 ;    Notes:                                                           *
                      00020 ;    - Main program : mpptngV5.asm                                    *
                      00021 ;                                                                     *
                      00022 ;**********************************************************************
                      00023 
                      00024 
                      00025 #define RESET2510       0xC0            ; MCP2510 reset instruction
                      00026 #define READ2510        0x03            ; MCP2510 read instruction
                      00027 #define WRITE2510       0x02            ; MCP2510 write instruction
                      00028 #define RTS2510         0x80            ; MCP2510 request to send instruction
                      00029 #define STATUS2510      0xA0            ; MCP2510 read status instruction
                      00030 #define BITMODIFY2510   0x05            ; MCP2510 bit modify instruction
                      00031 
                      00032 
                      00033 ;*******************************************************************
                      00034 ;                 LOCAL MACROS                                 
                      00035 ;*******************************************************************
                      00036 
                      00037 ;----------------------------------------------------------------------
                      00038 ;               WRITE literal byte to MCP2510 register
                      00039 ;
                      00040 ;               IN: Reg         register address
                      00041 ;                   LitData     data to write in the register
                      00042 ;----------------------------------------------------------------------
                      00043 SPI_WriteL      MACRO   Reg,LitData
                      00044                 movlw   LitData
                      00045                 movwf   RegData2510
                      00046                 movlw   Reg
                      00047                 call    Write2510
                      00048                 ENDM
                      00049 
                      00050 ;----------------------------------------------------------------------
                      00051 ;               WRITE data byte to MCP2510 register
                      00052 ;
                      00053 ;               IN: Reg         register address
                      00054 ;                   RegData     data to write in the register
                      00055 ;----------------------------------------------------------------------
                      00056 SPI_WriteD      MACRO   Reg,RegData
                      00057                 movf    RegData,W
                      00058                 movwf   RegData2510
                      00059                 movlw   Reg
                      00060                 call    Write2510
                      00061                 ENDM
                      00062 
                      00063 
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00064 ;**********************************************************************
                      00065 ;               INIT MCP2510 CAN-Controller
                      00066 ;
                      00067 ;               Physical layer configuration:
                      00068 ;               - Fosc       = 20 MHz
                      00069 ;               - BRP        = 10
                      00070 ;               - Sync Seg   = 1 Tq
                      00071 ;               - Prop Seg   = 2 Tq
                      00072 ;               - Phase Seg1 = 3 Tq
                      00073 ;               - Phase Seg2 = 3 Tq
                      00074 ;               - SJW        = 1 Tq
                      00075 ;               - Bus line is sampled once at the sample point
                      00076 ;               - wake-up filter disable
                      00077 ;**********************************************************************
                      00078 
01AA   2243           00079 Init2510        call    Reset2510
                      00080 
01AB   3003           00081                 movlw   B'00000011'     ; mask bit CLKOUT
01AC   00EA           00082                 movwf   RegMask2510
01AD   3002           00083                 movlw   B'00000010'     ; CLKOUT pin enable / clk:4
01AE   00E8           00084                 movwf   RegData2510
01AF   300F           00085                 movlw   CANCTRL         ; CAN control register of MCP2510
01B0   2272           00086                 call    BitMod2510
                      00087 
                      00088                 SPI_WriteL CNF1,B'00000100'     ; config register 1 of MCP2510 (Bitiming)
01B1   3004               M                 movlw   B'00000100'
01B2   00E8               M                 movwf   RegData2510
01B3   302A               M                 movlw   0x2A
01B4   2257               M                 call    Write2510
                      00089 
                      00090                 SPI_WriteL CNF2,B'10001110'     ; config register 2 of MCP2510
01B5   308E               M                 movlw   B'10001110'
01B6   00E8               M                 movwf   RegData2510
01B7   3029               M                 movlw   0x29
01B8   2257               M                 call    Write2510
                      00091 
                      00092                 SPI_WriteL CNF3,B'00000101'     ; config register 3 of MCP2510
01B9   3005               M                 movlw   B'00000101'
01BA   00E8               M                 movwf   RegData2510
01BB   3028               M                 movlw   0x28
01BC   2257               M                 call    Write2510
                      00093 
                      00094                 SPI_WriteL CANINTE, B'00000000' ; int on RX0 full
01BD   3000               M                 movlw   B'00000000'
01BE   00E8               M                 movwf   RegData2510
01BF   302B               M                 movlw   0x2B
01C0   2257               M                 call    Write2510
                      00095                                                 ; no int on TX0/1/2 empty  
                      00096                                                 ; no int on Message error/Wakeup/EFLG error
                      00097 
                      00098 
                      00099 ;***********************************************************************
                      00100 ;   Configure TX
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00101 ;***********************************************************************
                      00102                 SPI_WriteL TXB0CTRL,B'00000011' ; TX0 has Highest Message Priority
01C1   3003               M                 movlw   B'00000011'
01C2   00E8               M                 movwf   RegData2510
01C3   3030               M                 movlw   0x30
01C4   2257               M                 call    Write2510
                      00103                 SPI_WriteL TXB1CTRL,B'00000010' ; TX1 has High Intermediate Message Priority
01C5   3002               M                 movlw   B'00000010'
01C6   00E8               M                 movwf   RegData2510
01C7   3040               M                 movlw   0x40
01C8   2257               M                 call    Write2510
                      00104                 SPI_WriteL TXB2CTRL,B'00000001' ; TX2 has Low Intermediate Message Priority
01C9   3001               M                 movlw   B'00000001'
01CA   00E8               M                 movwf   RegData2510
01CB   3050               M                 movlw   0x50
01CC   2257               M                 call    Write2510
                      00105 
                      00106                 SPI_WriteL TXRTSCTRL,B'00000000'        ; all TXRTS pins are only digital inputs
01CD   3000               M                 movlw   B'00000000'
01CE   00E8               M                 movwf   RegData2510
01CF   300D               M                 movlw   0x0D
01D0   2257               M                 call    Write2510
                      00107                 
                      00108                 SPI_WriteD TXB0SIDH,IDTrackerTXH; Identifier High, Low is individual for each TX buffer 
                                    
01D1   0850               M                 movf    IDTrackerTXH,W
01D2   00E8               M                 movwf   RegData2510
01D3   3031               M                 movlw   0x31
01D4   2257               M                 call    Write2510
                      00109                 SPI_WriteD TXB0SIDL,IDTrackerTXL; Identifier Low for TX0
01D5   0851               M                 movf    IDTrackerTXL,W
01D6   00E8               M                 movwf   RegData2510
01D7   3032               M                 movlw   0x32
01D8   2257               M                 call    Write2510
                      00110 
                      00111                 SPI_WriteL TXB1SIDH,0x00        ; Identifier High, Low is individual for each TX buffer 
                                            
01D9   3000               M                 movlw   0x00
01DA   00E8               M                 movwf   RegData2510
01DB   3041               M                 movlw   0x41
01DC   2257               M                 call    Write2510
                      00112                 SPI_WriteL TXB1SIDL,0x00        ; Identifier Low for TX1, never used    
01DD   3000               M                 movlw   0x00
01DE   00E8               M                 movwf   RegData2510
01DF   3042               M                 movlw   0x42
01E0   2257               M                 call    Write2510
                      00113 
                      00114                 SPI_WriteL TXB2SIDH,0x00        ; Identifier High, Low is individual for each TX buffer 
                                            
01E1   3000               M                 movlw   0x00
01E2   00E8               M                 movwf   RegData2510
01E3   3051               M                 movlw   0x51
01E4   2257               M                 call    Write2510
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00115                 SPI_WriteL TXB2SIDL,0x00        ; Identifier Low for TX1, never used    
01E5   3000               M                 movlw   0x00
01E6   00E8               M                 movwf   RegData2510
01E7   3052               M                 movlw   0x52
01E8   2257               M                 call    Write2510
                      00116                 
                      00117                 SPI_WriteL TXB0DLC,0x08         ; Data Frame of TX0 has a lenght of 8 Bytes             
01E9   3008               M                 movlw   0x08
01EA   00E8               M                 movwf   RegData2510
01EB   3035               M                 movlw   0x35
01EC   2257               M                 call    Write2510
                      00118                 SPI_WriteL TXB1DLC,0x06         ; Data Frame of TX1 has a lenght of 6 Bytes
01ED   3006               M                 movlw   0x06
01EE   00E8               M                 movwf   RegData2510
01EF   3045               M                 movlw   0x45
01F0   2257               M                 call    Write2510
                      00119                 
                      00120 ;TX Buffers are not cleared here!       
                      00121 ;***********************************************************************
                      00122 ;   Configure RX
                      00123 ;***********************************************************************
                      00124                 SPI_WriteL RXB0CTRL,B'00000000' ; B0 filter enabled, receive standart and extended frame
                            s
01F1   3000               M                 movlw   B'00000000'
01F2   00E8               M                 movwf   RegData2510
01F3   3060               M                 movlw   0x60
01F4   2257               M                 call    Write2510
                      00125                 SPI_WriteL RXB1CTRL,B'00000000' ; B1 filter enabled
01F5   3000               M                 movlw   B'00000000'
01F6   00E8               M                 movwf   RegData2510
01F7   3070               M                 movlw   0x70
01F8   2257               M                 call    Write2510
                      00126 
                      00127                 SPI_WriteL BFPCTRL,B'00000000'  ; disable RX1BF/RX0BF pin
01F9   3000               M                 movlw   B'00000000'
01FA   00E8               M                 movwf   RegData2510
01FB   300C               M                 movlw   0x0C
01FC   2257               M                 call    Write2510
                      00128                 
                      00129 ;***********************************************************************
                      00130 ;   RX Filter and Masks
                      00131 ;***********************************************************************
                      00132 
                      00133                 SPI_WriteL RXM0SIDH,B'11111111' ; acceptance filter mask 0 high
01FD   30FF               M                 movlw   B'11111111'
01FE   00E8               M                 movwf   RegData2510
01FF   3020               M                 movlw   0x20
0200   2257               M                 call    Write2510
                      00134                 SPI_WriteL RXM0SIDL,B'11100000' ; acceptance filter mask 0 low
0201   30E0               M                 movlw   B'11100000'
0202   00E8               M                 movwf   RegData2510
0203   3021               M                 movlw   0x21
0204   2257               M                 call    Write2510
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00135                                 
                      00136                 SPI_WriteD RXF1SIDH,IDTrackerRXH; acceptance filter 1 high
0205   0852               M                 movf    IDTrackerRXH,W
0206   00E8               M                 movwf   RegData2510
0207   3004               M                 movlw   0x04
0208   2257               M                 call    Write2510
                      00137                 SPI_WriteD RXF1SIDL,IDTrackerRXL; acceptance filter 1 low
0209   0853               M                 movf    IDTrackerRXL,W
020A   00E8               M                 movwf   RegData2510
020B   3005               M                 movlw   0x05
020C   2257               M                 call    Write2510
                      00138                 
                      00139                 SPI_WriteD RXF0SIDH,IDTrackerRXH; acceptance filter 0 high
020D   0852               M                 movf    IDTrackerRXH,W
020E   00E8               M                 movwf   RegData2510
020F   3000               M                 movlw   0x00
0210   2257               M                 call    Write2510
                      00140                 SPI_WriteD RXF0SIDL,IDTrackerRXL; acceptance filter 0 low
0211   0853               M                 movf    IDTrackerRXL,W
0212   00E8               M                 movwf   RegData2510
0213   3001               M                 movlw   0x01
0214   2257               M                 call    Write2510
                      00141                 
                      00142                 SPI_WriteL RXM1SIDH,B'11111111' ; acceptance filter mask 1 high
0215   30FF               M                 movlw   B'11111111'
0216   00E8               M                 movwf   RegData2510
0217   3024               M                 movlw   0x24
0218   2257               M                 call    Write2510
                      00143                 SPI_WriteL RXM1SIDL,B'11100000' ; acceptance filter mask 1 low
0219   30E0               M                 movlw   B'11100000'
021A   00E8               M                 movwf   RegData2510
021B   3025               M                 movlw   0x25
021C   2257               M                 call    Write2510
                      00144 
                      00145                 SPI_WriteL RXF2SIDH,B'00000000' ; acceptance filter 2 high
021D   3000               M                 movlw   B'00000000'
021E   00E8               M                 movwf   RegData2510
021F   3008               M                 movlw   0x08
0220   2257               M                 call    Write2510
                      00146                 SPI_WriteL RXF2SIDL,B'00000000' ; acceptance filter 2 low
0221   3000               M                 movlw   B'00000000'
0222   00E8               M                 movwf   RegData2510
0223   3009               M                 movlw   0x09
0224   2257               M                 call    Write2510
                      00147 
                      00148                 SPI_WriteL RXF3SIDH,B'00000000' ; acceptance filter 3 high
0225   3000               M                 movlw   B'00000000'
0226   00E8               M                 movwf   RegData2510
0227   3010               M                 movlw   0x10
0228   2257               M                 call    Write2510
                      00149                 SPI_WriteL RXF3SIDL,B'00000000' ; acceptance filter 3 low
0229   3000               M                 movlw   B'00000000'
022A   00E8               M                 movwf   RegData2510
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022B   3011               M                 movlw   0x11
022C   2257               M                 call    Write2510
                      00150 
                      00151                 SPI_WriteL RXF4SIDH,B'00000000' ; acceptance filter 4 high
022D   3000               M                 movlw   B'00000000'
022E   00E8               M                 movwf   RegData2510
022F   3014               M                 movlw   0x14
0230   2257               M                 call    Write2510
                      00152                 SPI_WriteL RXF4SIDL,B'00000000' ; acceptance filter 4 low
0231   3000               M                 movlw   B'00000000'
0232   00E8               M                 movwf   RegData2510
0233   3015               M                 movlw   0x15
0234   2257               M                 call    Write2510
                      00153 
                      00154                 SPI_WriteL RXF5SIDH,B'00000000' ; acceptance filter 5 high
0235   3000               M                 movlw   B'00000000'
0236   00E8               M                 movwf   RegData2510
0237   3018               M                 movlw   0x18
0238   2257               M                 call    Write2510
                      00155                 SPI_WriteL RXF5SIDL,B'00000000' ; acceptance filter 5 low
0239   3000               M                 movlw   B'00000000'
023A   00E8               M                 movwf   RegData2510
023B   3019               M                 movlw   0x19
023C   2257               M                 call    Write2510
                      00156 
                      00157 ;***********************************************************************
                      00158 ;   Errors and Interupts
                      00159 ;***********************************************************************
                      00160 
                      00161                 SPI_WriteL      CANINTE,B'00000001'     ; enable RX0 Buffer Interupt
023D   3001               M                 movlw   B'00000001'
023E   00E8               M                 movwf   RegData2510
023F   302B               M                 movlw   0x2B
0240   2257               M                 call    Write2510
                      00162                                 
0241   227F           00163                 call    NormalMode2510
                      00164 
0242   0008           00165                 RETURN
                      00166 
                      00167 
                      00168 ;**********************************************************************
                      00169 ;               RESET Internal registers to default state
                      00170 ;
                      00171 ;               NOTE: - automatically put MCP2510 in configuration mode
                      00172 ;                     data format under SPI bus
                      00173 ;                     SI pin -> instruction
                      00174 ;                     SO pin ->    ---
                      00175 ;**********************************************************************
                      00176 
0243   23BD           00177 Reset2510       call    InitSPIBuf
                      00178 
0244   30C0           00179                 movlw   RESET2510
0245   23BA           00180                 call    LoadSPIByte     ; reset MCP2510
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00181 
0246   239F           00182                 call    ExchangeSPI     ; start SPI transaction
0247   23AB           00183                 call    WaitSPIExchange ; wait SPI transaction complete
                      00184 
0248   3025           00185                 movlw   0x25            ; wait 37us
0249   2022           00186                 call    wait
                      00187 
024A   0008           00188                 RETURN
                      00189 
                      00190 
                      00191 ;**********************************************************************
                      00192 ;               READ data from register beginning at selected address
                      00193 ;
                      00194 ;               IN: w                   address of the register to be readed
                      00195 ;                   RegAdr2510          temp to hold address
                      00196 ;
                      00197 ;               NOTE: data format under SPI bus
                      00198 ;                     SI pin -> instruction / address / ---
                      00199 ;                     SO pin ->    ---      /   ---   / data
                      00200 ;**********************************************************************
024B   00E9           00201 Read2510        movwf   RegAdr2510      ; hold address
                      00202 
024C   23BD           00203                 call    InitSPIBuf      ; init SPI buffer
                      00204 
024D   3003           00205                 movlw   READ2510        ; MCP2510 instruction
024E   23BA           00206                 call    LoadSPIByte
                      00207 
024F   0869           00208                 movf    RegAdr2510,W    ; MCP2510 address
0250   23BA           00209                 call    LoadSPIByte
                      00210 
0251   3001           00211                 movlw   1               ; Expect 1 byte answer
0252   23B0           00212                 call    LoadSPIZeros
                      00213 
0253   239F           00214                 call    ExchangeSPI     ; send via SPI bus
0254   23AB           00215                 call    WaitSPIExchange ; wait transmission to be complete
                      00216 
0255   0858           00217                 movf    SPIBufBase+2,W  ; store answer in SPI buffer
                      00218 
0256   0008           00219                 RETURN
                      00220 
                      00221 
                      00222 ;**********************************************************************
                      00223 ;               WRITE data to register beginning at selected address
                      00224 ;
                      00225 ;               IN: w                   address of the register to be readed
                      00226 ;                   RegAdr2510          temp to hold address
                      00227 ;                   RegData2510         data sent/receive register
                      00228 ;
                      00229 ;               NOTE: data format under SPI bus
                      00230 ;                     SI pin -> instruction / address / data
                      00231 ;                     SO pin ->    ---      /   ---   / ---
                      00232 ;**********************************************************************
0257   00E9           00233 Write2510       movwf   RegAdr2510      ; hold address
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00234 
0258   23BD           00235                 call    InitSPIBuf      ; init SPI buffer
                      00236 
0259   3002           00237                 movlw   WRITE2510       ; MCP2510 instruction
025A   23BA           00238                 call    LoadSPIByte
                      00239 
025B   0869           00240                 movf    RegAdr2510,W    ; MCP2510 address
025C   23BA           00241                 call    LoadSPIByte
                      00242 
025D   0868           00243                 movf    RegData2510,W   ; Expect 1 byte answer
025E   23BA           00244                 call    LoadSPIByte
                      00245 
025F   239F           00246                 call    ExchangeSPI     ; send via SPI bus
0260   23AB           00247                 call    WaitSPIExchange ; wait transmission to be complete
                      00248 
0261   0008           00249                 RETURN
                      00250 
                      00251 
                      00252 ;**********************************************************************
                      00253 ;               RTS Send the request to send instruction to the CAN-Bus
                      00254 ;               Controller with value in w (ORed)
                      00255 ;
                      00256 ;               - Sets TXBnCTRL
                      00257 ;               - TXREQ bit for one or more transmit buffers
                      00258 ;
                      00259 ;               IN: w                   address of the register to be readed
                      00260 ;                   RegAdr2510          temp to hold address
                      00261 ;                   RegData2510         data sent/receive register
                      00262 ;
                      00263 ;               NOTE: data format under SPI bus
                      00264 ;                     SI pin -> instruction (10000nnn)
                      00265 ;                     SO pin ->    ---
                      00266 ;**********************************************************************
0262   00E8           00267 Rts2510         movwf   RegData2510     ; hold address
                      00268 
0263   23BD           00269                 call    InitSPIBuf      ; init SPI buffer
                      00270 
0264   3080           00271                 movlw   RTS2510         ; MCP2510 instruction
0265   0468           00272                 iorwf   RegData2510,W   ; get data and OR it with RTS
0266   23BA           00273                 call    LoadSPIByte
                      00274 
0267   239F           00275                 call    ExchangeSPI     ; send via SPI bus
0268   23AB           00276                 call    WaitSPIExchange ; wait transmission to be complete
                      00277 
0269   0008           00278                 RETURN
                      00279 
                      00280 
                      00281 ;**********************************************************************
                      00282 ;               GET STATUS bits for transmit/receive functions 
                      00283 ;
                      00284 ;               NOTE: data format under SPI bus
                      00285 ;                     SI pin -> instruction /  ---   /     ---
                      00286 ;                     SO pin ->    ---      /  data  / repeat data
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00287 ;**********************************************************************
026A   23BD           00288 Status2510      call    InitSPIBuf      ; init SPI buffer
                      00289 
026B   30A0           00290                 movlw   STATUS2510      ; MCP2510 instruction
026C   23BA           00291                 call    LoadSPIByte
                      00292 
026D   3001           00293                 movlw   1               ; Expect 1 byte answer
026E   23B0           00294                 call    LoadSPIZeros
                      00295 
026F   239F           00296                 call    ExchangeSPI     ; send via SPI bus
0270   23AB           00297                 call    WaitSPIExchange ; wait transmission to be complete
                      00298 
0271   0008           00299                 RETURN
                      00300 
                      00301 
                      00302 ;**********************************************************************
                      00303 ;               MODIFY BIT IN REGITERS OF MCP2510 CAN-Controller 
                      00304 ;
                      00305 ;               IN: reg W               address of the register to be modified
                      00306 ;                   RegAdr2510          temp to hold address
                      00307 ;                   RegMask2510         mask register
                      00308 ;                   RegData2510         data sent/receive register
                      00309 ;
                      00310 ;               NOTE: data format under SPI bus
                      00311 ;                     SI pin -> instruction / address / mask / data
                      00312 ;                     SO pin -> ---
                      00313 ;**********************************************************************
0272   00E9           00314 BitMod2510      movwf   RegAdr2510      ; hold address
                      00315 
0273   23BD           00316                 call    InitSPIBuf      ; init SPI buffer
                      00317 
0274   3005           00318                 movlw   BITMODIFY2510   ; MCP2510 instruction
0275   23BA           00319                 call    LoadSPIByte
                      00320 
0276   0869           00321                 movf    RegAdr2510,W    ; MCP2510 address
0277   23BA           00322                 call    LoadSPIByte
                      00323 
0278   086A           00324                 movf    RegMask2510,W   ; MCP2510 mask
0279   23BA           00325                 call    LoadSPIByte
                      00326 
027A   0868           00327                 movf    RegData2510,W   ; MCP2510 data
027B   23BA           00328                 call    LoadSPIByte
                      00329 
027C   239F           00330                 call    ExchangeSPI     ; send via SPI bus
027D   23AB           00331                 call    WaitSPIExchange ; wait transmission to be complete
                      00332 
027E   0008           00333                 RETURN
                      00334 
                      00335 
                      00336 ;**********************************************************************
                      00337 ;               SET NORMAL MODE OF MCP2510 CAN-Controller 
                      00338 ;
                      00339 ;               NOTE: - Set normal operation mode
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00340 ;                     - CLKOUT pin disable
                      00341 ;**********************************************************************
027F   30E0           00342 NormalMode2510  movlw   B'11100000'     ; mask bits
0280   00EA           00343                 movwf   RegMask2510
0281   3000           00344                 movlw   B'00000000'     ; Set Normal Mode
0282   00E8           00345                 movwf   RegData2510
0283   300F           00346                 movlw   CANCTRL         ; CAN control register of MCP2510
0284   2272           00347                 call    BitMod2510
                      00348 
0285   3000           00349                 movlw   0x00    
0286   00EF           00350                 movwf   NormalModeCounter
                      00351                 
0287   0AEF           00352 WaitNormal      incf    NormalModeCounter,f
0288   300E           00353                 movlw   CANSTAT
0289   224B           00354                 call    Read2510
028A   39E0           00355                 andlw   0xE0
028B   1903           00356                 btfsc   _Z
028C   2A91           00357                   goto  Ret
                      00358                 jmpFneL NormalModeCounter,0xFF,WaitNormal               
028D   086F               M         movf    NormalModeCounter,W
028E   3CFF               M           sublw   0xFF
028F   1D03               M           btfss   _Z
0290   2A87               M           goto    WaitNormal
                      00359 
0291   0000           00360 Ret             nop
0292   0008           00361                 RETURN
                      00362 
                      00363 
                      00092 #include        "init.asm"                      ; init routine
                      00001 ;**********************************************************************
                      00002 ;   P R O G R A M M     MPPTnG                                            *
                      00003 ;                                                                     *
                      00004 ;   Traking program for MPPT new generation                           *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      init.asm                                          *
                      00008 ;    Date:          15.11.00                                          *
                      00009 ;    Last Update:   21.09.00                                          *
                      00010 ;    File Version:  V3.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        Michael Zürcher                                   *
                      00013 ;                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab                           *
                      00015 ;                                                                     *
                      00016 ;    Changes:       Introduced separate init routine with V3.0        *
                      00017 ;                                                                     *
                      00018 ;**********************************************************************
                      00019 ;                                                                     *
                      00020 ;    Notes:                                                           *
                      00021 ;    - Main program : mpptng.asm                                      *
                      00022 ;                                                                     *
                      00023 ;**********************************************************************
                      00024 ;                                                                     *
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00025 ;    Ports config:                                                    *
                      00026 ;                                                                     *
                      00027 ;    port ra0   an0     i       Analog Umes_in                                * 
                      00028 ;    port ra1   an1     i       Analog Umes_out                               *
                      00029 ;    port ra2   an2     i       Analog Imes_in                                *
                      00030 ;    port ra3   Vref+   i       +4.1V                                     *
                      00031 ;    port ra4   an3     i       --- not connected ---                         *
                      00032 ;    port ra5   an4     i       Analog Temp Ambiant                           *
                      00033 ;                                                                     *
                      00034 ;    port rb0   int     i       External INT                                  *
                      00035 ;    port rb1   -       o       LED red                                       *
                      00036 ;    port rb2   -       i       Can present                                   *
                      00037 ;    port rb3   -       i       OVH interrupt (OverHeat)                      *
                      00038 ;    port rb4   -       i       NOC interrupt (NoCharge)                      *
                      00039 ;    port rb5   -       i       UNDV interrupt (UnderVoltage)                 *
                      00040 ;    port rb6   pgc     o       In-Circuit Debugger                           *
                      00041 ;    port rb7   pgd     o       In-Circuit Debugger                           *
                      00042 ;                                                                     *
                      00043 ;    port rc0   -       o       ENA_FET                                       *
                      00044 ;    port rc1   ccp2    o       PWM2 (Duty cycle)                         *
                      00045 ;    port rc2   ccp1    o       PWM1 (Aux pulse)                          *
                      00046 ;    port rc3   sck     o       SPI bus - SCK (output for master mode)        *
                      00047 ;    port rc4   sdi     i       SPI bus - SDI (auto controlled by SPI Module) *
                      00048 ;    port rc5   sdo     o       SPI bus - SDO (output)                        *
                      00049 ;    port rc6   -       o       RS232TX                                       *
                      00050 ;    port rc7   -       i       RS232RX                                       *
                      00051 ;                                                                     *
                      00052 ;    port rd0   -       i       Adress0 IDTracker                             * 
                      00053 ;    port rd1   -       i       Adress1 IDTracker                             *
                      00054 ;    port rd2   -       i       Adress2 IDTracker                             *
                      00055 ;    port rd3   -       i       Adress3 IDTracker                             *
                      00056 ;    port rd4   -       i       Adress4 IDTracker                             *
                      00057 ;    port rd5   -       o       SEL_CAN                                       *
                      00058 ;    port rd6   -       o       RES_NOC (Reset NoCharge flip-flop)            *
                      00059 ;    port rd7   -       o       RES_OVH (Reset OverVoltage flip-flop)         *
                      00060 ;                                                                     *
                      00061 ;    port re0   an5     i       Analog  -not used-                            *
                      00062 ;    port re1   an6     i       Analog Temp Cooler                            *
                      00063 ;    port re2   -       i       --- not used ---                              *
                      00064 ;                                                                     *
                      00065 ;**********************************************************************
                      00066 
                      00067 
                      00068 ;**********************************************************************
                      00069 ;               GENERAL INITIALISATION
                      00070 ;**********************************************************************
                      00071 Init            BANK1
0293   1683               M         bsf     STATUS,5    ; Select page 1
0294   018C           00072                         clrf    PIE1_P                  ; clear peripheral interrupts
                      00073        
0295   308D           00074                         movlw   B'10001101'     ; pullup off / falling edge for RB0/INT pin
                      00075                                                                         ; Watchdog Prescaler is 101 = 1:
                            32 = 0.625s
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00076                                                                         ; Watchdog Timer must be enabled
                             on download "2007h"
0296   0081           00077                         movwf   OPTION_REG_P    
                      00078                          
                      00079 
0297   3020           00080                         movlw   0x20                    ; clear general purpose register (RAM) bank 0
0298   0084           00081                         movwf   FSR
0299   0180           00082 initClr1        clrf    INDF
029A   0A84           00083                         incf    FSR,F
029B   1F84           00084                         btfss   FSR,7
029C   2A99           00085                         goto    initClr1
                      00086 
029D   30A0           00087                         movlw   0xA0                    ; clear general purpose register (RAM) bank 1
029E   0084           00088                         movwf   FSR
029F   0180           00089 initClr2        clrf    INDF
02A0   0A84           00090                         incf    FSR,F
02A1   1B84           00091                         btfsc   FSR,7
02A2   2A9F           00092                         goto    initClr2
                      00093 
                      00094 
02A3   01EE           00095                         clrf    GenFlags                ; clear general flags
                      00096 
                      00097                         BANK0
02A4   1283               M         bcf     STATUS,5    ; Select page 0
                      00098 
02A5   0185           00099                         clrf    PORTA                   ; clear output data latches of PortA
02A6   0186           00100                         clrf    PORTB                   ; clear output data latches of PortB
02A7   3003           00101                         movlw   B'00000011'             ; init portC:   RC0  ENA_FET=1
                      00102                                                                         ; RC1  DUT_CYC=1
                      00103                                                                         ; RC2  AUX_PUL=0
02A8   0087           00104                         movwf   PORTC   
                      00105 
                      00106                         BANK1
02A9   1683               M         bsf     STATUS,5    ; Select page 1
                      00107                 
02AA   302F           00108                         movlw   INIT_IO_A       ; init portA direction
02AB   0085           00109                         movwf   TRISA
02AC   303D           00110                         movlw   INIT_IO_B       ; init portB direction
02AD   0086           00111                         movwf   TRISB
02AE   3090           00112                         movlw   INIT_IO_C       ; init portC direction
02AF   0087           00113                         movwf   TRISC
02B0   300F           00114                         movlw   INIT_IO_D       ; init portD direction
02B1   0088           00115                         movwf   TRISD
02B2   3007           00116                         movlw   INIT_IO_E       ; init portE direction
02B3   0089           00117                         movwf   TRISE
                      00118 
                      00119                         BANK0
02B4   1283               M         bcf     STATUS,5    ; Select page 0
                      00120 
02B5   30C8           00121                         movlw   B'11001000'     ; enable peripheral interrupt, disables RB0/INT
                      00122                                                                 ; enable port B change interrupt
02B6   008B           00123                         movwf   INTCON
                      00124                                         
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B7   0008           00125                         RETURN
                      00126 
                      00093 
                      00094 #include        "can.asm"                       ; can network routine
                      00001 ;**********************************************************************
                      00002 ;   P R O G R A M M     MPPTnG                                        *
                      00003 ;                                                                     *
                      00004 ;   Traking program for MPPT new generation                           *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      can.asm                                           *
                      00008 ;    Date:          15.11.00                                          *
                      00009 ;    Last Update:   18.10.00                                          *
                      00010 ;    File Version:  V3.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        Michael Zürcher                                   *
                      00013 ;                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab                           *
                      00015 ;                                                                     *
                      00016 ;    Changes:       separate CAN handling programm with V3.0          *
                      00017 ;                                                                     *
                      00018 ;**********************************************************************
                      00019 ;                                                                     *
                      00020 ;    Notes:                                                           *
                      00021 ;    - Main program : mpptngV4.asm                                    *
                      00022 ;                                                                     *
                      00023 ;**********************************************************************
                      00024 
02B8   1688           00025 InitCAN         bsf     CAN_CS          ; deselect CAN Controller
                      00026 
                      00027 ;**********************************************************************
                      00028 ;               INIT CAN MODULE
                      00029 ;**********************************************************************
                      00030 
                      00031 
                      00032 
                      00033                 ;read the DIP-switches and attribut IDTracker
                      00034 
02B9   01D1           00035                 clrf    IDTrackerTXL
                      00036                 
02BA   30EE           00037                 movlw   TXBASEADR
02BB   00D0           00038                 movwf   IDTrackerTXH
02BC   1988           00039                 btfsc   PORTD,3
02BD   0AD0           00040                    incf    IDTrackerTXH,F       
                      00041                 
02BE   30E2           00042                 movlw   RXBASEADR
02BF   00D2           00043                 movwf   IDTrackerRXH
02C0   1988           00044                 btfsc   PORTD,3
02C1   0AD2           00045                    incf    IDTrackerRXH,F       
                      00046 
02C2   0808           00047                 movf    PORTD,W         ; read switches
02C3   3907           00048                 andlw   B'00000111'
02C4   1003           00049                 bcf     _C
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C5   00D1           00050                 movwf   IDTrackerTXL
02C6   0DD1           00051                 rlf     IDTrackerTXL,F  ; shift left four positions
02C7   0DD1           00052                 rlf     IDTrackerTXL,F
02C8   0DD1           00053                 rlf     IDTrackerTXL,F
02C9   0DD1           00054                 rlf     IDTrackerTXL,F
02CA   0DD1           00055                 rlf     IDTrackerTXL,F
02CB   0851           00056                 movf    IDTrackerTXL,W
02CC   00D3           00057                 movwf   IDTrackerRXL    
                      00058 
                      00059                                 
02CD   2394           00060                 call    InitSPIPort     ; Initialize SPI-Bus
                      00061 
                      00062 
                      00063                 ; Wait 40 ms for 2510 to initialize ( there is no significance to 40 ms,
                      00064                 ; we just selected a large time since time is not critical)
                      00065 
02CE   2036           00066                 call    wait20ms
02CF   2036           00067                 call    wait20ms
                      00068 
02D0   21AA           00069                 call    Init2510                ; Initialize CAN-Controller MCP2510
                      00070                 
                      00071 
                      00072 ;*******************************************************************************
                      00073 ; configure and enable RB0/INT
                      00074 ;*******************************************************************************
                      00075 
02D1   0801           00076                 movf    OPTION_REG_P,W  ; read Option Register
02D2   39BF           00077                 andlw   B'10111111'     ; Interupt on falling edge of RB0/INT pin
02D3   0081           00078                 movwf   OPTION_REG_P    ; 
                      00079 
02D4   0008           00080                 RETURN
                      00081 
                      00082 ;**********************************************************************
                      00083 ;               Update TX0 Buffer
                      00084 ;
                      00085 ;               Frame type   -> Data Frame
                      00086 ;               ID type      -> Standart
                      00087 ;               Frame Format -> SOF / ID / control / datas / CRC / EOF
                      00088 ;               Data Format  -> Byte0 : UinH
                      00089 ;                               Byte1 : UinL
                      00090 ;                               Byte2 : IinH
                      00091 ;                               Byte3 : IinL
                      00092 ;                               Byte4 : UoutH
                      00093 ;                               Byte5 : UoutL
                      00094 ;                               Byte6 : TambH
                      00095 ;                               Byte7 : TambL
                      00096 ;**********************************************************************
                      00097 
                      00098 UpdateTX0       SPI_WriteL TXB0DLC,0x07         ; 7 bytes to send
02D5   3007               M                 movlw   0x07
02D6   00E8               M                 movwf   RegData2510
02D7   3035               M                 movlw   0x35
02D8   2257               M                 call    Write2510
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00099                 
02D9   086E           00100                 movf    GenFlags,W              ; add GenFlags to UinH Byte
02DA   390F           00101                 andlw   B'00001111'
02DB   00F1           00102                 movwf   Temp0
02DC   1003           00103                 bcf     _C
02DD   0DF1           00104                 rlf     Temp0,F
02DE   0DF1           00105                 rlf     Temp0,F
02DF   0DF1           00106                 rlf     Temp0,F
02E0   0DF1           00107                 rlf Temp0,F
02E1   0828           00108                 movfw   UIF0H
02E2   3903           00109                 andlw   B'00000011'
02E3   00A8           00110                 movwf   UIF0H
02E4   0871           00111                 movfw   Temp0
02E5   0728           00112                 addwf   UIF0H,W
02E6   00F1           00113                 movwf   Temp0
                      00114                 SPI_WriteD TXB0D0,Temp0
02E7   0871               M                 movf    Temp0,W
02E8   00E8               M                 movwf   RegData2510
02E9   3036               M                 movlw   0x36
02EA   2257               M                 call    Write2510
                      00115                 SPI_WriteD TXB0D1,UIF0L
02EB   0829               M                 movf    UIF0L,W
02EC   00E8               M                 movwf   RegData2510
02ED   3037               M                 movlw   0x37
02EE   2257               M                 call    Write2510
                      00116                 SPI_WriteD TXB0D2,IIF0H
02EF   083E               M                 movf    IIF0H,W
02F0   00E8               M                 movwf   RegData2510
02F1   3038               M                 movlw   0x38
02F2   2257               M                 call    Write2510
                      00117                 SPI_WriteD TXB0D3,IIF0L 
02F3   083F               M                 movf    IIF0L,W
02F4   00E8               M                 movwf   RegData2510
02F5   3039               M                 movlw   0x39
02F6   2257               M                 call    Write2510
                      00118                 SPI_WriteD TXB0D4,UOFH 
02F7   0834               M                 movf    UOFH,W
02F8   00E8               M                 movwf   RegData2510
02F9   303A               M                 movlw   0x3A
02FA   2257               M                 call    Write2510
                      00119                 SPI_WriteD TXB0D5,UOFL  
02FB   0835               M                 movf    UOFL,W
02FC   00E8               M                 movwf   RegData2510
02FD   303B               M                 movlw   0x3B
02FE   2257               M                 call    Write2510
                      00120         
02FF   20D8           00121                 call    GetTamb
0300   249A           00122                 call    ConvTempAmb
0301   00C3           00123                 movwf   TAMBL
                      00124                 SPI_WriteD TXB0D6,TAMBL 
0302   0843               M                 movf    TAMBL,W
0303   00E8               M                 movwf   RegData2510
0304   303C               M                 movlw   0x3C
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0305   2257               M                 call    Write2510
                      00125 
                      00126 ;               call    GetTCooler
                      00127 ;               call    ConvTempCooler
                      00128 ;               movwf   TCL
                      00129 ;               SPI_WriteD TXB0D7,TCL   
                      00130                 
0306   0008           00131                 RETURN
                      00132 
                      00133 ;**********************************************************************
                      00134 ;  Send content of TX0 Buffer on CAN Bus
                      00135 ;**********************************************************************
                      00136 
0307   0064           00137 SendCANTX0      clrwdt                          ; reset watchdog
0308   3008           00138                 movlw   B'00001000'             ; mask bit TXREQ (msg transmit request)
0309   00EA           00139                 movwf   RegMask2510
030A   3030           00140                 movlw   TXB0CTRL                ; transmit buffer1 control register
030B   224B           00141                 call    Read2510
030C   056A           00142                 andwf   RegMask2510,W           ; test TXREQ bit
030D   1D03           00143                 btfss   STATUS,Z                ; wait until TXREQ = 0 (wait for pending msg to be sent)
030E   2B07           00144                    goto    SendCANTX0   
030F   3001           00145                 movlw   RTS0                    ; transmit buffer Tx0
0310   2262           00146                 call    Rts2510
                      00147 
0311   0008           00148                 RETURN
                      00149 
                      00150 ;**********************************************************************
                      00151 ;               CAN Interrupt Handling routine
                      00152 ;**********************************************************************
0312   176E           00153 IntCAN          bsf     CANTxRq
0313   108B           00154                 bcf     INTCON,INTF
0314   120B           00155                 bcf     INTCON,INTE             
0315   2818           00156                 goto    IntReturn
                      00157 
                      00158 ;**********************************************************************
                      00159 ;               Send Data Over CAn if requested
                      00160 ;**********************************************************************
0316   1EEE           00161 CANRqTest       btfss   Initialized
0317   0008           00162                    RETURN
0318   1D06           00163                 btfss   CAN_PRE         ; skip next line if CAN_PRE = 0
0319   0008           00164                    RETURN
031A   0808           00165                 movf    PORTD,W         ; read A0-A3
031B   390F           00166                 andlw   B'00001111'     ; mask A0-A3 Bits
031C   1903           00167                 btfsc   _Z      
031D   0008           00168                    RETURN       
                      00169 ;               btfss   CANTxRq 
                      00170 ;                  RETURN       
031E   302C           00171                 movlw   CANINTF
031F   224B           00172                 call    Read2510
0320   00F6           00173                 movwf   Temp4
0321   1C76           00174                 btfss   Temp4,0
0322   0008           00175                         RETURN          
                      00176 
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0323   2185           00177                 call    GetFilteredIin                          ; get actual values
0324   2169           00178                 call    GetFilteredUout
0325   212E           00179                 call    GetFilteredUin
                      00180 ;               call    GetTCooler
0326   20D8           00181                 call    GetTamb
                      00182 
0327   22D5           00183                 call    UpdateTX0
0328   2307           00184                 call    SendCANTX0
                      00185 
                      00186                 SPI_WriteL CANINTF,B'00000000'
0329   3000               M                 movlw   B'00000000'
032A   00E8               M                 movwf   RegData2510
032B   302C               M                 movlw   0x2C
032C   2257               M                 call    Write2510
                      00187 
032D   302C           00188                 movlw   CANINTF
032E   224B           00189                 call    Read2510
032F   0000           00190                 nop
0330   108B           00191                 bcf     INTCON,INTF
0331   160B           00192                 bsf     INTCON,INTE
0332   136E           00193                 bcf     CANTxRq
0333   0008           00194                 RETURN
                      00195         
                      00196 
                      00197 
                      00198 
                      00095 #include        "pwm.asm"                       ; PWM Modules routine
                      00001 ;**********************************************************************
                      00002 ;   P R O G R A M M     MPPTnG                                        *
                      00003 ;                                                                     *
                      00004 ;   Traking program for MPPT new generation                           *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      pwm.asm                                           *
                      00008 ;    Date:          15.11.00                                          *
                      00009 ;    Last Update:   03.01.03                                          *
                      00010 ;    File Version:  V3.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        M. Zuercher                                       *
                      00013 ;                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab                           *
                      00015 ;                                                                     *
                      00016 ;    Changes:       added PWM interrupt to start ADC                  *
                      00017 ;                                                                     *
                      00018 ;**********************************************************************
                      00019 ;                                                                     *
                      00020 ;    Notes:                                                           *
                      00021 ;    - Main program : mpptng.asm                                      *
                      00022 ;                                                                     *
                      00023 ;**********************************************************************
                      00024 ;                                                                     *
                      00025 ;    Config:                                                          *
                      00026 ;                                                                     *
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027 ;    PWM1 -> CCP1 (pin 36) -> Aux pulse (Sa')                         *
                      00028 ;            Duty cycle : 016h (0000010110b)                          *
                      00029 ;                                                                     *
                      00030 ;    PWM2 -> CCP2 (pin 35) -> Duty cycle (Sm')                        *
                      00031 ;            Duty cycle : 190h (0110010000b)                          *
                      00032 ;                                                                     *
                      00033 ;**********************************************************************
                      00034 
                      00035 
                      00036 ;**********************************************************************
                      00037 ;               INIT PWM MODULES
                      00038 ;**********************************************************************
                      00039 
                      00040 InitPWM         BANK1
0334   1683               M         bsf     STATUS,5    ; Select page 1
0335   30CF           00041                 movlw   PERIODE                 ; set PWMs period
0336   0092           00042                 movwf   PR2
                      00043                 BANK0
0337   1283               M         bcf     STATUS,5    ; Select page 0
                      00044 
0338   3006           00045                 movlw   AUX_PW                  ; PWM1 duty cycle (Sa')
0339   0095           00046                 movwf   CCPR1L
033A   1697           00047                 bsf             CCP1CON,5               ; These are the 2 LSBs of the PWM duty cycle
033B   1217           00048                 bcf             CCP1CON,4
                      00049 
033C   3074           00050                 movlw   INITDUTY                ; PWM2 duty cycle (Sm')
033D   00CE           00051                 movwf   DUTY2_H                 ; init duty variable
033E   009B           00052                 movwf   CCPR2L
                      00053 
033F   1487           00054                 bsf     TRISC,1
0340   1507           00055                 bsf             TRISC,2
                      00056 
0341   30F4           00057                 movlw   B'11110100'             ; Timer2 on / prescaler is 1 / postscaler is 16
0342   0092           00058                 movwf   T2CON
                      00059 
                      00060                 BANK1
0343   1683               M         bsf     STATUS,5    ; Select page 1
0344   108C           00061                 bcf             PIE1_P,TMR2IE   ; Timer 2 to PR2 match  interrupt disable
                      00062                 BANK0
0345   1283               M         bcf     STATUS,5    ; Select page 0
                      00063 
0346   234F           00064                 call    PWMoff
                      00065 
0347   0008           00066                 RETURN
                      00067 
                      00068 ;**********************************************************************
                      00069 ;               Turn PWMs on, HS-FET remains off
                      00070 ;**********************************************************************
0348   0000           00071 PWMon           nop
0349   1597           00072                 bsf     CCP1CON,3       ; set PWM1 mode
034A   1517           00073                 bsf     CCP1CON,2
034B   159D           00074                 bsf     CCP2CON,3       ; set PWM2 mode
034C   151D           00075                 bsf     CCP2CON,2
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00076 
034D   1007           00077                 bcf     ENA_FET
                      00078                 
034E   0008           00079                 RETURN
                      00080 
                      00081 ;**********************************************************************
                      00082 ;               Turn PWMs and HS-FET off
                      00083 ;**********************************************************************
034F   0000           00084 PWMoff          nop
0350   0000           00085                 nop
0351   1197           00086                 bcf     CCP1CON,3       ; set PWM1 mode
0352   1117           00087                 bcf     CCP1CON,2
0353   119D           00088                 bcf     CCP2CON,3       ; set PWM2 mode
0354   111D           00089                 bcf     CCP2CON,2
                      00090 
0355   1107           00091                 bcf     PORTC,2         ; turn off AUX_PUL
0356   1087           00092                 bcf     PORTC,1         ; turn off Duty Cycle
                      00093 
0357   1407           00094                 bsf     ENA_FET
                      00095                 
0358   0008           00096                 RETURN
                      00097 
                      00098 ;**********************************************************************
                      00099 ;               Load duty cycle of PWM2 
                      00100 ;
                      00101 ;               IN: DUTY2_H, DUTY2_L (xxxxxxxx xx000000)
                      00102 ;**********************************************************************
                      00103 
0359   084E           00104 LoadDuty        movf    DUTY2_H,W
035A   009B           00105                 movwf   CCPR2L          ; write H-Bite of Duty
                      00106 
035B   0CCF           00107                 rrf     DUTY2_L,F       ; rotate the 2 L-Bits by 2
035C   0C4F           00108                 rrf     DUTY2_L,W
035D   0DCF           00109                 rlf     DUTY2_L,F       ; restore DUTY2_L
                      00110                 
035E   3930           00111                 andlw   B'00110000'     ; clear all bits except Bit4 and 5
                      00112 
035F   121D           00113                 bcf     CCP2CON,4
0360   129D           00114                 bcf     CCP2CON,5
                      00115 
0361   049D           00116                 iorwf   CCP2CON,F       ; write L-Bits of Duty
                      00117 
0362   0008           00118 EndLoad         RETURN
                      00119 
                      00120 
                      00121 ;**********************************************************************
                      00122 ;               Increment / Decrement duty cycle of PWM2
                      00123 ;
                      00124 ;               IN: DUTY2_H, DUTY2_L (xxxxxxxx xx000000)
                      00125 ;**********************************************************************
                      00126 
                      00127 IncDuty         BANK1
0363   1683               M         bsf     STATUS,5    ; Select page 1
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0364   0824           00128                 movf    STEP_L,w
                      00129                 BANK0
0365   1283               M         bcf     STATUS,5    ; Select page 0
0366   074F           00130                 addwf   DUTY2_L,W
0367   39C0           00131                 andlw   B'11000000'     ; mask L-Byte
0368   00CF           00132                 movwf   DUTY2_L
0369   1803           00133                 btfsc   _C
036A   0ACE           00134                   incf  DUTY2_H,F       ; skip if flag C (carry) = 0 
                      00135                 BANK1
036B   1683               M         bsf     STATUS,5    ; Select page 1
036C   0823           00136                 movf    STEP_H,w
                      00137                 BANK0
036D   1283               M         bcf     STATUS,5    ; Select page 0
036E   07CE           00138                 addwf   DUTY2_H,F       ; DUTY2_H:DUTY2_L = DUTY2_H:DUTY2_L + STEP_H:STEP_L
                      00139 
036F   2359           00140                 call    LoadDuty
                      00141 
0370   0008           00142                 RETURN
                      00143 
                      00144 ;----------------------------------------------------------------------
                      00145 
                      00146 DecDuty         BANK1
0371   1683               M         bsf     STATUS,5    ; Select page 1
0372   0824           00147                 movf    STEP_L,w
                      00148                 BANK0
0373   1283               M         bcf     STATUS,5    ; Select page 0
0374   024F           00149                 subwf   DUTY2_L,W
                      00150 
0375   39C0           00151                 andlw   B'11000000'     ; mask L-Byte
0376   00CF           00152                 movwf   DUTY2_L
                      00153 
0377   1C03           00154                 btfss   _C
0378   03CE           00155                   decf  DUTY2_H,F       ; skip if flag C (borrow) = 1
                      00156                 BANK1
0379   1683               M         bsf     STATUS,5    ; Select page 1
037A   0823           00157                 movf    STEP_H,w
                      00158                 BANK0
037B   1283               M         bcf     STATUS,5    ; Select page 0
037C   02CE           00159                 subwf   DUTY2_H,F       ; DUTY2_H:DUTY2_L = DUTY2_H:DUTY2_L - STEP_H:STEP_L
                      00160 
                      00161                 ; lower limitat of duty
                      00162                 jmpFgtL DUTY2_H,DUTY2_MIN_H,WhitinLimit         ; don't limit, if greater
037D   084E               M           movfw     DUTY2_H
                          M           jmpWgtL   0x0E,WhitinLimit
037E   3C0E               M         sublw   0x0E
037F   1C03               M         btfss   _C
0380   2B92               M         goto    WhitinLimit
                      00163                 jmpFltL DUTY2_H,DUTY2_MIN_H,LimitIt             ; limit, if lower
0381   084E               M           movfw     DUTY2_H
                          M           jmpWltL   0x0E,LimitIt
0382   3C0E               M         sublw   0x0E
                          M         skipC
0383   1C03               M         btfss   _C
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0384   1503               M         bsf     _Z
                          M         jmpNZ   LimitIt
0385   1D03               M         btfss   _Z
0386   2B8D               M         goto    LimitIt
                      00164                 jmpFgeL DUTY2_L,DUTY2_MIN_L,WhitinLimit         ; consider L-Bytes
0387   084F               M           movfw     DUTY2_L
                          M           jmpWgeL   0xE7,WhitinLimit
0388   3CE7               M         sublw   0xE7
0389   1C03               M         btfss   _C
038A   2B92               M         goto    WhitinLimit
038B   1903               M         btfsc   _Z
038C   2B92               M         goto    WhitinLimit
                      00165 
038D   300E           00166 LimitIt         movlw   DUTY2_MIN_H
038E   00CE           00167                 movwf   DUTY2_H
038F   30E7           00168                 movlw   DUTY2_MIN_L
0390   39C0           00169                 andlw   B'11000000'     ; mask L-Byte
0391   00CF           00170                 movwf   DUTY2_L         ; duty = duty_max
                      00171 
0392   2359           00172 WhitinLimit     call    LoadDuty
                      00173 
0393   0008           00174                 RETURN
                      00175 
                      00096 #include        "spi.asm"                       ; SPI routine
                      00001 ;**********************************************************************
                      00002 ;   P R O G R A M M     MPPTnG                                        *
                      00003 ;                                                                     *
                      00004 ;   Traking program for MPPT new generation                           *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      spi.asm                                           *
                      00008 ;    Date:          15.11.00                                          *
                      00009 ;    Last Update:   26.4.00                                           *
                      00010 ;    File Version:  V3.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        Vezzini A. / M. Lehmann / F. Kaufmann             *
                      00013 ;                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab                           *
                      00015 ;                                                                     *
                      00016 ;    Changes:       placed interrupt routine in the same file         *
                      00017 ;                                                                     *
                      00018 ;**********************************************************************
                      00019 ;                                                                     *
                      00020 ;    Notes:                                                           *
                      00021 ;    - Main program : mpptng.asm                                      *
                      00022 ;                                                                     *
                      00023 ;**********************************************************************
                      00024 
                      00025 ;**********************************************************************
                      00026 ;               INIT SPI PORT
                      00027 ;
                      00028 ;               SPI Master, Idle high, Fosc/4, no collision
                      00029 ;**********************************************************************
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00030 
0394   1294           00031 InitSPIPort     bcf     SSPCON,SSPEN    ; disable SPI Module
                      00032 
0395   3012           00033                 movlw   INIT_SPI        ; init SPI
0396   0094           00034                 movwf   SSPCON
                      00035 
0397   1694           00036                 bsf     SSPCON,SSPEN    ; enable SPI Module
                      00037 
0398   118C           00038                 bcf     PIR1,SSPIF      ; clear interrupt flag
                      00039 
0399   1394           00040                 bcf     SSPSTAT,SMP     ; input data sampled at middle
039A   1314           00041                 bcf     SSPSTAT,CKE     ; transmit happens on transition idle to active clock
                      00042 
                      00043                 BANK1
039B   1683               M         bsf     STATUS,5    ; Select page 1
039C   158C           00044                 bsf     PIE1_P,SSPIE    ; SSP interrupt enable
                      00045 ;               bcf     PIE1_P,SSPIE    ; SSP interrupt disable
                      00046                 BANK0
039D   1283               M         bcf     STATUS,5    ; Select page 0
                      00047 
039E   0008           00048                 RETURN
                      00049 
                      00050 
                      00051 ;**********************************************************************
                      00052 ;               START SPI TRANSACTION
                      00053 ;
                      00054 ;               - Get number of bytes to exchange
                      00055 ;               - Load 1st byte to begin exchange
                      00056 ;**********************************************************************
                      00057 
039F   0804           00058 ExchangeSPI     movf    FSR,W
03A0   00D4           00059                 movwf   SPICounter      ; load number of byte in SPICounter
                      00060 
03A1   3056           00061                 movlw   SPIBufBase      ;
03A2   02D4           00062                 subwf   SPICounter,F    ; get number of byte
03A3   1903           00063                 btfsc   STATUS,Z
03A4   0008           00064                   RETURN                ; skip if Z not 0 (nothing to exchange)
                      00065 
03A5   3056           00066                 movlw   SPIBufBase
03A6   00D5           00067                 movwf   SPIBufPointer
                      00068 
03A7   1288           00069                 bcf     CAN_CS          ; select chip MCP2510
03A8   0856           00070                 movf    SPIBufBase,W    ; load 1st byte from buffer
03A9   0093           00071                 movwf   SSPBUF          ; sent in SPI bus
                      00072 
03AA   0008           00073                 RETURN
                      00074 
                      00075 
                      00076 ;**********************************************************************
                      00077 ;               WAIT SPI TRANSACTION TO BE COMPLETE
                      00078 ;**********************************************************************
                      00079 
03AB   0064           00080 WaitSPIExchange clrwdt                  ; reset watchdog
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03AC   08D4           00081                 movf    SPICounter,F
03AD   1D03           00082                 btfss   STATUS,Z
03AE   2BAB           00083                   goto  WaitSPIExchange
03AF   0008           00084                 RETURN
                      00085 
                      00086 
                      00087 ;**********************************************************************
                      00088 ;               LOAD NUMBER OF ZERO BYTE IN W TO SPI BUFFER
                      00089 ;
                      00090 ;               IN: W   Number of zero byte to load
                      00091 ;                       Assumes FSR is pointer
                      00092 ;**********************************************************************
                      00093 
03B0   39FF           00094 LoadSPIZeros    andlw   0xFF
03B1   1903           00095                 btfsc   STATUS,Z        ; test if number is 0
03B2   0008           00096                    RETURN
                      00097 
03B3   0064           00098                 clrwdt                  ; reset watchdog                
                      00099 
03B4   0180           00100                 clrf    INDF
03B5   0A84           00101                 incf    FSR,F
03B6   3EFF           00102                 addlw   0xFF
03B7   1D03           00103                 btfss   STATUS,Z
03B8   2BB0           00104                    goto    LoadSPIZeros
                      00105                 
03B9   0008           00106                 RETURN
                      00107 
                      00108 
                      00109 ;**********************************************************************
                      00110 ;               LOAD BYTE IN W TO SPI BUFFER
                      00111 ;
                      00112 ;               IN: W   Byte (i.e. instruction) to load
                      00113 ;                       Assumes FSR is pointer
                      00114 ;**********************************************************************
                      00115 
03BA   0080           00116 LoadSPIByte     movwf   INDF            ; Indirect addressing   
03BB   0A84           00117                 incf    FSR,F
03BC   0008           00118                 RETURN
                      00119 
                      00120 
                      00121 ;**********************************************************************
                      00122 ;               INIT SPI BUFFER
                      00123 ;
                      00124 ;               Load FSR with start adress of SPI Buffer
                      00125 ;**********************************************************************
                      00126 
03BD   01D4           00127 InitSPIBuf      clrf    SPICounter
03BE   3056           00128                 movlw   SPIBufBase
03BF   00D5           00129                 movwf   SPIBufPointer   ; set pointer at start of buffer
03C0   0084           00130                 movwf   FSR             ; set FSR at start of buffer
03C1   0008           00131                 RETURN
                      00132 
                      00133 
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00134 ;**********************************************************************
                      00135 ;               INTSPI (SPI interrupt)
                      00136 ;
                      00137 ;               Occured when a byte is transmit/received in the SSBUF
                      00138 ;
                      00139 ;               One single buffer (at SPIBufBase) is used for SPI
                      00140 ;               receive and transmit. When a byte is removed from the
                      00141 ;               buffer to transmit, it is replaced by the byte received.
                      00142 ;
                      00143 ;               The buffer pointer (SPIBufPointer) points to the last
                      00144 ;               byte loaded for transmission. This is the location that
                      00145 ;               the received byte will be stored.
                      00146 ;
                      00147 ;               The counter (SPICounter) contains the number of byte
                      00148 ;               remaining to be received. This is one less then the number
                      00149 ;               remaining to be transmited. When SPICounter reaches zero,
                      00150 ;               the transaction is complete.
                      00151 ;**********************************************************************
                      00152 
03C2   118C           00153 IntSPI          bcf     PIR1,SSPIF      ; clear interrupt flag
                      00154 
03C3   0855           00155                 movf    SPIBufPointer,W
03C4   0084           00156                 movwf   FSR
03C5   0AD5           00157                 incf    SPIBufPointer,F
                      00158 
03C6   0813           00159                 movf    SSPBUF,W        ; get data & clear buffer flag
03C7   0080           00160                 movwf   INDF            ; put it into SPI buffer
                      00161 
03C8   0BD4           00162                 decfsz  SPICounter,F
03C9   2BCC           00163                    goto    MoreByte     ; more byte to send
                      00164 
03CA   1688           00165                 bsf     CAN_CS          ; deselect CAN Controller
03CB   2818           00166                 goto    IntReturn
                      00167 
03CC   0A84           00168 MoreByte        incf    FSR,F
03CD   0800           00169                 movf    INDF,W          ; get byte from buffer
03CE   0093           00170                 movwf   SSPBUF          ; send it
03CF   2818           00171                 goto    IntReturn
                      00172 
                      00173 
                      00097 #include        "track.asm"                     ; tracking routine
                      00001 ;**********************************************************************
                      00002 ;   P R O G R A M M     MPPTnG                                            *
                      00003 ;                                                                     *
                      00004 ;   Traking program for MPPT new generation                           *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      track.asm                                         *
                      00008 ;    Date:          13.03.01                                          *
                      00009 ;    Last Update:   28.09.01                                          *
                      00010 ;    File Version:  V3.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        Michael Zürcher                                               *
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00013 ;                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab                           *
                      00015 ;                                                                     *
                      00016 ;    Changes:       Content Improved perturbation and observation     *
                      00017 ;                   tracking method                                   *
                      00018 ;                                                                     *
                      00019 ;**********************************************************************
                      00020 ;                                                                     *
                      00021 ;    Notes:                                                           *
                      00022 ;    - Main program : mpptngv4sm                                      *
                      00023 ;                                                                     *
                      00024 ;**********************************************************************
                      00025 
                      00026 ;**********************************************************************
                      00027 ;               P&O Algorithm 
                      00028 ; (runs as an infinite loop, unless interrupt occurs)
                      00029 ;
                      00030 ;  dVk-1 dPk-1 dVk  dPk   dVk+1         Description
                      00031 ;______________________________________________________________________
                      00032 ; 
                      00033 ;   -     -     -     -      +    A) invalid
                      00034 ;   -     -     -     +      +    B) invalid, control condition applies
                      00035 ;   -     -     +     -      -    C) incidence decreased meanwhile
                      00036 ;   -     -     +     +      +    D) V<Vmpp, keep increasing delta
                      00037 ;   -     +     -     -      +    E) MPP is reached, inverse delta
                      00038 ;   -     +     -     +      -    F) unclear, control condition applies
                      00039 ;   -     +     +     -      -    G) V>Vmpp, decrease delta again
                      00040 ;   -     +     +     +      -    H) incidence increased meanwhile, cc applies
                      00041 ;   +     -     -     -      +    I) incidense decreased meanwhile
                      00042 ;   +     -     -     +      -    J) V>Vmpp, keep decreasing delta
                      00043 ;   +     -     +     -      -    K) invalid
                      00044 ;   +     -     +     +      -    L) invalid, cc applies
                      00045 ;   +     +     -     -      +    M) V<Vmpp, increase delta again
                      00046 ;   +     +     -     +      +    N) incidence increased meanwhile, cc applies
                      00047 ;   +     +     +     -      -    O) MPP is reached, inverse delta
                      00048 ;   +     +     +     +      -    P) unclear, control condition applies
                      00049 ;**********************************************************************
                      00050 ;  dIk-1 dPk-1 dIk  dPk   dIk+1         Description
                      00051 ;______________________________________________________________________
                      00052 ; 
                      00053 ;   -     -     -     -      -    A) invalid
                      00054 ;   -     -     -     +      -    B) invalid, control condition applies
                      00055 ;   -     -     +     -      +    C) incidence decreased meanwhile
                      00056 ;   -     -     +     +      -    D) V<Vmpp, keep increasing delta
                      00057 ;   -     +     -     -      -    E) MPP is reached, inverse delta
                      00058 ;   -     +     -     +      +    F) unclear, control condition applies
                      00059 ;   -     +     +     -      +    G) V>Vmpp, decrease delta again
                      00060 ;   -     +     +     +      +    H) incidence increased meanwhile, cc applies
                      00061 ;   +     -     -     -      -    I) incidense decreased meanwhile
                      00062 ;   +     -     -     +      +    J) V>Vmpp, keep decreasing delta
                      00063 ;   +     -     +     -      +    K) invalid
                      00064 ;   +     -     +     +      +    L) invalid, cc applies
                      00065 ;   +     +     -     -      -    M) V<Vmpp, increase delta again
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00066 ;   +     +     -     +      -    N) incidence increased meanwhile, cc applies
                      00067 ;   +     +     +     -      +    O) MPP is reached, inverse delta
                      00068 ;   +     +     +     +      +    P) unclear, control condition applies
                      00069 ;**********************************************************************
                      00070 
03D0   2043           00071 TrackingLoop    call    wait1s          ; wait 200ms to eliminate an eventual "flippering"
03D1   2348           00072                 call    PWMon           ; turns conversion on
                      00073 ;**********************************************************************
                      00074 ; Tracking Loop
                      00075 ;**********************************************************************
                      00076         
03D2                  00077 MPPTtracking    
03D2   11EE           00078                 bcf     BVLR
03D3   3010           00079                 movlw   B'00010000'                     ; inverts REDLED
03D4   0688           00080                 xorwf   PORTD,F                         ; Has to be different for MPPT V1.X!
                      00081                 
03D5   0064           00082                 clrwdt                                          ; reset watchdog
                      00083 
03D6   2036           00084                 call    wait20ms                        ; to obtain an approximate tracking frequency of
                             50Hz
                      00085                                                 
03D7   212E           00086                 call    GetFilteredUin
                      00087 
                      00088                 jmpFltL UIF0H,MINUINH,UVState           ; jmp, if minimal voltage not reached
03D8   0828               M           movfw     UIF0H
                          M           jmpWltL   0x00,UVState
03D9   3C00               M         sublw   0x00
                          M         skipC
03DA   1C03               M         btfss   _C
03DB   1503               M         bsf     _Z
                          M         jmpNZ   UVState
03DC   1D03               M         btfss   _Z
03DD   2BE7               M         goto    UVState
                      00089                 jmpFgtL UIF0H,MINUINH,MeasIin           ; go on, if minimal reached
03DE   0828               M           movfw     UIF0H
                          M           jmpWgtL   0x00,MeasIin
03DF   3C00               M         sublw   0x00
03E0   1C03               M         btfss   _C
03E1   2BE8               M         goto    MeasIin
                      00090                 jmpFleL UIF0L,MINUINL,UVState           ; consider L-Byte
03E2   0829               M           movfw     UIF0L
                          M           jmpWleL   0xAD,UVState
03E3   3CAD               M         sublw   0xAD
03E4   1803               M         btfsc   _C
03E5   2BE7               M         goto    UVState
03E6   2BE8           00091                 goto    MeasIin
                      00092 
03E7   25FF           00093 UVState         call    UnderVoltage
                      00094                 
03E8   2185           00095 MeasIin         call    GetFilteredIin                  ; Measure the current input current
                      00096 
03E9   2619           00097                 call    MinPower                                        ; call Minpower Test Subroutine
                      00098 
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03EA   2420           00099                 call    SetVSFup                                        ; Prepare Voltage Signum Flags f
                            or the Decision Tree
03EB   242A           00100                 call    SetPSFup                                        ; Prepare Current Signum Flags f
                            or the Decision Tree
                      00101 
03EC   2169           00102 MeasUout        call    GetFilteredUout                 ; test if battery reached full level
                      00103                 jmpFltL UOFH,MAXUOH,MeasTemp            ; jmp, if output voltage within limits
03ED   0834               M           movfw     UOFH
                          M           jmpWltL   0x02,MeasTemp
03EE   3C02               M         sublw   0x02
                          M         skipC
03EF   1C03               M         btfss   _C
03F0   1503               M         bsf     _Z
                          M         jmpNZ   MeasTemp
03F1   1D03               M         btfss   _Z
03F2   2BFC               M         goto    MeasTemp
                      00104                 jmpFgtL UOFH,MAXUOH,ConstVMode          ; go on, if ouput voltage exceeded
03F3   0834               M           movfw     UOFH
                          M           jmpWgtL   0x02,ConstVMode
03F4   3C02               M         sublw   0x02
03F5   1C03               M         btfss   _C
03F6   2E3B               M         goto    ConstVMode
                      00105                 jmpFleL UOFL,MAXUOL,MeasTemp            ; consider L-Byte
03F7   0835               M           movfw     UOFL
                          M           jmpWleL   0x55,MeasTemp
03F8   3C55               M         sublw   0x55
03F9   1803               M         btfsc   _C
03FA   2BFC               M         goto    MeasTemp
                      00106                 
03FB   2E3B           00107                 goto    ConstVMode
                      00108 
03FC                  00109 MeasTemp        
03FC   26AA           00110                 call    OverTemp                                        ;Check Temp.
                      00111 
                      00112                 
03FD   2316           00113 TXupdate        call    CANRqTest
03FE   2BFF           00114                 goto    DecisionTree
                      00115 
                      00116 ;----------------------------------------------------------------------
                      00117 ; Tracking algorithm
                      00118 ;---------------------------------------------------------------------- 
                      00119 
                      00120                 ;basic algorithm
                      00121 
                      00122 DecisionTree    BANK1
03FF   1683               M         bsf     STATUS,5    ; Select page 1
0400   1C21           00123                 btfss   PSF,0           ;basic algorithm
0401   2C05           00124                    goto NegP            
0402   1C20           00125 PosP            btfss   VSF,0           
0403   2C1D           00126                    goto NegDV
0404   2C1A           00127                 goto  PosDV
0405   1C20           00128 NegP            btfss   VSF,0
0406   2C1A           00129                    goto PosDV
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0407   2C1D           00130                 goto  NegDV
                      00131 ;----------------------------------------------------------------------
                      00132 
                      00133                 ;P&O algorithm
                      00134 
                      00135 
                      00136                 BANK1
0408   1683               M         bsf     STATUS,5    ; Select page 1
0409   1C20           00137                 btfss   VSF,0           ;P&O algorithm
040A   2C13           00138                    goto   PXXX
                      00139 
040B   1CA0           00140 MXXX            btfss   VSF,1
040C   2C0E           00141                    goto   MPXX
                      00142 
040D   2C1A           00143 MMXX            goto    PosDV           ; in case of A) B) E) F)
                      00144 
040E   1CA1           00145 MPXX            btfss   PSF,1
040F   2C1A           00146                    goto   PosDV         ; in case of M) N)
                      00147 
0410   1C21           00148 MPXM            btfss   PSF,0
0411   2C1D           00149                    goto   NegDV         ; in case of J)
0412   2C1A           00150                 goto   PosDV            ; in case of I)
                      00151 
0413   1CA0           00152 PXXX            btfss   VSF,1
0414   2C1D           00153                    goto   NegDV         ; in case of K) L) O) P)
                      00154 
0415   1CA1           00155 PMXX            btfss   PSF,1
0416   2C1D           00156                    goto   NegDV         ; in case of G) H)
                      00157 
0417   1C21           00158 PMXM            btfss   PSF,0
0418   2C1A           00159                    goto   PosDV         ; in case of D)
0419   2C1D           00160                 goto   NegDV            ; in case of C)
                      00161 
                      00162 ;----------------------------------------------------------------------
                      00163 
                      00164 PosDV           BANK0
041A   1283               M         bcf     STATUS,5    ; Select page 0
041B   2371           00165                 call    DecDuty         ; decrement duty cycle
041C   2BD2           00166                 goto    MPPTtracking
                      00167 
                      00168 NegDV           BANK0
041D   1283               M         bcf     STATUS,5    ; Select page 0
041E   2363           00169                 call    IncDuty         ; increment duty cycle
041F   2BD2           00170                 goto    MPPTtracking
                      00171 
                      00172 ;**********************************************************************
                      00173 
                      00174 
                      00175 
                      00176 ;**********************************************************************
                      00177 ;               Actualize voltage signum Flags
                      00178 ;
                      00179 ;               - Result register (-------- or ++++++++) 1 = -, 0 = +
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00180 ;               OUT: VSF
                      00181 ;**********************************************************************
0420   0828           00182 SetVSFup        movf    UIF0H,W         ;compare current with former UIF_H
0421   022A           00183                 subwf   UIF1H,W
                      00184                 
0422   1D03           00185                 btfss   _Z
0423   2C26           00186                    goto  VSFsetup
                      00187 
0424   0829           00188                 movf    UIF0L,W         ;compare current with former PIF_L
0425   022B           00189                 subwf   UIF1L,W
                      00190 VSFsetup        BANK1
0426   1683               M         bsf     STATUS,5    ; Select page 1
0427   0DA0           00191                 rlf     VSF,F           ;use borrow as new voltage signum
                      00192                 BANK0
0428   1283               M         bcf     STATUS,5    ; Select page 0
                      00193         
0429   0008           00194                 RETURN
                      00195 
                      00196 
                      00197 ;**********************************************************************
                      00198 ;               Actualize power signum Flags
                      00199 ;
                      00200 ;               - Result register (-------- or ++++++++) 1 = -, 0 = +
                      00201 ;               OUT: PSF
                      00202 ;**********************************************************************
042A   0848           00203 SetPSFup        movf    PI0H,W          ;compare current with former PIF_H
042B   024B           00204                 subwf   PI1H,W
                      00205 
042C   1D03           00206                 btfss   _Z
042D   2C34           00207                    goto  PSFsetup
                      00208                 
042E   0849           00209                 movf    PI0M,W          ;compare current with former PIF_M
042F   024C           00210                 subwf   PI1M,W
                      00211 
0430   1D03           00212                 btfss   _Z
0431   2C34           00213                    goto  PSFsetup
                      00214 
0432   084A           00215                 movf    PI0L,W          ;compare current with former PIF_L
0433   024D           00216                 subwf   PI1L,W
                      00217 PSFsetup        BANK1
0434   1683               M         bsf     STATUS,5    ; Select page 1
0435   0DA1           00218                 rlf     PSF,F           ;use borrow as new voltage signum                       
0436   3001           00219                 movlw   0x01
0437   05A1           00220                 andwf   PSF,F
                      00221                 BANK0                   
0438   1283               M         bcf     STATUS,5    ; Select page 0
                      00222 
0439   0008           00223                 RETURN
                      00224 
                      00225 
                      00098 ;Temperature Procedure
                      00099 #include        "celsius.asm"           ; Converts temperatures to degs C
                      00001 ;**********************************************************************
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00002 ;   P R O G R A M M     MPPTnG                                        *
                      00003 ;                                                                     *
                      00004 ;   Temperature values converter Version: Celsius                     *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      celsius.asm                                       *
                      00008 ;    Date:          15.11.00                                          *
                      00009 ;    Last Update:   01.10.01                                          *
                      00010 ;    File Version:  V3.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        Michael Zürcher                                   *
                      00013 ;                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab                           *
                      00015 ;                                                                     *
                      00016 ;                                                                     *
                      00017 ;                                                                     *
                      00018 ;**********************************************************************
                      00019 ;                                                                     *
                      00020 ;    Notes:                                                           *
                      00021 ;    - Main program : mpptngV4.asm                                    *
                      00022 ;                                                                     *
                      00023 ;**********************************************************************
                      00024 ConvTempCooler  jmpFeqL TCH,0x03,Cgt70  ; Not a valid temperature
043A   0846               M         movf    TCH,W
043B   3C03               M           sublw   0x03
043C   1903               M         btfsc   _Z
043D   2C81               M         goto    Cgt70
                      00025                 
                      00026                 jmpFgeL TCH,0x03,C75
043E   0846               M           movfw     TCH
                          M           jmpWgeL   0x03,C75
043F   3C03               M         sublw   0x03
0440   1C03               M         btfss   _C
0441   2D0B               M         goto    C75
0442   1903               M         btfsc   _Z
0443   2D0B               M         goto    C75
                      00027                 jmpFgeL TCH,0x02,C70
0444   0846               M           movfw     TCH
                          M           jmpWgeL   0x02,C70
0445   3C02               M         sublw   0x02
0446   1C03               M         btfss   _C
0447   2D0D               M         goto    C70
0448   1903               M         btfsc   _Z
0449   2D0D               M         goto    C70
                      00028                 jmpFgeL TCL,0xA4,C65
044A   0847               M           movfw     TCL
                          M           jmpWgeL   0xA4,C65
044B   3CA4               M         sublw   0xA4
044C   1C03               M         btfss   _C
044D   2D0F               M         goto    C65
044E   1903               M         btfsc   _Z
044F   2D0F               M         goto    C65
                      00029                 jmpFgeL TCL,0x46,C60
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0450   0847               M           movfw     TCL
                          M           jmpWgeL   0x46,C60
0451   3C46               M         sublw   0x46
0452   1C03               M         btfss   _C
0453   2D11               M         goto    C60
0454   1903               M         btfsc   _Z
0455   2D11               M         goto    C60
                      00030                 jmpFgeL TCL,0x3C,C55
0456   0847               M           movfw     TCL
                          M           jmpWgeL   0x3C,C55
0457   3C3C               M         sublw   0x3C
0458   1C03               M         btfss   _C
0459   2D13               M         goto    C55
045A   1903               M         btfsc   _Z
045B   2D13               M         goto    C55
                      00031                 jmpFgeL TCL,0x26,C50
045C   0847               M           movfw     TCL
                          M           jmpWgeL   0x26,C50
045D   3C26               M         sublw   0x26
045E   1C03               M         btfss   _C
045F   2D15               M         goto    C50
0460   1903               M         btfsc   _Z
0461   2D15               M         goto    C50
                      00032                 jmpFgeL TCL,0x1B,C45
0462   0847               M           movfw     TCL
                          M           jmpWgeL   0x1B,C45
0463   3C1B               M         sublw   0x1B
0464   1C03               M         btfss   _C
0465   2D17               M         goto    C45
0466   1903               M         btfsc   _Z
0467   2D17               M         goto    C45
                      00033                 jmpFgeL TCL,0x16,C40
0468   0847               M           movfw     TCL
                          M           jmpWgeL   0x16,C40
0469   3C16               M         sublw   0x16
046A   1C03               M         btfss   _C
046B   2D19               M         goto    C40
046C   1903               M         btfsc   _Z
046D   2D19               M         goto    C40
                      00034                 jmpFgeL TCL,0x13,C35
046E   0847               M           movfw     TCL
                          M           jmpWgeL   0x13,C35
046F   3C13               M         sublw   0x13
0470   1C03               M         btfss   _C
0471   2D1B               M         goto    C35
0472   1903               M         btfsc   _Z
0473   2D1B               M         goto    C35
                      00035                 jmpFgeL TCL,0x12,C30
0474   0847               M           movfw     TCL
                          M           jmpWgeL   0x12,C30
0475   3C12               M         sublw   0x12
0476   1C03               M         btfss   _C
0477   2D1D               M         goto    C30
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0478   1903               M         btfsc   _Z
0479   2D1D               M         goto    C30
                      00036                 jmpFgeL TCL,0x11,C25
047A   0847               M           movfw     TCL
                          M           jmpWgeL   0x11,C25
047B   3C11               M         sublw   0x11
047C   1C03               M         btfss   _C
047D   2D1F               M         goto    C25
047E   1903               M         btfsc   _Z
047F   2D1F               M         goto    C25
0480   2D01           00037                 goto    NoCels          ; Tcooler lower than 20C
                      00038 
                      00039 Cgt70           jmpFgeL TCL,0xF9,NoCels
0481   0847               M           movfw     TCL
                          M           jmpWgeL   0xF9,NoCels
0482   3CF9               M         sublw   0xF9
0483   1C03               M         btfss   _C
0484   2D01               M         goto    NoCels
0485   1903               M         btfsc   _Z
0486   2D01               M         goto    NoCels
                      00040                 jmpFgeL TCL,0xF8,C90    
0487   0847               M           movfw     TCL
                          M           jmpWgeL   0xF8,C90
0488   3CF8               M         sublw   0xF8
0489   1C03               M         btfss   _C
048A   2D05               M         goto    C90
048B   1903               M         btfsc   _Z
048C   2D05               M         goto    C90
                      00041                 jmpFgeL TCL,0xF2,C85
048D   0847               M           movfw     TCL
                          M           jmpWgeL   0xF2,C85
048E   3CF2               M         sublw   0xF2
048F   1C03               M         btfss   _C
0490   2D07               M         goto    C85
0491   1903               M         btfsc   _Z
0492   2D07               M         goto    C85
                      00042                 jmpFgeL TCL,0xDB,C80
0493   0847               M           movfw     TCL
                          M           jmpWgeL   0xDB,C80
0494   3CDB               M         sublw   0xDB
0495   1C03               M         btfss   _C
0496   2D09               M         goto    C80
0497   1903               M         btfsc   _Z
0498   2D09               M         goto    C80
0499   2D0B           00043                 goto    C75
                      00044 
                      00045 ConvTempAmb     jmpFgeL TAMBL,0xA6,NoCels
049A   0843               M           movfw     TAMBL
                          M           jmpWgeL   0xA6,NoCels
049B   3CA6               M         sublw   0xA6
049C   1C03               M         btfss   _C
049D   2D01               M         goto    NoCels
049E   1903               M         btfsc   _Z
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

049F   2D01               M         goto    NoCels
                      00046                 jmpFgeL TAMBL,0xA3,C90
04A0   0843               M           movfw     TAMBL
                          M           jmpWgeL   0xA3,C90
04A1   3CA3               M         sublw   0xA3
04A2   1C03               M         btfss   _C
04A3   2D05               M         goto    C90
04A4   1903               M         btfsc   _Z
04A5   2D05               M         goto    C90
                      00047                 jmpFgeL TAMBL,0x9F,C85
04A6   0843               M           movfw     TAMBL
                          M           jmpWgeL   0x9F,C85
04A7   3C9F               M         sublw   0x9F
04A8   1C03               M         btfss   _C
04A9   2D07               M         goto    C85
04AA   1903               M         btfsc   _Z
04AB   2D07               M         goto    C85
                      00048                 jmpFgeL TAMBL,0x9B,C80
04AC   0843               M           movfw     TAMBL
                          M           jmpWgeL   0x9B,C80
04AD   3C9B               M         sublw   0x9B
04AE   1C03               M         btfss   _C
04AF   2D09               M         goto    C80
04B0   1903               M         btfsc   _Z
04B1   2D09               M         goto    C80
                      00049                 jmpFgeL TAMBL,0x97,C75
04B2   0843               M           movfw     TAMBL
                          M           jmpWgeL   0x97,C75
04B3   3C97               M         sublw   0x97
04B4   1C03               M         btfss   _C
04B5   2D0B               M         goto    C75
04B6   1903               M         btfsc   _Z
04B7   2D0B               M         goto    C75
                      00050                 jmpFgeL TAMBL,0x93,C70
04B8   0843               M           movfw     TAMBL
                          M           jmpWgeL   0x93,C70
04B9   3C93               M         sublw   0x93
04BA   1C03               M         btfss   _C
04BB   2D0D               M         goto    C70
04BC   1903               M         btfsc   _Z
04BD   2D0D               M         goto    C70
                      00051                 jmpFgeL TAMBL,0x90,C65
04BE   0843               M           movfw     TAMBL
                          M           jmpWgeL   0x90,C65
04BF   3C90               M         sublw   0x90
04C0   1C03               M         btfss   _C
04C1   2D0F               M         goto    C65
04C2   1903               M         btfsc   _Z
04C3   2D0F               M         goto    C65
                      00052                 jmpFgeL TAMBL,0x8C,C60
04C4   0843               M           movfw     TAMBL
                          M           jmpWgeL   0x8C,C60
04C5   3C8C               M         sublw   0x8C
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04C6   1C03               M         btfss   _C
04C7   2D11               M         goto    C60
04C8   1903               M         btfsc   _Z
04C9   2D11               M         goto    C60
                      00053                 jmpFgeL TAMBL,0x88,C55
04CA   0843               M           movfw     TAMBL
                          M           jmpWgeL   0x88,C55
04CB   3C88               M         sublw   0x88
04CC   1C03               M         btfss   _C
04CD   2D13               M         goto    C55
04CE   1903               M         btfsc   _Z
04CF   2D13               M         goto    C55
                      00054                 jmpFgeL TAMBL,0x85,C50
04D0   0843               M           movfw     TAMBL
                          M           jmpWgeL   0x85,C50
04D1   3C85               M         sublw   0x85
04D2   1C03               M         btfss   _C
04D3   2D15               M         goto    C50
04D4   1903               M         btfsc   _Z
04D5   2D15               M         goto    C50
                      00055                 jmpFgeL TAMBL,0x80,C45
04D6   0843               M           movfw     TAMBL
                          M           jmpWgeL   0x80,C45
04D7   3C80               M         sublw   0x80
04D8   1C03               M         btfss   _C
04D9   2D17               M         goto    C45
04DA   1903               M         btfsc   _Z
04DB   2D17               M         goto    C45
                      00056                 jmpFgeL TAMBL,0x7C,C40
04DC   0843               M           movfw     TAMBL
                          M           jmpWgeL   0x7C,C40
04DD   3C7C               M         sublw   0x7C
04DE   1C03               M         btfss   _C
04DF   2D19               M         goto    C40
04E0   1903               M         btfsc   _Z
04E1   2D19               M         goto    C40
                      00057                 jmpFgeL TAMBL,0x79,C35
04E2   0843               M           movfw     TAMBL
                          M           jmpWgeL   0x79,C35
04E3   3C79               M         sublw   0x79
04E4   1C03               M         btfss   _C
04E5   2D1B               M         goto    C35
04E6   1903               M         btfsc   _Z
04E7   2D1B               M         goto    C35
                      00058                 jmpFgeL TAMBL,0x75,C30
04E8   0843               M           movfw     TAMBL
                          M           jmpWgeL   0x75,C30
04E9   3C75               M         sublw   0x75
04EA   1C03               M         btfss   _C
04EB   2D1D               M         goto    C30
04EC   1903               M         btfsc   _Z
04ED   2D1D               M         goto    C30
                      00059                 jmpFgeL TAMBL,0x70,C25
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04EE   0843               M           movfw     TAMBL
                          M           jmpWgeL   0x70,C25
04EF   3C70               M         sublw   0x70
04F0   1C03               M         btfss   _C
04F1   2D1F               M         goto    C25
04F2   1903               M         btfsc   _Z
04F3   2D1F               M         goto    C25
                      00060                 jmpFgeL TAMBL,0x6D,C20
04F4   0843               M           movfw     TAMBL
                          M           jmpWgeL   0x6D,C20
04F5   3C6D               M         sublw   0x6D
04F6   1C03               M         btfss   _C
04F7   2D21               M         goto    C20
04F8   1903               M         btfsc   _Z
04F9   2D21               M         goto    C20
                      00061                 jmpFgeL TAMBL,0x69,C15
04FA   0843               M           movfw     TAMBL
                          M           jmpWgeL   0x69,C15
04FB   3C69               M         sublw   0x69
04FC   1C03               M         btfss   _C
04FD   2D23               M         goto    C15
04FE   1903               M         btfsc   _Z
04FF   2D23               M         goto    C15
0500   2D01           00062                 goto    NoCels
                      00063 
                      00064 
0501   30FF           00065 NoCels  movlw   0xFF
0502   0008           00066         RETURN
0503   305F           00067 C95     movlw   0x5F
0504   0008           00068         RETURN
0505   305A           00069 C90     movlw   0x5A
0506   0008           00070         RETURN
0507   3055           00071 C85     movlw   0x55
0508   0008           00072         RETURN
0509   3050           00073 C80     movlw   0x50
050A   0008           00074         RETURN
050B   304B           00075 C75     movlw   0x4B
050C   0008           00076         RETURN
050D   3046           00077 C70     movlw   0x46
050E   0008           00078         RETURN
050F   3041           00079 C65     movlw   0x41
0510   0008           00080         RETURN
0511   303C           00081 C60     movlw   0x3C
0512   0008           00082         RETURN
0513   3037           00083 C55     movlw   0x37
0514   0008           00084         RETURN
0515   3032           00085 C50     movlw   0x32
0516   0008           00086         RETURN
0517   302D           00087 C45     movlw   0x2D
0518   0008           00088         RETURN
0519   3028           00089 C40     movlw   0x28
051A   0008           00090         RETURN
051B   3023           00091 C35     movlw   0x23
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

051C   0008           00092         RETURN
051D   301E           00093 C30     movlw   0x1E
051E   0008           00094         RETURN
051F   3019           00095 C25     movlw   0x19
0520   0008           00096         RETURN
0521   3014           00097 C20     movlw   0x14
0522   0008           00098         RETURN
0523   300F           00099 C15     movlw   0x0F
0524   0008           00100         RETURN          
                      00100 
                      00101 ;Special States
                      00102 #include        "charge.asm"            ; charge output caps routine
                      00001 ;**********************************************************************
                      00002 ;   P R O G R A M M     MPPTnG                                            *
                      00003 ;                                                                     *
                      00004 ;   Traking program for MPPT new generation                           *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      charge.asm                                        * 
                      00008 ;    Date:          16.2.05                                           *
                      00009 ;    Last Update:   16.2.05                                           *
                      00010 ;    File Version:  V1.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        Christoph Raible                                  *
                      00013 ;                                                                     *
                      00014 ;    Company:       drivetek ag                                       *
                      00015 ;                                                                     *
                      00016 ;    Changes:       program part which charges the output capacitor   *
                      00017 ;                                                                     *
                      00018 ;**********************************************************************
                      00019 ;                                                                     *
                      00020 ;    Notes:                                                           *
                      00021 ;                                                                     *
                      00022 ;                                                                     *
                      00023 ;**********************************************************************
0525                  00024 PreCharge       
0525   0064           00025                 clrwdt                                  ; reset watchdog
0526   1608           00026                 bsf             REDLED
0527   14EE           00027                 bsf             NOC
0528   3001           00028                 movlw   0x01
0529   00F5           00029                 movwf   Waitboost                       ;Init Boost-Timer
052A   3074           00030                 movlw   INITDUTY                ; PWM2 duty cycle (Sm')
052B   00CE           00031                 movwf   DUTY2_H                 ; init duty variable
052C   009B           00032                 movwf   CCPR2L
052D                  00033 MeasStableUs
                      00034 
052D   212E           00035                 call    GetFilteredUin
                      00036 
                      00037                 jmpFltL UIF0H,MINUINH,CV_UVState1       ; jmp, if minimal voltage not reached
052E   0828               M           movfw     UIF0H
                          M           jmpWltL   0x00,CV_UVState1
052F   3C00               M         sublw   0x00
                          M         skipC
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0530   1C03               M         btfss   _C
0531   1503               M         bsf     _Z
                          M         jmpNZ   CV_UVState1
0532   1D03               M         btfss   _Z
0533   2D3D               M         goto    CV_UVState1
                      00038                 jmpFgtL UIF0H,MINUINH,CV_MeasUout1      ; go on, if minimal reached
0534   0828               M           movfw     UIF0H
                          M           jmpWgtL   0x00,CV_MeasUout1
0535   3C00               M         sublw   0x00
0536   1C03               M         btfss   _C
0537   2D3E               M         goto    CV_MeasUout1
                      00039                 jmpFleL UIF0L,MINUINL,CV_UVState1       ; consider L-Byte
0538   0829               M           movfw     UIF0L
                          M           jmpWleL   0xAD,CV_UVState1
0539   3CAD               M         sublw   0xAD
053A   1803               M         btfsc   _C
053B   2D3D               M         goto    CV_UVState1
053C   2D3E           00040                 goto    CV_MeasUout1
                      00041 
053D   25FF           00042 CV_UVState1     call    UnderVoltage
053E                  00043 CV_MeasUout1
                      00044                 
                      00045         ;       call    UpdateCAN
053E   0064           00046                 clrwdt                                  ; reset watchdog
                      00047                 
053F   2169           00048                 call    GetFilteredUout
                      00049                 
0540   3001           00050                 movlw   MINUBATH                        ;get 3/4 of MINUBAT
0541   00F1           00051                 movwf   Temp0
0542   30AA           00052                 movlw   MINUBATL
0543   00F2           00053                 movwf   Temp1
                      00054 
0544   1003           00055                 bcf     _C                                                      ;divide by 2
0545   0CF1           00056                 rrf     Temp0,F
0546   0CF2           00057                 rrf     Temp1,F
0547   1003           00058                 bcf     _C                                                      ;divide by 2 (now 4)
0548   0C71           00059                 rrf     Temp0,W
0549   00F3           00060                 movwf   Temp2           
054A   0C72           00061                 rrf     Temp1,W         
054B   07F2           00062                 addwf   Temp1,F                                 ;times tree
054C   1803           00063                 btfsc   _C
054D   0AF3           00064                    incf   Temp2,F
054E   0873           00065                 movf    Temp2,W
054F   07F1           00066                 addwf   Temp0,F
                      00067                 
                      00068                 jmpFltF UOFH,Temp0,BoostALittle         ; jmp, if output voltage within limits
0550   0834               M           movfw     UOFH
                          M           jmpWltF   Temp0,BoostALittle
0551   0271               M         subwf   Temp0,W
                          M         skipC
0552   1C03               M         btfss   _C
0553   1503               M         bsf     _Z
                          M         jmpNZ   BoostALittle
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0554   1D03               M         btfss   _Z
0555   2D5F               M         goto    BoostALittle
0556   0834           00069                 movf    UOFH,W
                      00070                 jmpWgtF Temp0,Wait4Connect                      ; go on, if ouput voltage exceeded
0557   0271               M         subwf   Temp0,W
0558   1C03               M         btfss   _C
0559   2D65               M         goto    Wait4Connect
                      00071                 jmpFleF UOFL,Temp1,BoostALittle         ; consider L-Byte
055A   0835               M           movfw     UOFL
                          M           jmpWleF   Temp1,BoostALittle
055B   0272               M         subwf   Temp1,W
055C   1803               M         btfsc   _C
055D   2D5F               M         goto    BoostALittle
055E   2D65           00072                 goto    Wait4Connect    
                      00073                 
055F                  00074 BoostALittle
055F   2348           00075                 call    PWMon                                           ; Precharge the output C during 
                            300us
0560   30FF           00076                 movlw   0xFF
0561   2022           00077                 call    wait            
0562   234F           00078                 call    PWMoff  
0563   2036           00079                 call    wait20ms
0564   2D2D           00080                 goto    MeasStableUs
                      00081                 
                      00082                 
0565                  00083 Wait4Connect
0565   0064           00084                 clrwdt                                                          ; reset watchdog
0566   21A7           00085                 call    UpdateCAN
0567   2169           00086                 call    GetFilteredUout                         ;MINUBAT<=UOUT<=MAXUOUT
0568   3001           00087                 movlw   MINUBATH
0569   0234           00088                 subwf   UOFH,w
056A   1903           00089                 btfsc   _Z
056B   2D6F           00090                         goto    CheckLsb
056C   1C03           00091                 btfss   _C                                                      ;c set if w=UOFH-MINUBAT
                            H >=0
056D   2D25           00092                         goto    PreCharge
                      00093         
056E   2D73           00094                 goto    CheckMaxuout
                      00095 
056F                  00096 CheckLsb        
056F   30AA           00097                 movlw   MINUBATL
0570   0235           00098                 subwf   UOFL,W
0571   1C03           00099                 btfss   _C                                                      ;c set if w=UOFL-MINUBAT
                            L >=0   
0572   2D25           00100                         goto    PreCharge
                      00101 
                      00102 
0573                  00103 CheckMaxuout
                      00104 
0573   3002           00105                 movlw   MAXUOH
0574   00F2           00106                 movwf   Temp1
0575   0834           00107                 movf    UOFH,w                                  
0576   0272           00108                 subwf   Temp1,w
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0577   1903           00109                 btfsc   _Z
0578   2D7C           00110                         goto    CheckLsb2
0579   1C03           00111                 btfss   _C                                                      ;c set if w=MAXUOH-UOFH 
                            >=0
057A   2D25           00112                         goto    PreCharge
                      00113         
057B   2D82           00114                 goto    BatConn
                      00115 
057C                  00116 CheckLsb2       
057C   3055           00117                 movlw   MAXUOL
057D   00F2           00118                 movwf   Temp1
057E   0835           00119                 movfw   UOFL
057F   0272           00120                 subwf   Temp1,W
0580   1C03           00121                 btfss   _C                                                      ;c set if w=MAXUOL-UOFL 
                            >=0
0581   2D25           00122                         goto    PreCharge
                      00123 
0582                  00124 BatConn 
0582   0064           00125                 clrwdt  
                      00126 
0583   212E           00127                 call    GetFilteredUin
                      00128 
                      00129                 jmpFltL UIF0H,MINUINH,CV_UVState2       ; jmp, if minimal voltage not reached
0584   0828               M           movfw     UIF0H
                          M           jmpWltL   0x00,CV_UVState2
0585   3C00               M         sublw   0x00
                          M         skipC
0586   1C03               M         btfss   _C
0587   1503               M         bsf     _Z
                          M         jmpNZ   CV_UVState2
0588   1D03               M         btfss   _Z
0589   2D93               M         goto    CV_UVState2
                      00130                 jmpFgtL UIF0H,MINUINH,CV_MeasUout2      ; go on, if minimal reached
058A   0828               M           movfw     UIF0H
                          M           jmpWgtL   0x00,CV_MeasUout2
058B   3C00               M         sublw   0x00
058C   1C03               M         btfss   _C
058D   2D94               M         goto    CV_MeasUout2
                      00131                 jmpFleL UIF0L,MINUINL,CV_UVState2       ; consider L-Byte
058E   0829               M           movfw     UIF0L
                          M           jmpWleL   0xAD,CV_UVState2
058F   3CAD               M         sublw   0xAD
0590   1803               M         btfsc   _C
0591   2D93               M         goto    CV_UVState2
0592   2D94           00132                 goto    CV_MeasUout2
                      00133 
0593   25FF           00134 CV_UVState2     call    UnderVoltage
0594                  00135 CV_MeasUout2
                      00136 
0594   212E           00137                 call    GetFilteredUin                          ;check Uin and transform in to 8bit valu
                            e
0595   0CA8           00138                 rrf             UIF0H,F 
0596   0CA9           00139                 rrf             UIF0L,F
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0597   0CA8           00140                 rrf             UIF0H,F
0598   0CA9           00141                 rrf             UIF0L,F
0599   3053           00142                 movlw   0x53                                            ;50V @ 8bit ADC
059A   0229           00143                 subwf   UIF0L,w                                         ;UIFOL-50V<0?
059B   1C03           00144                 btfss   STATUS,C                                        ; c set if UIF0L-50V>0
059C   2DA7           00145                         goto    BigPWM                                  
059D   3074           00146                 movlw   0x74                                            ;70V @ 8bit ADC
059E   0229           00147                 subwf   UIF0L,w                                         ;UIFOL-70V<0?
059F   1C03           00148                 btfss   STATUS,C                                        ; c set if UIF0L-70V>0
05A0   2DA4           00149                         goto    MedPWM
05A1   3025           00150                 movlw   0x25                                            ;small duty cycle
05A2   009B           00151                 movwf   CCPR2L
05A3   2DA9           00152                 goto    StartPWM
05A4                  00153 MedPWM  
05A4   305B           00154                 movlw   0x5b
05A5   009B           00155                 movwf   CCPR2L                                          ;medium duty cycle
05A6   2DA9           00156                 goto    StartPWM
05A7                  00157 BigPWM  
05A7   3089           00158                 movlw   0x89                                            ;big duty cycle
05A8   009B           00159                 movwf   CCPR2L
                      00160 
05A9                  00161 StartPWM        
05A9   0064           00162                 clrwdt
05AA   2348           00163                 call    PWMon
05AB   202A           00164                 call    waittoboost
05AC   234F           00165                 call    PWMoff
05AD   2036           00166                 call    wait20ms
                      00167 
05AE   0064           00168                 clrwdt
05AF   0834           00169                 movfw   UOFH                                            ;Save old values of UOFH,OUFL
05B0   00F1           00170                 movwf   Temp0
05B1   0835           00171                 movfw   UOFL
05B2   00F2           00172                 movwf   Temp1
                      00173 
05B3   2169           00174                 call GetFilteredUout                            ;check delta of Uout and dedect Bat. con
                            nection
                      00175                 
05B4   30FF           00176                 movlw   0xFF                                            ;Twocomplement
05B5   06B5           00177                 xorwf   UOFL,F          
05B6   06B4           00178                 xorwf   UOFH,F  
05B7   3001           00179                 movlw   0x01
05B8   07B5           00180                 addwf   UOFL,F
05B9   1803           00181                 btfsc   STATUS,C
Message[305]: Using default destination of 1 (file).
05BA   0AB4           00182                         Incf    UOFH
05BB   0835           00183                 movfw   UOFL   
05BC   07F2           00184                 addwf   Temp1,F                 ; compare Uout_old Low Byte to Uout Low Byte Temp1=Temp1
                            -UOFL
05BD   1803           00185                 btfsc   STATUS, C               ; is result of subtraction negative?
05BE   2DD1           00186           goto  Overflow    
05BF                  00187 CheckMSB
05BF   0834           00188                 movfw   UOFH                            ; compare Uout_old High Byte to Uout High Byte T
                            emp0=Temp0-UOFH
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05C0   07F1           00189                 addwf   Temp0,F
05C1   1C03           00190                 btfss   STATUS,C                        ;is result of subtraction negativ?
05C2   2DD3           00191                         goto    Twocomplement
                      00192 
05C3                  00193 Checkdelta
05C3   3003           00194                 movlw   0x03                        ; max. allowed difference ca. 0.6V
05C4   00F3           00195                 movwf   Temp2
05C5   0872           00196                 movfw   Temp1
05C6   0273           00197                 subwf   Temp2,w                         ;w=Temp2-Temp1 (max. allowed difference-real dif
                            ference)                                
05C7   1C03           00198                 btfss   STATUS, C               ; jump back if difference too big
05C8   2DCE           00199                         goto    ResetBoosttime
05C9   3005           00200                 movlw   0x05                            ;longer boost-time
05CA   07F5           00201                 addwf   Waitboost,F
05CB   1C03           00202                 btfss   STATUS,C
05CC   2D65           00203                         goto    Wait4Connect            
05CD   2DDB           00204                 goto    RetFromPreCha       ; Bat. connected?
                      00205 
05CE                  00206 ResetBoosttime
05CE   3001           00207                 movlw   0x01
05CF   00F5           00208                 movwf   Waitboost
05D0   2D65           00209                 goto    Wait4Connect
                      00210 
05D1                  00211 Overflow
Message[305]: Using default destination of 1 (file).
05D1   0AF1           00212                 Incf    Temp0   
05D2   2DBF           00213                 goto    CheckMSB
                      00214 
05D3                  00215 Twocomplement                    
05D3   30FF           00216                 movlw   0xFF                            ;invert bits (two's complement)         
05D4   06F2           00217                 xorwf   Temp1,f
05D5   06F1           00218                 xorwf   Temp0,f
05D6   3001           00219                 movlw   0x01
05D7   07F2           00220                 addwf   Temp1,f
05D8   1803           00221                 btfsc   STATUS,C
Message[305]: Using default destination of 1 (file).
05D9   0AF1           00222                         Incf    Temp0
05DA   2DC3           00223                 goto    Checkdelta
                      00224                 
05DB                  00225 RetFromPreCha   
05DB   0064           00226                 clrwdt
05DC   1208           00227                 bcf             REDLED
05DD   10EE           00228                 bcf             NOC
05DE   21A7           00229                 call    UpdateCAN
05DF   3074           00230                 movlw   INITDUTY                ; PWM2 duty cycle (Sm')
05E0   00CE           00231                 movwf   DUTY2_H                 ; init duty variable
05E1   009B           00232                 movwf   CCPR2L
05E2   2043           00233                 call    wait1s
05E3   0008           00234                 RETURN
                      00235 
                      00236 
                      00237                 
                      00103 #include        "noload.asm"            ; no load at output
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;**********************************************************************
                      00002 ;   P R O G R A M M     MPPTnG                                        *
                      00003 ;                                                                     *
                      00004 ;   Traking program for MPPT new generation                           *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      noload.asm                                        *
                      00008 ;    Date:          30.04.01                                          *
                      00009 ;    Last Update:   23.09.01                                          *
                      00010 ;    File Version:  V3.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        Michael Zürcher                                   *
                      00013 ;                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab                           *
                      00015 ;                                                                     *
                      00016 ;    Changes:       program for dealing with no load at output        *
                      00017 ;                   added Interrupt routine (5.5.01)                  *                                 
                                                                 *
                      00018 ;                                                                     *
                      00019 ;**********************************************************************
                      00020 ;                                                                     *
                      00021 ;    Notes:                                                           *
                      00022 ;    - Main program : mpptng.asm                                      *
                      00023 ;                                                                     *
                      00024 ;**********************************************************************
                      00025 
05E4   234F           00026 NCInterupt      call    PWMoff
05E5   14EE           00027                 bsf     NOC
                      00028 
05E6   2036           00029 DeCharge        call    wait20ms                ; wait for capacitor to be discharged
05E7   21A7           00030                 call    UpdateCAN
05E8   2169           00031                 call    GetFilteredUout
                      00032 
                      00033                 jmpFltL UOFH,MAXUOH,ResNOC      ; jmp, if minimal voltage not reached
05E9   0834               M           movfw     UOFH
                          M           jmpWltL   0x02,ResNOC
05EA   3C02               M         sublw   0x02
                          M         skipC
05EB   1C03               M         btfss   _C
05EC   1503               M         bsf     _Z
                          M         jmpNZ   ResNOC
05ED   1D03               M         btfss   _Z
05EE   2DF8               M         goto    ResNOC
                      00034                 jmpFgtL UOFH,MAXUOH,DeCharge    ; go on, if minimal reached
05EF   0834               M           movfw     UOFH
                          M           jmpWgtL   0x02,DeCharge
05F0   3C02               M         sublw   0x02
05F1   1C03               M         btfss   _C
05F2   2DE6               M         goto    DeCharge
                      00035                 jmpFleL UOFL,MAXUOL,ResNOC      ; consider L-Byte
05F3   0835               M           movfw     UOFL
                          M           jmpWleL   0x55,ResNOC
05F4   3C55               M         sublw   0x55
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05F5   1803               M         btfsc   _C
05F6   2DF8               M         goto    ResNOC
                      00036 
05F7   2DE6           00037                 goto    DeCharge        
                      00038 
05F8   1308           00039 ResNOC          bcf     RES_NOC
05F9   2036           00040                 call    wait20ms
05FA   1708           00041                 bsf     RES_NOC
                      00042                 
                      00043 ;----------------------------------------------------------------------
05FB   2348           00044                 call    PWMon                   ; PWM einschalten
                      00045                 
05FC   100B           00046                 bcf     INTCON,RBIF             ; reset interrupt
05FD   10EE           00047                 bcf     NOC
                      00048 
05FE   2818           00049                 goto    IntReturn
                      00050                 
                      00104 #include        "underv.asm"            ; 
                      00001 ;**********************************************************************
                      00002 ;   P R O G R A M M     MPPTnG                                            *
                      00003 ;                                                                     *
                      00004 ;   Undervoltage routine                                                          *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      underv.asm                                        *
                      00008 ;    Date:          21.09.01                                          *
                      00009 ;    Last Update:   28.09.01                                          *
                      00010 ;    File Version:  V3.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        Michael Zürcher                                   *
                      00013 ;                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab                           *
                      00015 ;                                                                     *
                      00016 ;    Changes:       program part which waits for sufficient input     *
                      00017 ;                                   voltage                                                             
                                              *
                      00018 ;                                                                     *
                      00019 ;**********************************************************************
                      00020 ;                                                                     *
                      00021 ;    Notes:                                                           *
                      00022 ;    - Main program : mpptngv4.asm                                    *
                      00023 ;                                                                     *
                      00024 ;**********************************************************************
05FF                  00025 UnderVoltage    ;call   PWMoff
                      00026 
05FF   21A7           00027                 call    UpdateCAN
0600   212E           00028                 call    GetFilteredUin
                      00029         
                      00030                 jmpFltL UIF0H,MINUINH,UnderVoltageloop  ; jmp, if minimal voltage not reached
0601   0828               M           movfw     UIF0H
                          M           jmpWltL   0x00,UnderVoltageloop
0602   3C00               M         sublw   0x00
                          M         skipC
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0603   1C03               M         btfss   _C
0604   1503               M         bsf     _Z
                          M         jmpNZ   UnderVoltageloop
0605   1D03               M         btfss   _Z
0606   2E10               M         goto    UnderVoltageloop
                      00031                 jmpFgtL UIF0H,MINUINH,EnoughVin         ; go on, if minimal reached
0607   0828               M           movfw     UIF0H
                          M           jmpWgtL   0x00,EnoughVin
0608   3C00               M         sublw   0x00
0609   1C03               M         btfss   _C
060A   2E17               M         goto    EnoughVin
                      00032                 jmpFleL UIF0L,MINUINL,UnderVoltageloop  ; consider L-Byte
060B   0829               M           movfw     UIF0L
                          M           jmpWleL   0xAD,UnderVoltageloop
060C   3CAD               M         sublw   0xAD
060D   1803               M         btfsc   _C
060E   2E10               M         goto    UnderVoltageloop
060F   2E17           00033                 goto    EnoughVin
                      00034 
0610                  00035 UnderVoltageloop
                      00036 
0610   146E           00037                 bsf             UNDV
0611   1608           00038                 bsf             REDLED                          ; in this state, the red LED is blinking
0612   2036           00039                 call    wait20ms
0613   1208           00040                 bcf             REDLED
0614   2043           00041                 call    wait1s
0615   2371           00042                 call    DecDuty 
0616   2DFF           00043                 goto    UnderVoltage
                      00044         
                      00045 
0617   106E           00046 EnoughVin       bcf     UNDV
                      00047                 ;call   PWMon
0618   0008           00048                 RETURN
                      00105 #include        "minpower.asm"          ; 
                      00001 ;**********************************************************************
                      00002 ;   P R O G R A M M     MPPTnG                                        *
                      00003 ;                                                                     *
                      00004 ;   Undervoltage routine                                              *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      underv.asm                                        *
                      00008 ;    Date:          21.09.01                                          *
                      00009 ;    Last Update:   21.09.01                                          *
                      00010 ;    File Version:  V3.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        Michael Zuercher                                  *
                      00013 ;                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab                           *
                      00015 ;                                                                     *
                      00016 ;    Changes:       program part which waits for sufficient input     *
                      00017 ;                   voltage                                           *
                      00018 ;                                                                     *
                      00019 ;**********************************************************************
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00020 ;                                                                     *
                      00021 ;    Notes:                                                           *
                      00022 ;    - Main program : mpptngv4.asm                                    *
                      00023 ;                                                                     *
                      00024 ;**********************************************************************
                      00025 
0619   2104           00026 MinPower        call    CalcNewPower
061A   08C8           00027                 movf    PI0H,F                          ; Zero is affected
061B   1D03           00028                 btfss   _Z
061C   2E34           00029                    goto    EnoughPower
                      00030                 jmpFltL PI0M,MINPINM,NotEnoughPower     ; jmp, if minimal Power not reached
061D   0849               M           movfw     PI0M
                          M           jmpWltL   0x16,NotEnoughPower
061E   3C16               M         sublw   0x16
                          M         skipC
061F   1C03               M         btfss   _C
0620   1503               M         bsf     _Z
                          M         jmpNZ   NotEnoughPower
0621   1D03               M         btfss   _Z
0622   2E2C               M         goto    NotEnoughPower
                      00031                 jmpFgtL PI0M,MINPINM,EnoughPower        ; go on, if minimal reached
0623   0849               M           movfw     PI0M
                          M           jmpWgtL   0x16,EnoughPower
0624   3C16               M         sublw   0x16
0625   1C03               M         btfss   _C
0626   2E34               M         goto    EnoughPower
                      00032                 jmpFleL PI0L,MINPINL,NotEnoughPower     ; consider L-Byte
0627   084A               M           movfw     PI0L
                          M           jmpWleL   0x26,NotEnoughPower
0628   3C26               M         sublw   0x26
0629   1803               M         btfsc   _C
062A   2E2C               M         goto    NotEnoughPower
062B   2E34           00033                 goto    EnoughPower
                      00034                 
                      00035 NotEnoughPower  BANK1
062C   1683               M         bsf     STATUS,5    ; Select page 1
062D   0AA2           00036                 incf    PminCounter,F
062E   3030           00037                 movlw   0x30
062F   0222           00038                 subwf   PminCounter,W                   ;PminCounter-0x0A
                      00039                 BANK0
0630   1283               M         bcf     STATUS,5    ; Select page 0
0631   1C03           00040                 btfss   _C                              ;!!!Achtung ueberprüfen
0632   2E39           00041                    goto    RetFromPMin
0633   2ED4           00042                 goto    Main    ; Stack has not to be decremented, due to circular stack architecture!
                      00043 
                      00044 EnoughPower     BANK1
0634   1683               M         bsf     STATUS,5    ; Select page 1
0635   08A2           00045                 movf    PminCounter,F
0636   1D03           00046                 btfss   _Z
0637   03A2           00047                    decf    PminCounter,F
                      00048                 BANK0
0638   1283               M         bcf     STATUS,5    ; Select page 0
                      00049 
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0639   0000           00050 RetFromPMin     nop
063A   0008           00051                 RETURN
                      00052                 
                      00053 
                      00054 
                      00055 
                      00106 #include        "constv.asm"            ; 
                      00001 ;**********************************************************************
                      00002 ;   P R O G R A M M     MPPTnG                                            *
                      00003 ;                                                                     *
                      00004 ;   Undervoltage routine                                                                  *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      underv.asm                                        *
                      00008 ;    Date:          21.09.01                                          *
                      00009 ;    Last Update:   28.09.01                                          *
                      00010 ;    File Version:  V3.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        Michael Zuercher                                  *
                      00013 ;                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab                           *
                      00015 ;                                                                     *
                      00016 ;    Changes:       program part which decreases current                  *
                      00017 ;                                                                                                       
                                              *
                      00018 ;                                                                     *
                      00019 ;**********************************************************************
                      00020 ;                                                                     *
                      00021 ;    Notes:                                                           *
                      00022 ;    - Main program : mpptngv4.asm                                    *
                      00023 ;                                                                     *
                      00024 ;**********************************************************************
                      00025 
063B                  00026 ConstVMode      
063B   234F           00027                 call    PWMoff
063C   2036           00028                 call    wait20ms
063D                  00029 Wait4Connect1                                                           ;is bat. still connected?
063D   21A7           00030                 call    UpdateCAN
063E   0064           00031                 clrwdt                                                          ; reset watchdog
063F   2169           00032                 call    GetFilteredUout                         ;UOUT<=MAXUOUT+2V
0640                  00033 CheckMaxuout1
0640   3010           00034                 movlw   0x10                                            ;add 2V to MAXOUT
0641   00F6           00035                 movwf   Temp4
0642   3002           00036                 movlw   MAXUOH
0643   00F7           00037                 movwf   Temp5
0644   3055           00038                 movlw   MAXUOL
0645   07F6           00039                 addwf   Temp4,f
0646   1803           00040                 btfsc   STATUS,C
Message[305]: Using default destination of 1 (file).
0647   0AF7           00041                         incf    Temp5
                      00042                 
0648   0877           00043                 movfw   Temp5
0649   00F2           00044                 movwf   Temp1
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

064A   0834           00045                 movf    UOFH,w                                  
064B   0272           00046                 subwf   Temp1,w
064C   1903           00047                 btfsc   _Z
064D   2E51           00048                         goto    CheckLsb21
064E   1C03           00049                 btfss   _C                                                      ;c set if w=MAXUOH-UOFH 
                            >=0
064F   2E57           00050                         goto    NoBatConnected
0650   2E80           00051                 goto    ConstVMode2
                      00052 
0651                  00053 CheckLsb21      
0651   0876           00054                 movfw   Temp4
0652   00F2           00055                 movwf   Temp1
0653   0835           00056                 movfw   UOFL
0654   0272           00057                 subwf   Temp1,W
0655   1803           00058                 btfsc   _C                                                      ;c set if w=MAXUOL-UOFL 
                            >=0
0656   2E80           00059                         goto    ConstVMode2
                      00060 
0657                  00061 NoBatConnected
0657   1608           00062                 bsf             REDLED
0658   14EE           00063                 bsf             NOC
0659   11EE           00064                 bcf             BVLR
065A   234F           00065                 call    PWMoff
                      00066 
065B                  00067 DeCharge1
065B   2036           00068                 call    wait20ms                ; wait for capacitor to be discharged
065C   21A7           00069                 call    UpdateCAN
065D   212E           00070                 call    GetFilteredUin
                      00071 
                      00072                 jmpFltL UIF0H,MINUINH,CV_UVState3       ; jmp, if minimal voltage not reached
065E   0828               M           movfw     UIF0H
                          M           jmpWltL   0x00,CV_UVState3
065F   3C00               M         sublw   0x00
                          M         skipC
0660   1C03               M         btfss   _C
0661   1503               M         bsf     _Z
                          M         jmpNZ   CV_UVState3
0662   1D03               M         btfss   _Z
0663   2E6D               M         goto    CV_UVState3
                      00073                 jmpFgtL UIF0H,MINUINH,CV_MeasUout3      ; go on, if minimal reached
0664   0828               M           movfw     UIF0H
                          M           jmpWgtL   0x00,CV_MeasUout3
0665   3C00               M         sublw   0x00
0666   1C03               M         btfss   _C
0667   2E6E               M         goto    CV_MeasUout3
                      00074                 jmpFleL UIF0L,MINUINL,CV_UVState3       ; consider L-Byte
0668   0829               M           movfw     UIF0L
                          M           jmpWleL   0xAD,CV_UVState3
0669   3CAD               M         sublw   0xAD
066A   1803               M         btfsc   _C
066B   2E6D               M         goto    CV_UVState3
066C   2E6E           00075                 goto    CV_MeasUout3
                      00076 
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

066D   25FF           00077 CV_UVState3     call    UnderVoltage
066E                  00078 CV_MeasUout3
                      00079 
066E   2169           00080                 call    GetFilteredUout
                      00081 
                      00082                 jmpFltL UOFH,MAXUOH,ClearNOC    ; jmp, if minimal voltage not reached
066F   0834               M           movfw     UOFH
                          M           jmpWltL   0x02,ClearNOC
0670   3C02               M         sublw   0x02
                          M         skipC
0671   1C03               M         btfss   _C
0672   1503               M         bsf     _Z
                          M         jmpNZ   ClearNOC
0673   1D03               M         btfss   _Z
0674   2E7E               M         goto    ClearNOC
                      00083                 jmpFgtL UOFH,MAXUOH,DeCharge1   ; go on, if minimal reached
0675   0834               M           movfw     UOFH
                          M           jmpWgtL   0x02,DeCharge1
0676   3C02               M         sublw   0x02
0677   1C03               M         btfss   _C
0678   2E5B               M         goto    DeCharge1
                      00084                 jmpFleL UOFL,MAXUOL,ClearNOC    ; consider L-Byte
0679   0835               M           movfw     UOFL
                          M           jmpWleL   0x55,ClearNOC
067A   3C55               M         sublw   0x55
067B   1803               M         btfsc   _C
067C   2E7E               M         goto    ClearNOC
                      00085 
067D   2E5B           00086                 goto    DeCharge1       
                      00087         
067E                  00088 ClearNOC
067E   10EE           00089                 bcf     NOC                     
067F   1208           00090                 bcf             REDLED
                      00091 ;------------------------------------------------------------------------               
0680                  00092 ConstVMode2
0680   15EE           00093                 bsf     BVLR
0681   1608           00094                 bsf     REDLED
0682   2371           00095                 call    DecDuty                         ; decrement duty cycle
0683   2348           00096                 call    PWMon
0684   2036           00097                 call    wait20ms                        ; to obtain an approximate tracking frequency of
                             50Hz
                      00098                 
0685   21A7           00099                 call    UpdateCAN                               
0686   212E           00100                 call    GetFilteredUin
                      00101 
                      00102                 jmpFltL UIF0H,MINUINH,CV_UVState        ; jmp, if minimal voltage not reached
0687   0828               M           movfw     UIF0H
                          M           jmpWltL   0x00,CV_UVState
0688   3C00               M         sublw   0x00
                          M         skipC
0689   1C03               M         btfss   _C
068A   1503               M         bsf     _Z
                          M         jmpNZ   CV_UVState
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

068B   1D03               M         btfss   _Z
068C   2E96               M         goto    CV_UVState
                      00103                 jmpFgtL UIF0H,MINUINH,CV_MeasUout       ; go on, if minimal reached
068D   0828               M           movfw     UIF0H
                          M           jmpWgtL   0x00,CV_MeasUout
068E   3C00               M         sublw   0x00
068F   1C03               M         btfss   _C
0690   2E98               M         goto    CV_MeasUout
                      00104                 jmpFleL UIF0L,MINUINL,CV_UVState        ; consider L-Byte
0691   0829               M           movfw     UIF0L
                          M           jmpWleL   0xAD,CV_UVState
0692   3CAD               M         sublw   0xAD
0693   1803               M         btfsc   _C
0694   2E96               M         goto    CV_UVState
0695   2E98           00105                 goto    CV_MeasUout
                      00106 
0696   25FF           00107 CV_UVState      call    UnderVoltage
                      00108         
0697   21A7           00109                 call    UpdateCAN
                      00110                 
0698   2169           00111 CV_MeasUout     call    GetFilteredUout                 ; test if battery reached full level
0699   21A7           00112                 call    UpdateCAN
                      00113 
                      00114 
                      00115                 jmpFltL UOFH,MAXUOH,MPPTtracking        ; jmp, if output voltage within limits
069A   0834               M           movfw     UOFH
                          M           jmpWltL   0x02,MPPTtracking
069B   3C02               M         sublw   0x02
                          M         skipC
069C   1C03               M         btfss   _C
069D   1503               M         bsf     _Z
                          M         jmpNZ   MPPTtracking
069E   1D03               M         btfss   _Z
069F   2BD2               M         goto    MPPTtracking
                      00116                 jmpFgtL UOFH,MAXUOH,CheckBatCon         ; go on, if ouput voltage exceeded
06A0   0834               M           movfw     UOFH
                          M           jmpWgtL   0x02,CheckBatCon
06A1   3C02               M         sublw   0x02
06A2   1C03               M         btfss   _C
06A3   2EA9               M         goto    CheckBatCon
                      00117                 jmpFleL UOFL,MAXUOL,MPPTtracking        ; consider L-Byte
06A4   0835               M           movfw     UOFL
                          M           jmpWleL   0x55,MPPTtracking
06A5   3C55               M         sublw   0x55
06A6   1803               M         btfsc   _C
06A7   2BD2               M         goto    MPPTtracking
06A8   2E3D           00118                 goto    Wait4Connect1
06A9                  00119 CheckBatCon
06A9   2E3D           00120                 goto    Wait4Connect1
                      00121         
                      00122 ;**********************************************************************
                      00107 #include        "overtemp.asm"          ; 
                      00001 ;**********************************************************************
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00002 ;   P R O G R A M M     MPPTnG                                            *
                      00003 ;                                                                     *
                      00004 ;   Undervoltage routine                                                                  *
                      00005 ;**********************************************************************
                      00006 ;                                                                     *
                      00007 ;    Filename:      underv.asm                                        *
                      00008 ;    Date:          21.09.01                                          *
                      00009 ;    Last Update:   28.09.01                                          *
                      00010 ;    File Version:  V3.0                                              *
                      00011 ;                                                                     *
                      00012 ;    Author:        Michael Zürcher                                   *
                      00013 ;                                                                     *
                      00014 ;    Company:       HTA-Biel/Bienne Indulab                           *
                      00015 ;                                                                     *
                      00016 ;    Changes:       program part which decreases current, due to      *
                      00017 ;                   excessive temperature                                                               
                             *
                      00018 ;                                                                     *
                      00019 ;                                                                     *
                      00020 ;**********************************************************************
                      00021 ;                                                                     *
                      00022 ;    Notes:                                                           *
                      00023 ;    - Main program : mpptngv4.asm                                    *
                      00024 ;                                                                     *
                      00025 ;**********************************************************************
                      00026 
06AA                  00027 OverTemp
06AA   1986           00028                 btfsc   INT_OVH 
06AB   156E           00029                         bsf             OVT
                      00030 
06AC   1D6E           00031                 btfss   OVT     
06AD   2ED3           00032                         goto    Shortexit
                      00033 
                      00034                 
06AE   234F           00035                 call    PWMoff
06AF   1608           00036                 bsf             REDLED
06B0   21A7           00037                 call    UpdateCAN
06B1   2036           00038                 call    wait20ms                                ; to obtain an approximate tracking freq
                            uency of 50Hz
                      00039                                                 
06B2   212E           00040                 call    GetFilteredUin
                      00041                 jmpFltL UIF0H,MINUINH,OT_UVState        ; jmp, if minimal voltage not reached
06B3   0828               M           movfw     UIF0H
                          M           jmpWltL   0x00,OT_UVState
06B4   3C00               M         sublw   0x00
                          M         skipC
06B5   1C03               M         btfss   _C
06B6   1503               M         bsf     _Z
                          M         jmpNZ   OT_UVState
06B7   1D03               M         btfss   _Z
06B8   2EC2               M         goto    OT_UVState
                      00042                 jmpFgtL UIF0H,MINUINH,OT_MeasTemp       ; go on, if minimal reached
06B9   0828               M           movfw     UIF0H
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           jmpWgtL   0x00,OT_MeasTemp
06BA   3C00               M         sublw   0x00
06BB   1C03               M         btfss   _C
06BC   2EC3               M         goto    OT_MeasTemp
                      00043                 jmpFleL UIF0L,MINUINL,OT_UVState        ; consider L-Byte
06BD   0829               M           movfw     UIF0L
                          M           jmpWleL   0xAD,OT_UVState
06BE   3CAD               M         sublw   0xAD
06BF   1803               M         btfsc   _C
06C0   2EC2               M         goto    OT_UVState
06C1   2EC3           00044                 goto    OT_MeasTemp
                      00045 
06C2   25FF           00046 OT_UVState      call    UnderVoltage
                      00047 
06C3   20EE           00048 OT_MeasTemp     call    GetTCooler                              ; test if temp. is within limits
                      00049 
06C4   3000           00050                 movlw   0x00                                            ;reset value, is max. temp for r
                            eset reached?
06C5   0246           00051                 subwf   TCH,w
06C6   1903           00052                 btfsc   _Z
06C7   2EC9           00053                         goto    OVT_CheckLsb
06C8   2EAA           00054                 goto    OverTemp
                      00055 
06C9                  00056 OVT_CheckLsb    
06C9   30E8           00057                 movlw   0xE8                                            ; 0.90V or 88 C
06CA   0247           00058                 subwf   TCL,W
06CB   1803           00059                 btfsc   _C                                                      ;c set if w=TCL-ED >=0  
06CC   2EAA           00060                         goto    OverTemp
                      00061 
06CD                  00062 ExitOverTemp
06CD   116E           00063                 bcf             OVT                     ;Reset OVH-Flag
06CE   1388           00064                 bcf             RES_OVH         ;Reset OVH-Flip-Flop
06CF   2036           00065                 call    wait20ms
06D0   1788           00066                 bsf             RES_OVH
06D1   1208           00067                 bcf     REDLED
06D2   2348           00068                 call    PWMon
06D3                  00069 Shortexit               
06D3   0008           00070                 RETURN
                      00071 
                      00072 ;**********************************************************************
                      00108 
                      00109 
                      00110 ;**********************************************************************
                      00111 ;               Initialization 
                      00112 ;**********************************************************************
                      00113 
06D4   2293           00114 Main    call    Init                    ; Initialize PICmicro
                      00115                 
06D5   2055           00116                 call    InitADC                 ; Initialize A/D Converters
                      00117 
06D6   1D06           00118                 btfss   CAN_PRE                 ; skip next line if CAN_PRE = 0
06D7   2EE6           00119                 goto    monOVC1
06D8   0808           00120                 movf    PORTD,W                 ; read A0-A3
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06D9   390F           00121                 andlw   B'00001111'             ; mask A0-A3 Bits
06DA   1903           00122                 btfsc   _Z      
06DB   2EE6           00123             goto        monOVC1
06DC   22B8           00124         call    InitCAN                 ; Initialize SPI-Bus & CAN module
                      00125 
06DD   3004           00126                 movlw   CAN_TIME
06DE   00FD           00127                 movwf   CAN_COUNTER             ; load CAN counter
06DF   108B           00128                 bcf     INTCON,INTF        ; clear all eventual interrupts
06E0   160B           00129                 bsf     INTCON,INTE        ; enable INT/RB0 (CAN INT.)
06E1   16EE           00130                 bsf     Initialized             ; PIC initialized
06E2   14EE           00131                 bsf     NOC                             ; before initialized set No battery connectet, u
                            ndervoltage, ocer temp.
06E3   146E           00132                 bsf     UNDV
06E4   156E           00133                 bsf OVT
06E5   11EE           00134                 bcf     BVLR
                      00135 ;----------------------------------------------------------------------
                      00136 ; No Charge
                      00137 ;----------------------------------------------------------------------
                      00138 
06E6   21A7           00139 monOVC1         call    UpdateCAN
06E7   2036           00140                         call    wait20ms
                      00141 
06E8   0064           00142                         clrwdt                                  ; reset watchdog
                      00143 
06E9   2094           00144                         call    GetUout
                      00145                 
06EA   082C           00146                         movf    UO0H,W
06EB   3C02           00147                         sublw   MAXUOH                  ;MAXUOH-UOFH
                      00148 
06EC   1903           00149                         btfsc   _Z
06ED   2EF1           00150                         goto    LowByte1
                      00151 
06EE   1803           00152                         btfsc   _C
06EF   2EF5           00153                         goto    Reset_NOC1
                      00154         
06F0   2EE6           00155                         goto    monOVC1
                      00156 
06F1   3055           00157 LowByte1        movlw   MAXUOL
06F2   022D           00158                         subwf   UO0L,W
06F3   1803           00159                         btfsc   _C
06F4   2EE6           00160                         goto    monOVC1
                      00161 
06F5   1308           00162 Reset_NOC1      bcf     RES_NOC                         ; Reset NoCharge-Flip-Flop
06F6   2036           00163                         call    wait20ms
06F7   1708           00164                         bsf     RES_NOC
                      00165 
                      00166 
                      00167 ;----------------------------------------------------------------------
                      00168 ; Overheat
                      00169 ;----------------------------------------------------------------------
                      00170 
06F8   1388           00171 OVH_LOOP1       bcf     RES_OVH                 ; Reset OVH-Flip-Flop
06F9   2036           00172                         call    wait20ms
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

06FA   1788           00173                         bsf     RES_OVH
                      00174 
                      00175 ;----------------------------------------------------------------------
                      00176 
06FB   2334           00177 PWM                     call    InitPWM         ; Initialize PWMs modules
                      00178                                                 ; PWM signal remain "off"
                      00179 ;----------------------------------------------------------------------
                      00180 ; Input low voltage
                      00181 ;----------------------------------------------------------------------
06FC   25FF           00182                         call    UnderVoltage
                      00183 ;----------------------------------------------------------------------
                      00184 ; PreCharge
                      00185 ;----------------------------------------------------------------------         
                      00186                 
06FD   2525           00187                         call    PreCharge       
                      00188 
                      00189 ;----------------------------------------------------------------------
                      00190 ; Reset the Pmin Counter
                      00191 ;----------------------------------------------------------------------
                      00192                         BANK1
06FE   1683               M         bsf     STATUS,5    ; Select page 1
06FF   01A2           00193                         clrf    PminCounter
                      00194                         BANK0
0700   1283               M         bcf     STATUS,5    ; Select page 0
                      00195 ;**********************************************************************
                      00196 ;               State Machine
                      00197 ;**********************************************************************
0701                  00198 State   
0701   2BD0           00199                         goto    TrackingLoop
                      00200 
                      00201                         END                                     ; directive 'end of program'
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 91


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCON1_P                          0000001F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AUX_PW                            0x06
BANK0                             
BANK1                             
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BFPCTRL                           0x0C
BIGSTEP_H                         0x04
BIGSTEP_L                         0x00
BITMODIFY2510                     0x05
BRGH                              00000002
BVLR                              GenFlags,3
BatConn                           00000582
BigDelta                          0000015B
BigPWM                            000005A7
BitMod2510                        00000272
BoostALittle                      0000055F
C                                 00000000
C15                               00000523
C20                               00000521
C25                               0000051F
C30                               0000051D
C35                               0000051B
C40                               00000519
C45                               00000517
C50                               00000515
C55                               00000513
C60                               00000511
C65                               0000050F
C70                               0000050D
C75                               0000050B
C80                               00000509
C85                               00000507
C90                               00000505
C95                               00000503
CANCTRL                           0x0F
CANCTRL1                          0x1F
CANCTRL2                          0x2F
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 92


SYMBOL TABLE
  LABEL                             VALUE 

CANCTRL3                          0x3F
CANCTRL4                          0x4F
CANCTRL5                          0x5F
CANCTRL6                          0x6F
CANCTRL7                          0x7F
CANINTE                           0x2B
CANINTF                           0x2C
CANRqTest                         00000316
CANSTAT                           0x0E
CANSTAT1                          0x1E
CANSTAT2                          0x2E
CANSTAT3                          0x3E
CANSTAT4                          0x4E
CANSTAT5                          0x5E
CANSTAT6                          0x6E
CANSTAT7                          0x7E
CANTxRq                           GenFlags,6
CAN_COUNTER                       0000007D
CAN_CS                            PORTD,5
CAN_PRE                           PORTB,2
CAN_TIME                          0x04
CAN_TxMsg                         GenFlags,7
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2H                            0000001C
CCPR2L                            0000001B
CHANNEL0                          B'10000000'
CHANNEL1                          B'10001000'
CHANNEL2                          B'10010000'
CHANNEL4                          B'10100000'
CHANNEL5                          B'10101000'
CHANNEL6                          B'10110000'
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 93


SYMBOL TABLE
  LABEL                             VALUE 

CKE                               00000006
CKP                               00000004
CNF1                              0x2A
CNF2                              0x29
CNF3                              0x28
COUNTERA                          0000007A
COUNTERB                          0000007B
COUNTERC                          0000007C
CREN                              00000004
CSRC                              00000007
CV_MeasUout                       00000698
CV_MeasUout1                      0000053E
CV_MeasUout2                      00000594
CV_MeasUout3                      0000066E
CV_UVState                        00000696
CV_UVState1                       0000053D
CV_UVState2                       00000593
CV_UVState3                       0000066D
CalcNewPower                      00000104
Cgt70                             00000481
CheckBatCon                       000006A9
CheckLsb                          0000056F
CheckLsb2                         0000057C
CheckLsb21                        00000651
CheckMSB                          000005BF
CheckMaxuout                      00000573
CheckMaxuout1                     00000640
Checkdelta                        000005C3
ClearNOC                          0000067E
ConstVMode                        0000063B
ConstVMode2                       00000680
ConvTempAmb                       0000049A
ConvTempCooler                    0000043A
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DUTY2_H                           0000004E
DUTY2_L                           0000004F
DUTY2_MIN_H                       0x0E
DUTY2_MIN_L                       0xE7
D_A                               00000005
DeCharge                          000005E6
DeCharge1                         0000065B
DecDuty                           00000371
DecisionTree                      000003FF
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 94


SYMBOL TABLE
  LABEL                             VALUE 

EEPGD                             00000007
EFLG                              0x2D
ENA_FET                           PORTC,0
EndLoad                           00000362
EnoughPower                       00000634
EnoughVin                         00000617
ExchangeSPI                       0000039F
ExitOverTemp                      000006CD
ExtInt                            00000014
F                                 00000001
FALSE                             00000000
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GenFlags                          0000006E
GetFilteredIin                    00000185
GetFilteredUin                    0000012E
GetFilteredUout                   00000169
GetIin                            000000B6
GetTCooler                        000000EE
GetTamb                           000000D8
GetUin                            00000072
GetUout                           00000094
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
IDTrackerRXH                      00000052
IDTrackerRXL                      00000053
IDTrackerTXH                      00000050
IDTrackerTXL                      00000051
II0H                              00000036
II0L                              00000037
II1H                              00000038
II1L                              00000039
II2H                              0000003A
II2L                              0000003B
II3H                              0000003C
II3L                              0000003D
IIF0H                             0000003E
IIF0L                             0000003F
IIF1H                             00000040
IIF1L                             00000041
INDF                              00000000
INITDUTY                          0x74
INIT_IO_A                         B'00101111'
INIT_IO_AD                        B'10000001'
INIT_IO_B                         B'00111101'
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 95


SYMBOL TABLE
  LABEL                             VALUE 

INIT_IO_C                         B'10010000'
INIT_IO_D                         B'00001111'
INIT_IO_E                         B'00000111'
INIT_SPI                          B'00010010'
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
INT_NOC                           PORTB,4
INT_OVH                           PORTB,3
INT_UNDV                          PORTB,5
INV_MOS_ENA                       PORTB,1
IRP                               00000007
IncDuty                           00000363
Init                              00000293
Init2510                          000001AA
InitADC                           00000055
InitCAN                           000002B8
InitPWM                           00000334
InitSPIBuf                        000003BD
InitSPIPort                       00000394
Initialized                       GenFlags,5
IntADC                            000001A5
IntCAN                            00000312
IntReturn                         00000018
IntSPI                            000003C2
IntSaveFSR                        0000006C
IntSavePCLATH                     0000006D
IntSaveSt                         0000006B
IntSaveW                          0000007F
LimitIt                           0000038D
LoadDuty                          00000359
LoadSPIByte                       000003BA
LoadSPIZeros                      000003B0
LowByte1                          000006F1
MAXTCH                            0x02
MAXTCL                            0xBB
MAXUOH                            0x02
MAXUOL                            0x55
MINPINL                           0x26
MINPINM                           0x16
MINUBATH                          0x01
MINUBATL                          0xAA
MINUINH                           0x00
MINUINL                           0xAD
MMXX                              0000040D
MPPTtracking                      000003D2
MPXM                              00000410
MPXX                              0000040E
MXXX                              0000040B
Main                              000006D4
MeasIin                           000003E8
MeasStableUs                      0000052D
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 96


SYMBOL TABLE
  LABEL                             VALUE 

MeasTemp                          000003FC
MeasUout                          000003EC
MedPWM                            000005A4
MinPower                          00000619
MoreByte                          000003CC
NCInterupt                        000005E4
NOC                               GenFlags,1
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NegDV                             0000041D
NegP                              00000405
NoBatConnected                    00000657
NoCels                            00000501
NormalMode2510                    0000027F
NormalModeCounter                 0000006F
NotEnoughPower                    0000062C
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
OPTION_REG_P                      00000001
OT_MeasTemp                       000006C3
OT_UVState                        000006C2
OVH_LOOP1                         000006F8
OVT                               GenFlags,2
OVT_CheckLsb                      000006C9
OverTemp                          000006AA
Overflow                          000005D1
P                                 00000004
PAGE0                             
PAGE1                             
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PCON_P                            0000000E
PEIE                              00000006
PEN                               00000002
PERIODE                           0xCF
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 97


SYMBOL TABLE
  LABEL                             VALUE 

PI0H                              00000048
PI0L                              0000004A
PI0M                              00000049
PI1H                              0000004B
PI1L                              0000004D
PI1M                              0000004C
PIE1                              0000008C
PIE1_P                            0000000C
PIE2                              0000008D
PIE2_P                            0000000D
PIR1                              0000000C
PIR2                              0000000D
PMXM                              00000417
PMXX                              00000415
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PR2_P                             00000012
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSF                               000000A1
PSFsetup                          00000434
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWM                               000006FB
PWMoff                            0000034F
PWMon                             00000348
PXXX                              00000413
PminCounter                       000000A2
PosDV                             0000041A
PosP                              00000402
PreCharge                         00000525
R                                 00000002
RBIE                              00000003
RBIF                              00000000
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
READ2510                          0x03
READ_WRITE                        00000002
REC                               0x1D
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 98


SYMBOL TABLE
  LABEL                             VALUE 

REDLED                            PORTD,4
RESET2510                         0xC0
RES_NOC                           PORTD,6
RES_OVH                           PORTD,7
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RTS0                              0x01
RTS1                              0x02
RTS2                              0x04
RTS2510                           0x80
RX9                               00000006
RX9D                              00000000
RXB0CTRL                          0x60
RXB0D0                            0x66
RXB0D1                            0x67
RXB0D2                            0x68
RXB0D3                            0x69
RXB0D4                            0x6A
RXB0D5                            0x6B
RXB0D6                            0x6C
RXB0D7                            0x6D
RXB0DLC                           0x65
RXB0EID0                          0x64
RXB0EID8                          0x63
RXB0SIDH                          0x61
RXB0SIDL                          0x62
RXB1CTRL                          0x70
RXB1D0                            0x76
RXB1D1                            0x77
RXB1D2                            0x78
RXB1D3                            0x79
RXB1D4                            0x7A
RXB1D5                            0x7B
RXB1D6                            0x7C
RXB1D7                            0x7D
RXB1DLC                           0x75
RXB1EID0                          0x74
RXB1EID8                          0x73
RXB1SIDH                          0x71
RXB1SIDL                          0x72
RXBASEADR                         0xE2
RXF0EID0                          0x03
RXF0EID8                          0x02
RXF0SIDH                          0x00
RXF0SIDL                          0x01
RXF1EID0                          0x07
RXF1EID8                          0x06
RXF1SIDH                          0x04
RXF1SIDL                          0x05
RXF2EID0                          0x0B
RXF2EID8                          0x0A
RXF2SIDH                          0x08
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 99


SYMBOL TABLE
  LABEL                             VALUE 

RXF2SIDL                          0x09
RXF3EID0                          0x13
RXF3EID8                          0x12
RXF3SIDH                          0x10
RXF3SIDL                          0x11
RXF4EID0                          0x17
RXF4EID8                          0x16
RXF4SIDH                          0x14
RXF4SIDL                          0x15
RXF5EID0                          0x1B
RXF5EID8                          0x1A
RXF5SIDH                          0x18
RXF5SIDL                          0x19
RXM0EID0                          0x23
RXM0EID8                          0x22
RXM0SIDH                          0x20
RXM0SIDL                          0x21
RXM1EID0                          0x27
RXM1EID8                          0x26
RXM1SIDH                          0x24
RXM1SIDL                          0x25
R_W                               00000002
Read2510                          0000024B
RegAdr2510                        00000069
RegData2510                       00000068
RegMask2510                       0000006A
ResNOC                            000005F8
Reset2510                         00000243
ResetBoosttime                    000005CE
Reset_NOC1                        000006F5
Ret                               00000291
RetFromPMin                       00000639
RetFromPreCha                     000005DB
Rts2510                           00000262
S                                 00000003
SEN                               00000000
SMALLSTEP_H                       0x02
SMALLSTEP_L                       0x00
SMP                               00000007
SPBRG                             00000099
SPBRG_P                           00000019
SPEN                              00000007
SPIBufBase                        00000056
SPIBufPointer                     00000055
SPICounter                        00000054
SPI_WriteD                        
SPI_WriteL                        
SREN                              00000005
SSPADD                            00000093
SSPADD_P                          00000013
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 100


SYMBOL TABLE
  LABEL                             VALUE 

SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
SSPSTAT_P                         00000014
STATUS                            00000003
STATUS2510                        0xA0
STEP_H                            000000A3
STEP_L                            000000A4
SYNC                              00000004
SendCANTX0                        00000307
SetPSFup                          0000042A
SetVSFup                          00000420
Shortexit                         000006D3
SmallDelta                        00000162
StartPWM                          000005A9
State                             00000701
Status2510                        0000026A
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TAMBH                             00000042
TAMBL                             00000043
TCH                               00000046
TCL                               00000047
TEC                               0x1C
TMR0                              00000001
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 101


SYMBOL TABLE
  LABEL                             VALUE 

TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA_P                           00000005
TRISB                             00000086
TRISB_P                           00000006
TRISC                             00000087
TRISC_P                           00000007
TRISD                             00000088
TRISD_P                           00000008
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRISE_P                           00000009
TRMT                              00000001
TRUE                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXB0CTRL                          0x30
TXB0D0                            0x36
TXB0D1                            0x37
TXB0D2                            0x38
TXB0D3                            0x39
TXB0D4                            0x3A
TXB0D5                            0x3B
TXB0D6                            0x3C
TXB0D7                            0x3D
TXB0DLC                           0x35
TXB0EID0                          0x34
TXB0EID8                          0x33
TXB0SIDH                          0x31
TXB0SIDL                          0x32
TXB1CTRL                          0x40
TXB1D0                            0x46
TXB1D1                            0x47
TXB1D2                            0x48
TXB1D3                            0x49
TXB1D4                            0x4A
TXB1D5                            0x4B
TXB1D6                            0x4C
TXB1D7                            0x4D
TXB1DLC                           0x45
TXB1EID0                          0x44
TXB1EID8                          0x43
TXB1SIDH                          0x41
TXB1SIDL                          0x42
TXB2CTRL                          0x50
TXB2D0                            0x56
TXB2D1                            0x57
TXB2D2                            0x58
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 102


SYMBOL TABLE
  LABEL                             VALUE 

TXB2D3                            0x59
TXB2D4                            0x5A
TXB2D5                            0x5B
TXB2D6                            0x5C
TXB2D7                            0x5D
TXB2DLC                           0x55
TXB2EID0                          0x54
TXB2EID8                          0x53
TXB2SIDH                          0x51
TXB2SIDL                          0x52
TXBASEADR                         0xEE
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXRTSCTRL                         0x0D
TXSTA                             00000098
TXSTA_P                           00000018
TXupdate                          000003FD
Tacq                              0x0C
Temp0                             00000071
Temp1                             00000072
Temp2                             00000073
Temp3                             00000074
Temp4                             00000076
Temp5                             00000077
TrackingLoop                      000003D0
Twocomplement                     000005D3
UA                                00000001
UI0H                              00000020
UI0L                              00000021
UI1H                              00000022
UI1L                              00000023
UI2H                              00000024
UI2L                              00000025
UI3H                              00000026
UI3L                              00000027
UIF0H                             00000028
UIF0L                             00000029
UIF1H                             0000002A
UIF1L                             0000002B
UNDV                              GenFlags,0
UO0H                              0000002C
UO0L                              0000002D
UO1H                              0000002E
UO1L                              0000002F
UO2H                              00000030
UO2L                              00000031
UO3H                              00000032
UO3L                              00000033
UOFH                              00000034
UOFL                              00000035
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 103


SYMBOL TABLE
  LABEL                             VALUE 

USENSEH                           00000044
USENSEL                           00000045
UVState                           000003E7
UmppH                             0x02
UmppL                             0x3B
UnderVoltage                      000005FF
UnderVoltageloop                  00000610
UnsyncIin                         000000BE
UnsyncTamb                        000000E0
UnsyncTcooler                     000000F6
UnsyncUin                         0000007A
UnsyncUout                        0000009C
UpdateCAN                         000001A7
UpdateTX0                         000002D5
VSF                               000000A0
VSFsetup                          00000426
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRITE2510                         0x02
Wait4Connect                      00000565
Wait4Connect1                     0000063D
WaitADC0C                         0000007E
WaitADC1C                         000000A0
WaitADC2C                         000000C2
WaitADC4C                         000000E4
WaitADC6C                         000000FA
WaitNormal                        00000287
WaitSPIExchange                   000003AB
Waitboost                         00000075
WhitinLimit                       00000392
Write2510                         00000257
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_C                                STATUS,0
_CCP1IE_P                         PIE1_P,CCP1IE
_CCP1IF                           PIR1,CCP1IF
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DC                               STATUS,1
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_HS_OSC                           00003FFE
_INTE                             INTCON,INTE
_INTF                             INTCON,INTF
_IRP                              STATUS,7
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 104


SYMBOL TABLE
  LABEL                             VALUE 

_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PD                               STATUS,3
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RBIE                             INTCON,RBIE
_RBIF                             INTCON,RBIF
_RCIE_P                           PIE1_P,RCIE
_RCIF                             PIR1,RCIF
_RC_OSC                           00003FFF
_RP0                              STATUS,5
_RP1                              STATUS,6
_SSPIE_P                          PIE1_P,SSPIE
_SSPIF                            PIR1,SSPIE
_T0IE                             INTCON,T0IE
_T0IF                             INTCON,T0IF
_TMR1IE_P                         PIE1_P,TMR1IE
_TMR1IF                           PIR1,TMR1IF
_TMR2IE_P                         PIE1_P,TMR2IE
_TMR2IF                           PIR1,TMR2IF
_TO                               STATUS,4
_TXIE_P                           PIE1_P,TXIE
_TXIF                             PIR1,TXIF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_XT_OSC                           00003FFD
_Z                                STATUS,2
__16F877                          00000001
bL2bV                             
bV2bV                             
disableInt                        
enableInt                         
initClr1                          00000299
initClr2                          0000029F
jmpC                              
jmpClr                            
jmpFeqF                           
jmpFeqL                           
jmpFeqZ                           
jmpFgeL                           
jmpFgtL                           
jmpFleF                           
jmpFleL                           
jmpFltF                           
jmpFltL                           
jmpFneF                           
jmpFneL                           
jmpFneZ                           
jmpNC                             
jmpNZ                             
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 105


SYMBOL TABLE
  LABEL                             VALUE 

jmpSet                            
jmpWeqF                           
jmpWeqL                           
jmpWeqZ                           
jmpWgeF                           
jmpWgeL                           
jmpWgtF                           
jmpWgtL                           
jmpWleF                           
jmpWleL                           
jmpWltF                           
jmpWltL                           
jmpWneF                           
jmpWneL                           
jmpWneZ                           
jmpZ                              
m_jump1                           0000011C
m_jump2                           00000127
monOVC1                           000006E6
skipC                             
skipClr                           
skipFeqF                          
skipFeqL                          
skipFeqZ                          
skipFneF                          
skipFneL                          
skipFneZ                          
skipNC                            
skipNZ                            
skipSet                           
skipWeqZ                          
skipWneZ                          
skipZ                             
tb2Nottb                          
tb2tb                             
toggle                            
trABAT                            CANCTRL,4
trABTF0                           TXB0CTRL,6
trABTF1                           TXB1CTRL,6
trABTF2                           TXB2CTRL,6
trB0BFE                           BFPCTRL,2
trB0BFM                           BFPCTRL,0
trB0BFS                           BFPCTRL,4
trB0RTS                           BFPCTRL,3
trB0RTSM                          BFPCTRL,0
trB1BFE                           BFPCTRL,3
trB1BFM                           BFPCTRL,1
trB1BFS                           BFPCTRL,5
trB1RTS                           BFPCTRL,4
trB1RTSM                          BFPCTRL,1
trB2RTS                           BFPCTRL,5
trB2RTSM                          BFPCTRL,2
trBRP0                            CNF1,0
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 106


SYMBOL TABLE
  LABEL                             VALUE 

trBRP1                            CNF1,1
trBRP2                            CNF1,2
trBRP3                            CNF1,3
trBRP4                            CNF1,4
trBRP5                            CNF1,5
trBTLMODE                         CNF2,7
trBUKT00                          RXB0CTRL,1
trBUKT01                          RXB0CTRL,2
trCLKEN                           CANCTRL,2
trCLKPRE0                         CANCTRL,0
trCLKPRE1                         CANCTRL,1
trERRIE                           CANINTE,5
trERRIF                           CANINTF,5
trEWARN                           EFLG,0
trFILHIT00                        RXB0CTRL,0
trFILHIT10                        RXB1CTRL,0
trFILHIT11                        RXB1CTRL,1
trFILHIT12                        RXB1CTRL,2
trICOD0                           CANSTAT,1
trICOD1                           CANSTAT,2
trICOD2                           CANSTAT,3
trMERRE                           CANINTE,7
trMERRF                           CANINTF,7
trMLOA0                           TXB0CTRL,5
trMLOA1                           TXB1CTRL,5
trMLOA2                           TXB2CTRL,5
trOPMOD0                          CANSTAT,5
trOPMOD1                          CANSTAT,6
trOPMOD2                          CANSTAT,7
trPHSEG0                          CNF2,0
trPHSEG1                          CNF2,1
trPHSEG10                         CNF2,3
trPHSEG11                         CNF2,4
trPHSEG12                         CNF2,5
trPHSEG2                          CNF2,2
trPHSEG20                         CNF3,0
trPHSEG21                         CNF3,1
trPHSEG22                         CNF3,2
trREQOP0                          CANCTRL,5
trREQOP1                          CANCTRL,6
trREQOP2                          CANCTRL,7
trRX0IE                           CANINTE,0
trRX0IF                           CANINTF,0
trRX0OVR                          EFLG,6
trRX1IE                           CANINTE,1
trRX1IF                           CANINTF,1
trRX1OVR                          EFLG,7
trRXEP                            EFLG,3
trRXM00                           RXB0CTRL,5
trRXM01                           RXB1CTRL,5
trRXM10                           RXB0CTRL,6
trRXM11                           RXB1CTRL,6
trRXRTR0                          RXB0CTRL,3
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 107


SYMBOL TABLE
  LABEL                             VALUE 

trRXRTR1                          RXB1CTRL,3
trRXWAR                           EFLG,1
trSAM                             CNF2,6
trSJW0                            CNF1,6
trSJW1                            CNF1,7
trTX0IE                           CANINTE,2
trTX0IF                           CANINTF,2
trTX1IE                           CANINTE,3
trTX1IF                           CANINTF,3
trTX2IE                           CANINTE,4
trTX2IF                           CANINTF,4
trTXB0                            EFLG,5
trTXEP                            EFLG,4
trTXERR0                          TXB0CTRL,4
trTXERR1                          TXB1CTRL,4
trTXERR2                          TXB2CTRL,4
trTXP00                           TXB0CTRL,0
trTXP01                           TXB1CTRL,0
trTXP02                           TXB2CTRL,0
trTXP10                           TXB0CTRL,1
trTXP11                           TXB1CTRL,1
trTXP12                           TXB2CTRL,1
trTXREQ0                          TXB0CTRL,3
trTXREQ1                          TXB1CTRL,3
trTXREQ2                          TXB2CTRL,3
trTXWAR                           EFLG,2
trWAKFIL                          CNF3,6
trWAKIE                           CANINTE,6
trWAKIF                           CANINTF,6
w2                                00000048
w4                                00000039
w5                                00000023
wait                              00000022
wait1s                            00000043
wait20ms                          00000036
waitforedge                       
waittoboost                       0000002A
wb                                0000002E


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XX--XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM 03.90 Released                             MPPTNGV6.ASM   4-11-2005  16:21:06         PAGE 108


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XX-------------- ---------------- ---------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:  1792
Program Memory Words Free:  6400


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     4 reported,    44 suppressed

